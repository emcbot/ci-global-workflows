Begin waveinit.sh at Mon Apr 29 14:44:29 UTC 2024
+ waveinit.sh[6]: echo

+ waveinit.sh[7]: echo '=============== START TO SOURCE FV3GFS WORKFLOW MODULES ==============='
=============== START TO SOURCE FV3GFS WORKFLOW MODULES ===============
+ waveinit.sh[9]: . /work2/noaa/stmp/CI/HERCULES/2548/gefs/ush/load_ufswm_modules.sh
++ load_ufswm_modules.sh[4]: [[ NO == \N\O ]]
++ load_ufswm_modules.sh[5]: echo 'Loading modules quietly...'
Loading modules quietly...
++ load_ufswm_modules.sh[6]: set +x
Running "module reset". Resetting modules to system default. The following $MODULEPATH directories have been removed: None

Currently Loaded Modules:
  1) contrib/0.1                      25) crtm/2.4.0
  2) intel-oneapi-compilers/2023.1.0  26) g2/3.4.5
  3) stack-intel/2021.9.0             27) g2tmpl/1.10.2
  4) intel-oneapi-mpi/2021.9.0        28) ip/4.3.0
  5) stack-intel-oneapi-mpi/2021.9.0  29) sp/2.3.3
  6) curl/8.1.2                       30) w3emc/2.10.0
  7) cmake/3.23.1                     31) gftl/1.10.0
  8) libjpeg/2.1.0                    32) gftl-shared/1.6.1
  9) jasper/2.0.32                    33) fargparse/1.5.0
 10) zlib/1.2.13                      34) pigz/2.7
 11) libpng/1.6.37                    35) tar/1.34
 12) hdf5/1.14.0                      36) gettext/0.21.1
 13) snappy/1.1.10                    37) libxcrypt/4.4.35
 14) zstd/1.5.2                       38) sqlite/3.42.0
 15) c-blosc/1.21.4                   39) util-linux-uuid/2.38.1
 16) netcdf-c/4.9.2                   40) python/3.10.8
 17) netcdf-fortran/4.6.0             41) mapl/2.40.3-esmf-8.5.0
 18) parallel-netcdf/1.12.2           42) scotch/7.0.4
 19) parallelio/2.5.10                43) ufs_common
 20) esmf/8.5.0                       44) nccmp/1.9.0.1
 21) fms/2023.02.01                   45) ufs_hercules.intel
 22) bacio/2.4.1                      46) w3nco/2.4.1
 23) crtm-fix/2.4.0_emc               47) prod_util/1.2.2
 24) git-lfs/3.1.2                    48) wgrib2/3.1.1

 

+ waveinit.sh[10]: status=0
+ waveinit.sh[11]: [[ 0 -ne 0 ]]
+ waveinit.sh[13]: export job=waveinit
+ waveinit.sh[13]: job=waveinit
+ waveinit.sh[14]: export jobid=waveinit.434910
+ waveinit.sh[14]: jobid=waveinit.434910
+ waveinit.sh[17]: echo

+ waveinit.sh[18]: echo '=============== START TO RUN WAVE INIT ==============='
=============== START TO RUN WAVE INIT ===============
+ waveinit.sh[20]: /work2/noaa/stmp/CI/HERCULES/2548/gefs/jobs/JGLOBAL_WAVE_INIT
Begin JGLOBAL_WAVE_INIT at Mon Apr 29 14:44:33 UTC 2024
+ JGLOBAL_WAVE_INIT[4]: source /work2/noaa/stmp/CI/HERCULES/2548/gefs/ush/jjob_header.sh -e waveinit -c 'base wave waveinit'
++ jjob_header.sh[44]: OPTIND=1
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[46]: case "${option}" in
++ jjob_header.sh[48]: env_job=waveinit
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[46]: case "${option}" in
++ jjob_header.sh[47]: read -ra configs
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[59]: shift 4
++ jjob_header.sh[61]: [[ -z waveinit ]]
++ jjob_header.sh[69]: export DATA=/work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc/waveinit.434910
++ jjob_header.sh[69]: DATA=/work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc/waveinit.434910
++ jjob_header.sh[70]: [[ YES == \Y\E\S ]]
++ jjob_header.sh[71]: rm -rf /work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc/waveinit.434910
++ jjob_header.sh[73]: mkdir -p /work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc/waveinit.434910
++ jjob_header.sh[74]: cd /work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc/waveinit.434910
++ jjob_header.sh[80]: export cycle=t12z
++ jjob_header.sh[80]: cycle=t12z
++ jjob_header.sh[81]: setpdy.sh
sed: can't read /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/date/t12z: No such file or directory
Source PDY script to export PDYm7, ..., PDY, ..., PDYp7 variables.
++ jjob_header.sh[82]: source ./PDY
+++ PDY[1]: export PDYm7=20210316
+++ PDY[1]: PDYm7=20210316
+++ PDY[2]: export PDYm6=20210317
+++ PDY[2]: PDYm6=20210317
+++ PDY[3]: export PDYm5=20210318
+++ PDY[3]: PDYm5=20210318
+++ PDY[4]: export PDYm4=20210319
+++ PDY[4]: PDYm4=20210319
+++ PDY[5]: export PDYm3=20210320
+++ PDY[5]: PDYm3=20210320
+++ PDY[6]: export PDYm2=20210321
+++ PDY[6]: PDYm2=20210321
+++ PDY[7]: export PDYm1=20210322
+++ PDY[7]: PDYm1=20210322
+++ PDY[8]: export PDY=20210323
+++ PDY[8]: PDY=20210323
+++ PDY[9]: export PDYp1=20210324
+++ PDY[9]: PDYp1=20210324
+++ PDY[10]: export PDYp2=20210325
+++ PDY[10]: PDYp2=20210325
+++ PDY[11]: export PDYp3=20210326
+++ PDY[11]: PDYp3=20210326
+++ PDY[12]: export PDYp4=20210327
+++ PDY[12]: PDYp4=20210327
+++ PDY[13]: export PDYp5=20210328
+++ PDY[13]: PDYp5=20210328
+++ PDY[14]: export PDYp6=20210329
+++ PDY[14]: PDYp6=20210329
+++ PDY[15]: export PDYp7=20210330
+++ PDY[15]: PDYp7=20210330
++ jjob_header.sh[88]: export pid=436270
++ jjob_header.sh[88]: pid=436270
++ jjob_header.sh[89]: export pgmout=OUTPUT.436270
++ jjob_header.sh[89]: pgmout=OUTPUT.436270
++ jjob_header.sh[90]: export pgmerr=errfile
++ jjob_header.sh[90]: pgmerr=errfile
++ jjob_header.sh[96]: export EXPDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc
++ jjob_header.sh[96]: EXPDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc/config.base
+++ config.base[6]: echo 'BEGIN: config.base'
BEGIN: config.base
+++ config.base[9]: export machine=HERCULES
+++ config.base[9]: machine=HERCULES
+++ config.base[12]: export RUN_ENVIR=emc
+++ config.base[12]: RUN_ENVIR=emc
+++ config.base[15]: export ACCOUNT=nems
+++ config.base[15]: ACCOUNT=nems
+++ config.base[16]: export QUEUE=batch
+++ config.base[16]: QUEUE=batch
+++ config.base[17]: export QUEUE_SERVICE=batch
+++ config.base[17]: QUEUE_SERVICE=batch
+++ config.base[18]: export PARTITION_BATCH=hercules
+++ config.base[18]: PARTITION_BATCH=hercules
+++ config.base[19]: export PARTITION_SERVICE=service
+++ config.base[19]: PARTITION_SERVICE=service
+++ config.base[22]: export HPSS_PROJECT=emc-global
+++ config.base[22]: HPSS_PROJECT=emc-global
+++ config.base[25]: export HOMEgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs
+++ config.base[25]: HOMEgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs
+++ config.base[26]: export EXECgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/exec
+++ config.base[26]: EXECgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/exec
+++ config.base[27]: export FIXgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/fix
+++ config.base[27]: FIXgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/fix
+++ config.base[28]: export PARMgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/parm
+++ config.base[28]: PARMgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/parm
+++ config.base[29]: export SCRgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/scripts
+++ config.base[29]: SCRgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/scripts
+++ config.base[30]: export USHgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/ush
+++ config.base[30]: USHgfs=/work2/noaa/stmp/CI/HERCULES/2548/gefs/ush
+++ config.base[35]: export PACKAGEROOT=/work/noaa/global/glopara/nwpara
+++ config.base[35]: PACKAGEROOT=/work/noaa/global/glopara/nwpara
+++ config.base[36]: export COMROOT=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT
+++ config.base[36]: COMROOT=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT
+++ config.base[37]: export COMINsyn=/work/noaa/global/glopara/com/gfs/prod/syndat
+++ config.base[37]: COMINsyn=/work/noaa/global/glopara/com/gfs/prod/syndat
+++ config.base[38]: export BASE_CPLIC=/work/noaa/global/glopara/data/ICSDIR/prototype_ICs
+++ config.base[38]: BASE_CPLIC=/work/noaa/global/glopara/data/ICSDIR/prototype_ICs
+++ config.base[41]: export HOMEDIR=/work/noaa/global/mterry
+++ config.base[41]: HOMEDIR=/work/noaa/global/mterry
+++ config.base[42]: export STMP=/work/noaa/stmp/mterry
+++ config.base[42]: STMP=/work/noaa/stmp/mterry
+++ config.base[43]: export PTMP=/work/noaa/stmp/mterry
+++ config.base[43]: PTMP=/work/noaa/stmp/mterry
+++ config.base[44]: export NOSCRUB=/work/noaa/global/mterry
+++ config.base[44]: NOSCRUB=/work/noaa/global/mterry
+++ config.base[47]: export BASE_GIT=/work/noaa/global/glopara/git
+++ config.base[47]: BASE_GIT=/work/noaa/global/glopara/git
+++ config.base[50]: export DO_BUFRSND=NO
+++ config.base[50]: DO_BUFRSND=NO
+++ config.base[51]: export DO_GEMPAK=NO
+++ config.base[51]: DO_GEMPAK=NO
+++ config.base[52]: export DO_AWIPS=NO
+++ config.base[52]: DO_AWIPS=NO
+++ config.base[58]: export REALTIME=YES
+++ config.base[58]: REALTIME=YES
+++ config.base[61]: export MODE=forecast-only
+++ config.base[61]: MODE=forecast-only
+++ config.base[70]: export HOMEpost=/work2/noaa/stmp/CI/HERCULES/2548/gefs
+++ config.base[70]: HOMEpost=/work2/noaa/stmp/CI/HERCULES/2548/gefs
+++ config.base[73]: export 'NCP=/bin/cp -p'
+++ config.base[73]: NCP='/bin/cp -p'
+++ config.base[74]: export NMV=/bin/mv
+++ config.base[74]: NMV=/bin/mv
+++ config.base[75]: export 'NLN=/bin/ln -sf'
+++ config.base[75]: NLN='/bin/ln -sf'
+++ config.base[76]: export VERBOSE=YES
+++ config.base[76]: VERBOSE=YES
+++ config.base[77]: export KEEPDATA=NO
+++ config.base[77]: KEEPDATA=NO
+++ config.base[78]: export DEBUG_POSTSCRIPT=NO
+++ config.base[78]: DEBUG_POSTSCRIPT=NO
+++ config.base[79]: export CHGRP_RSTPROD=YES
+++ config.base[79]: CHGRP_RSTPROD=YES
+++ config.base[80]: export 'CHGRP_CMD=chgrp rstprod'
+++ config.base[80]: CHGRP_CMD='chgrp rstprod'
+++ config.base[81]: export NCDUMP=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.5.1/envs/unified-env/install/intel/2021.9.0/netcdf-c-4.9.2-blbiwxx/bin/ncdump
+++ config.base[81]: NCDUMP=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.5.1/envs/unified-env/install/intel/2021.9.0/netcdf-c-4.9.2-blbiwxx/bin/ncdump
+++ config.base[82]: export NCLEN=/work2/noaa/stmp/CI/HERCULES/2548/gefs/ush/getncdimlen
+++ config.base[82]: NCLEN=/work2/noaa/stmp/CI/HERCULES/2548/gefs/ush/getncdimlen
+++ config.base[85]: export BASE_ENV=/work2/noaa/stmp/CI/HERCULES/2548/gefs/env
+++ config.base[85]: BASE_ENV=/work2/noaa/stmp/CI/HERCULES/2548/gefs/env
+++ config.base[86]: export BASE_JOB=/work2/noaa/stmp/CI/HERCULES/2548/gefs/jobs/rocoto
+++ config.base[86]: BASE_JOB=/work2/noaa/stmp/CI/HERCULES/2548/gefs/jobs/rocoto
+++ config.base[89]: export SDATE=2021032312
+++ config.base[89]: SDATE=2021032312
+++ config.base[90]: export EDATE=2021032312
+++ config.base[90]: EDATE=2021032312
+++ config.base[91]: export EXP_WARM_START=.false.
+++ config.base[91]: EXP_WARM_START=.false.
+++ config.base[92]: export assim_freq=6
+++ config.base[92]: assim_freq=6
+++ config.base[93]: export PSLOT=C48_S2SWA_gefs_19605adc
+++ config.base[93]: PSLOT=C48_S2SWA_gefs_19605adc
+++ config.base[94]: export EXPDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc
+++ config.base[94]: EXPDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc
+++ config.base[95]: export ROTDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc
+++ config.base[95]: ROTDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc
+++ config.base[97]: export DATAROOT=/work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc
+++ config.base[97]: DATAROOT=/work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc
+++ config.base[98]: export RUNDIR=/work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc
+++ config.base[98]: RUNDIR=/work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc
+++ config.base[99]: export ARCDIR=/work/noaa/global/mterry/archive/C48_S2SWA_gefs_19605adc
+++ config.base[99]: ARCDIR=/work/noaa/global/mterry/archive/C48_S2SWA_gefs_19605adc
+++ config.base[100]: export ATARDIR=/work/noaa/global/mterry/archive_rotdir/C48_S2SWA_gefs_19605adc
+++ config.base[100]: ATARDIR=/work/noaa/global/mterry/archive_rotdir/C48_S2SWA_gefs_19605adc
+++ config.base[103]: export envir=prod
+++ config.base[103]: envir=prod
+++ config.base[104]: export NET=gefs
+++ config.base[104]: NET=gefs
+++ config.base[105]: export RUN=gefs
+++ config.base[105]: RUN=gefs
+++ config.base[111]: source /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc/config.com
++++ config.com[4]: echo 'BEGIN: config.com'
BEGIN: config.com
++++ config.com[37]: [[ emc == \n\c\o ]]
++++ config.com[41]: COM_OBS_TMPL='${ROTDIR}/${RUN}.${YMD}/${HH}/obs'
++++ config.com[42]: COM_RTOFS_TMPL='${DMPDIR}'
++++ config.com[44]: declare -rx COM_OBS_TMPL COM_RTOFS_TMPL
++++ config.com[45]: declare -rx 'COM_OBSDMP_TMPL=${DMPDIR}/${DUMP}${DUMP_SUFFIX}.${YMD}/${HH}/atmos'
++++ config.com[47]: COM_BASE='${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}'
++++ config.com[49]: declare -rx 'COM_TOP_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}'
++++ config.com[51]: declare -rx 'COM_CONF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/conf'
++++ config.com[52]: declare -rx 'COM_ATMOS_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/input'
++++ config.com[53]: declare -rx 'COM_ATMOS_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/restart'
++++ config.com[54]: declare -rx 'COM_ATMOS_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/atmos'
++++ config.com[55]: declare -rx 'COM_SNOW_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/snow'
++++ config.com[56]: declare -rx 'COM_ATMOS_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/history'
++++ config.com[57]: declare -rx 'COM_ATMOS_MASTER_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/master'
++++ config.com[58]: declare -rx 'COM_ATMOS_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/grib2'
++++ config.com[59]: declare -rx 'COM_ATMOS_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/grib2/${GRID}'
++++ config.com[60]: declare -rx 'COM_ATMOS_BUFR_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/bufr'
++++ config.com[61]: declare -rx 'COM_ATMOS_GEMPAK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/gempak/${GRID}'
++++ config.com[62]: declare -rx 'COM_ATMOS_GENESIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/cyclone/genesis_vital'
++++ config.com[63]: declare -rx 'COM_ATMOS_TRACK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/cyclone/tracks'
++++ config.com[64]: declare -rx 'COM_ATMOS_GOES_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/goes_sim'
++++ config.com[65]: declare -rx 'COM_ATMOS_IMAGERY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/imagery'
++++ config.com[66]: declare -rx 'COM_ATMOS_OZNMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/oznmon'
++++ config.com[67]: declare -rx 'COM_ATMOS_RADMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/radmon'
++++ config.com[68]: declare -rx 'COM_ATMOS_MINMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/minmon'
++++ config.com[69]: declare -rx 'COM_ATMOS_WMO_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/wmo'
++++ config.com[71]: declare -rx 'COM_WAVE_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/restart'
++++ config.com[72]: declare -rx 'COM_WAVE_PREP_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/prep'
++++ config.com[73]: declare -rx 'COM_WAVE_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/history'
++++ config.com[74]: declare -rx 'COM_WAVE_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/gridded'
++++ config.com[75]: declare -rx 'COM_WAVE_STATION_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/station'
++++ config.com[76]: declare -rx 'COM_WAVE_GEMPAK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/gempak'
++++ config.com[77]: declare -rx 'COM_WAVE_WMO_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/wmo'
++++ config.com[79]: declare -rx 'COM_OCEAN_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/history'
++++ config.com[80]: declare -rx 'COM_OCEAN_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/restart'
++++ config.com[81]: declare -rx 'COM_OCEAN_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/input'
++++ config.com[82]: declare -rx 'COM_OCEAN_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/ocean'
++++ config.com[83]: declare -rx 'COM_OCEAN_NETCDF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/netcdf'
++++ config.com[84]: declare -rx 'COM_OCEAN_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/grib2'
++++ config.com[85]: declare -rx 'COM_OCEAN_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/grib2/${GRID}'
++++ config.com[87]: declare -rx 'COM_ICE_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/input'
++++ config.com[88]: declare -rx 'COM_ICE_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/history'
++++ config.com[89]: declare -rx 'COM_ICE_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/restart'
++++ config.com[90]: declare -rx 'COM_ICE_NETCDF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/netcdf'
++++ config.com[91]: declare -rx 'COM_ICE_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/grib2'
++++ config.com[92]: declare -rx 'COM_ICE_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/grib2/${GRID}'
++++ config.com[94]: declare -rx 'COM_CHEM_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/chem/history'
++++ config.com[95]: declare -rx 'COM_CHEM_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/chem'
++++ config.com[97]: declare -rx 'COM_MED_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/med/restart'
+++ config.base[114]: export 'ERRSCRIPT=eval [[ $err = 0 ]]'
+++ config.base[114]: ERRSCRIPT='eval [[ $err = 0 ]]'
+++ config.base[115]: export LOGSCRIPT=
+++ config.base[115]: LOGSCRIPT=
+++ config.base[118]: export 'REDOUT=1>'
+++ config.base[118]: REDOUT='1>'
+++ config.base[119]: export 'REDERR=2>'
+++ config.base[119]: REDERR='2>'
+++ config.base[121]: export SENDECF=NO
+++ config.base[121]: SENDECF=NO
+++ config.base[122]: export SENDSDM=NO
+++ config.base[122]: SENDSDM=NO
+++ config.base[123]: export SENDDBN_NTC=NO
+++ config.base[123]: SENDDBN_NTC=NO
+++ config.base[124]: export SENDDBN=NO
+++ config.base[124]: SENDDBN=NO
+++ config.base[125]: export DBNROOT=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.5.1/envs/unified-env/install/intel/2021.9.0/prod-util-1.2.2-jcwh3rw/fakedbn
+++ config.base[125]: DBNROOT=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.5.1/envs/unified-env/install/intel/2021.9.0/prod-util-1.2.2-jcwh3rw/fakedbn
+++ config.base[128]: export APP=S2SWA
+++ config.base[128]: APP=S2SWA
+++ config.base[131]: export DO_ATM=YES
+++ config.base[131]: DO_ATM=YES
+++ config.base[132]: export DO_COUPLED=NO
+++ config.base[132]: DO_COUPLED=NO
+++ config.base[133]: export DO_WAVE=NO
+++ config.base[133]: DO_WAVE=NO
+++ config.base[134]: export DO_OCN=NO
+++ config.base[134]: DO_OCN=NO
+++ config.base[135]: export DO_ICE=NO
+++ config.base[135]: DO_ICE=NO
+++ config.base[136]: export DO_AERO=NO
+++ config.base[136]: DO_AERO=NO
+++ config.base[137]: export WAVE_CDUMP=
+++ config.base[137]: WAVE_CDUMP=
+++ config.base[138]: export DOBNDPNT_WAVE=NO
+++ config.base[138]: DOBNDPNT_WAVE=NO
+++ config.base[139]: export FRAC_GRID=.true.
+++ config.base[139]: FRAC_GRID=.true.
+++ config.base[142]: export OPS_RES=C768
+++ config.base[142]: OPS_RES=C768
+++ config.base[145]: export LEVS=128
+++ config.base[145]: LEVS=128
+++ config.base[146]: export CASE=C48
+++ config.base[146]: CASE=C48
+++ config.base[147]: export CASE_ENS=C48
+++ config.base[147]: CASE_ENS=C48
+++ config.base[148]: export OCNRES=500
+++ config.base[148]: OCNRES=500
+++ config.base[149]: export ICERES=500
+++ config.base[149]: ICERES=500
+++ config.base[151]: case "${CASE}" in
+++ config.base[153]: export waveGRD=glo_500
+++ config.base[153]: waveGRD=glo_500
+++ config.base[170]: case "${APP}" in
+++ config.base[187]: export DO_COUPLED=YES
+++ config.base[187]: DO_COUPLED=YES
+++ config.base[188]: export DO_OCN=YES
+++ config.base[188]: DO_OCN=YES
+++ config.base[189]: export DO_ICE=YES
+++ config.base[189]: DO_ICE=YES
+++ config.base[191]: [[ S2SWA =~ A$ ]]
+++ config.base[192]: export DO_AERO=YES
+++ config.base[192]: DO_AERO=YES
+++ config.base[195]: [[ S2SWA =~ ^S2SW ]]
+++ config.base[196]: export DO_WAVE=YES
+++ config.base[196]: DO_WAVE=YES
+++ config.base[197]: export WAVE_CDUMP=both
+++ config.base[197]: WAVE_CDUMP=both
+++ config.base[198]: export cplwav2atm=.true.
+++ config.base[198]: cplwav2atm=.true.
+++ config.base[208]: export gfs_cyc=1
+++ config.base[208]: gfs_cyc=1
+++ config.base[211]: export FHMIN_GFS=0
+++ config.base[211]: FHMIN_GFS=0
+++ config.base[212]: export FHMIN=0
+++ config.base[212]: FHMIN=0
+++ config.base[213]: export FHMAX_GFS=120
+++ config.base[213]: FHMAX_GFS=120
+++ config.base[214]: export FHOUT_GFS=6
+++ config.base[214]: FHOUT_GFS=6
+++ config.base[215]: export FHMAX_HF_GFS=0
+++ config.base[215]: FHMAX_HF_GFS=0
+++ config.base[216]: export FHOUT_HF_GFS=1
+++ config.base[216]: FHOUT_HF_GFS=1
+++ config.base[217]: export FHOUT_OCNICE_GFS=6
+++ config.base[217]: FHOUT_OCNICE_GFS=6
+++ config.base[218]: ((  gfs_cyc != 0  ))
+++ config.base[219]: export STEP_GFS=24
+++ config.base[219]: STEP_GFS=24
+++ config.base[223]: export ILPOST=1
+++ config.base[223]: ILPOST=1
+++ config.base[225]: export FHMIN_ENKF=0
+++ config.base[225]: FHMIN_ENKF=0
+++ config.base[226]: export FHMAX_ENKF=120
+++ config.base[226]: FHMAX_ENKF=120
+++ config.base[227]: export FHOUT_ENKF=6
+++ config.base[227]: FHOUT_ENKF=6
+++ config.base[230]: export restart_interval_gfs=12
+++ config.base[230]: restart_interval_gfs=12
+++ config.base[235]: export QUILTING=.true.
+++ config.base[235]: QUILTING=.true.
+++ config.base[236]: export OUTPUT_GRID=gaussian_grid
+++ config.base[236]: OUTPUT_GRID=gaussian_grid
+++ config.base[237]: export WRITE_DOPOST=.true.
+++ config.base[237]: WRITE_DOPOST=.true.
+++ config.base[238]: export WRITE_NSFLIP=.true.
+++ config.base[238]: WRITE_NSFLIP=.true.
+++ config.base[241]: export FLTFILEGFS=/work2/noaa/stmp/CI/HERCULES/2548/gefs/parm/post/postxconfig-NT-GEFS.txt
+++ config.base[241]: FLTFILEGFS=/work2/noaa/stmp/CI/HERCULES/2548/gefs/parm/post/postxconfig-NT-GEFS.txt
+++ config.base[242]: export FLTFILEGFSF00=/work2/noaa/stmp/CI/HERCULES/2548/gefs/parm/post/postxconfig-NT-GEFS-F00.txt
+++ config.base[242]: FLTFILEGFSF00=/work2/noaa/stmp/CI/HERCULES/2548/gefs/parm/post/postxconfig-NT-GEFS-F00.txt
+++ config.base[245]: export imp_physics=8
+++ config.base[245]: imp_physics=8
+++ config.base[249]: export DO_JEDIATMVAR=NO
+++ config.base[249]: DO_JEDIATMVAR=NO
+++ config.base[250]: export DO_JEDIATMENS=NO
+++ config.base[250]: DO_JEDIATMENS=NO
+++ config.base[251]: export DO_JEDIOCNVAR=NO
+++ config.base[251]: DO_JEDIOCNVAR=NO
+++ config.base[252]: export DO_JEDISNOWDA=NO
+++ config.base[252]: DO_JEDISNOWDA=NO
+++ config.base[253]: export DO_MERGENSST=NO
+++ config.base[253]: DO_MERGENSST=NO
+++ config.base[256]: export NMEM_ENS=2
+++ config.base[256]: NMEM_ENS=2
+++ config.base[260]: export ENSMEM=000
+++ config.base[260]: ENSMEM=000
+++ config.base[261]: export MEMDIR=mem000
+++ config.base[261]: MEMDIR=mem000
+++ config.base[265]: export USE_OCN_PERTURB_FILES=false
+++ config.base[265]: USE_OCN_PERTURB_FILES=false
+++ config.base[267]: export DOIAU=NO
+++ config.base[267]: DOIAU=NO
+++ config.base[269]: [[ .false. = \.\f\a\l\s\e\. ]]
+++ config.base[270]: export IAU_FHROT=0
+++ config.base[270]: IAU_FHROT=0
+++ config.base[280]: export DONST=YES
+++ config.base[280]: DONST=YES
+++ config.base[281]: [[ YES = \Y\E\S ]]
+++ config.base[281]: export 'FNTSFA=        '
+++ config.base[281]: FNTSFA='        '
+++ config.base[284]: export nst_anl=.true.
+++ config.base[284]: nst_anl=.true.
+++ config.base[287]: export MAKE_NSSTBUFR=NO
+++ config.base[287]: MAKE_NSSTBUFR=NO
+++ config.base[290]: export MAKE_ACFTBUFR=NO
+++ config.base[290]: MAKE_ACFTBUFR=NO
+++ config.base[293]: export DO_METP=NO
+++ config.base[293]: DO_METP=NO
+++ config.base[294]: export DO_FIT2OBS=NO
+++ config.base[294]: DO_FIT2OBS=NO
+++ config.base[297]: export HPSSARCH=NO
+++ config.base[297]: HPSSARCH=NO
+++ config.base[298]: export LOCALARCH=NO
+++ config.base[298]: LOCALARCH=NO
+++ config.base[299]: [[ NO = \Y\E\S ]]
+++ config.base[303]: export ARCH_CYC=00
+++ config.base[303]: ARCH_CYC=00
+++ config.base[304]: export ARCH_WARMICFREQ=4
+++ config.base[304]: ARCH_WARMICFREQ=4
+++ config.base[305]: export ARCH_FCSTICFREQ=1
+++ config.base[305]: ARCH_FCSTICFREQ=1
+++ config.base[307]: export DELETE_COM_IN_ARCHIVE_JOB=YES
+++ config.base[307]: DELETE_COM_IN_ARCHIVE_JOB=YES
+++ config.base[309]: echo 'END: config.base'
END: config.base
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc/config.wave
+++ config.wave[6]: echo 'BEGIN: config.wave'
BEGIN: config.wave
+++ config.wave[13]: export CDUMPwave=gefswave
+++ config.wave[13]: CDUMPwave=gefswave
+++ config.wave[16]: export CDUMPRSTwave=gdas
+++ config.wave[16]: CDUMPRSTwave=gdas
+++ config.wave[19]: export waveGRDN=1
+++ config.wave[19]: waveGRDN=1
+++ config.wave[20]: export waveGRDG=10
+++ config.wave[20]: waveGRDG=10
+++ config.wave[21]: export USE_WAV_RMP=NO
+++ config.wave[21]: USE_WAV_RMP=NO
+++ config.wave[22]: export waveMULTIGRID=.false.
+++ config.wave[22]: waveMULTIGRID=.false.
+++ config.wave[23]: export MESH_WAV=mesh.glo_500.nc
+++ config.wave[23]: MESH_WAV=mesh.glo_500.nc
+++ config.wave[24]: export 'waveesmfGRD= '
+++ config.wave[24]: waveesmfGRD=' '
+++ config.wave[27]: case "${waveGRD}" in
+++ config.wave[67]: export waveinterpGRD=
+++ config.wave[67]: waveinterpGRD=
+++ config.wave[68]: export wavepostGRD=glo_500
+++ config.wave[68]: wavepostGRD=glo_500
+++ config.wave[69]: export waveuoutpGRD=glo_500
+++ config.wave[69]: waveuoutpGRD=glo_500
+++ config.wave[78]: export WAVEWND_DID=
+++ config.wave[78]: WAVEWND_DID=
+++ config.wave[79]: export WAVEWND_FID=
+++ config.wave[79]: WAVEWND_FID=
+++ config.wave[82]: export FHMAX_WAV=120
+++ config.wave[82]: FHMAX_WAV=120
+++ config.wave[83]: export WAVHINDH=0
+++ config.wave[83]: WAVHINDH=0
+++ config.wave[84]: export FHMIN_WAV=0
+++ config.wave[84]: FHMIN_WAV=0
+++ config.wave[85]: export FHOUT_WAV=3
+++ config.wave[85]: FHOUT_WAV=3
+++ config.wave[86]: export FHMAX_HF_WAV=120
+++ config.wave[86]: FHMAX_HF_WAV=120
+++ config.wave[87]: export FHOUT_HF_WAV=1
+++ config.wave[87]: FHOUT_HF_WAV=1
+++ config.wave[88]: export FHMAX_WAV_IBP=180
+++ config.wave[88]: FHMAX_WAV_IBP=180
+++ config.wave[89]: ((  FHMAX_WAV < FHMAX_WAV_IBP  ))
+++ config.wave[89]: export FHMAX_WAV_IBP=120
+++ config.wave[89]: FHMAX_WAV_IBP=120
+++ config.wave[92]: export DTFLD_WAV=3600
+++ config.wave[92]: DTFLD_WAV=3600
+++ config.wave[93]: export DTPNT_WAV=3600
+++ config.wave[93]: DTPNT_WAV=3600
+++ config.wave[94]: export FHINCP_WAV=1
+++ config.wave[94]: FHINCP_WAV=1
+++ config.wave[97]: export 'OUTPARS_WAV=WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'
+++ config.wave[97]: OUTPARS_WAV='WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'
+++ config.wave[100]: export WAVHCYC=6
+++ config.wave[100]: WAVHCYC=6
+++ config.wave[101]: export FHMAX_WAV_CUR=192
+++ config.wave[101]: FHMAX_WAV_CUR=192
+++ config.wave[105]: export RSTTYPE_WAV=T
+++ config.wave[105]: RSTTYPE_WAV=T
+++ config.wave[106]: rst_dt_gfs=43200
+++ config.wave[107]: [[ 43200 -gt 0 ]]
+++ config.wave[108]: export DT_1_RST_WAV=0
+++ config.wave[108]: DT_1_RST_WAV=0
+++ config.wave[111]: export DT_2_RST_WAV=43200
+++ config.wave[111]: DT_2_RST_WAV=43200
+++ config.wave[117]: export RSTIOFF_WAV=0
+++ config.wave[117]: RSTIOFF_WAV=0
+++ config.wave[121]: export RUNMEM=-1
+++ config.wave[121]: RUNMEM=-1
+++ config.wave[124]: ((  RUNMEM == -1  ))
+++ config.wave[126]: export waveMEMB=
+++ config.wave[126]: waveMEMB=
+++ config.wave[133]: export WW3ATMINP=CPL
+++ config.wave[133]: WW3ATMINP=CPL
+++ config.wave[134]: [[ YES == \Y\E\S ]]
+++ config.wave[135]: export WW3ICEINP=CPL
+++ config.wave[135]: WW3ICEINP=CPL
+++ config.wave[136]: export WAVEICE_FID=
+++ config.wave[136]: WAVEICE_FID=
+++ config.wave[142]: export WAVECUR_DID=rtofs
+++ config.wave[142]: WAVECUR_DID=rtofs
+++ config.wave[143]: [[ YES == \Y\E\S ]]
+++ config.wave[144]: export WW3CURINP=CPL
+++ config.wave[144]: WW3CURINP=CPL
+++ config.wave[145]: export WAVECUR_FID=
+++ config.wave[145]: WAVECUR_FID=
+++ config.wave[152]: export WW3ATMIENS=F
+++ config.wave[152]: WW3ATMIENS=F
+++ config.wave[153]: export WW3ICEIENS=F
+++ config.wave[153]: WW3ICEIENS=F
+++ config.wave[154]: export WW3CURIENS=F
+++ config.wave[154]: WW3CURIENS=F
+++ config.wave[156]: export GOFILETYPE=1
+++ config.wave[156]: GOFILETYPE=1
+++ config.wave[157]: export POFILETYPE=1
+++ config.wave[157]: POFILETYPE=1
+++ config.wave[161]: export FUNIPNT=T
+++ config.wave[161]: FUNIPNT=T
+++ config.wave[163]: export IOSRV=1
+++ config.wave[163]: IOSRV=1
+++ config.wave[165]: export FPNTPROC=T
+++ config.wave[165]: FPNTPROC=T
+++ config.wave[167]: export FGRDPROC=F
+++ config.wave[167]: FGRDPROC=F
+++ config.wave[169]: export FLAGMASKCOMP=F
+++ config.wave[169]: FLAGMASKCOMP=F
+++ config.wave[171]: export FLAGMASKOUT=F
+++ config.wave[171]: FLAGMASKOUT=F
+++ config.wave[173]: echo 'END: config.wave'
END: config.wave
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc/config.waveinit
+++ config.waveinit[6]: echo 'BEGIN: config.waveinit'
BEGIN: config.waveinit
+++ config.waveinit[9]: . /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C48_S2SWA_gefs_19605adc/config.resources waveinit
++++ config.resources[7]: ((  1 != 1  ))
++++ config.resources[14]: step=waveinit
++++ config.resources[16]: echo 'BEGIN: config.resources'
BEGIN: config.resources
++++ config.resources[18]: case ${machine} in
++++ config.resources[22]: npe_node_max=80
++++ config.resources[51]: export npe_node_max
++++ config.resources[53]: case ${step} in
++++ config.resources[64]: export wtime_waveinit=00:10:00
++++ config.resources[64]: wtime_waveinit=00:10:00
++++ config.resources[65]: export npe_waveinit=12
++++ config.resources[65]: npe_waveinit=12
++++ config.resources[66]: export nth_waveinit=1
++++ config.resources[66]: nth_waveinit=1
++++ config.resources[67]: export npe_node_waveinit=80
++++ config.resources[67]: npe_node_waveinit=80
++++ config.resources[68]: export NTASKS=12
++++ config.resources[68]: NTASKS=12
++++ config.resources[69]: export memory_waveinit=2GB
++++ config.resources[69]: memory_waveinit=2GB
++++ config.resources[281]: echo 'END: config.resources'
END: config.resources
+++ config.waveinit[12]: export sigMODE=init
+++ config.waveinit[12]: sigMODE=init
+++ config.waveinit[14]: echo 'END: config.waveinit'
END: config.waveinit
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[110]: source /work2/noaa/stmp/CI/HERCULES/2548/gefs/env/HERCULES.env waveinit
+++ HERCULES.env[3]: [[ 1 -ne 1 ]]
+++ HERCULES.env[13]: step=waveinit
+++ HERCULES.env[15]: export 'launcher=srun -l --export=ALL'
+++ HERCULES.env[15]: launcher='srun -l --export=ALL'
+++ HERCULES.env[16]: export 'mpmd_opt=--multi-prog --output=mpmd.%j.%t.out'
+++ HERCULES.env[16]: mpmd_opt='--multi-prog --output=mpmd.%j.%t.out'
+++ HERCULES.env[19]: export MPI_BUFS_PER_PROC=2048
+++ HERCULES.env[19]: MPI_BUFS_PER_PROC=2048
+++ HERCULES.env[20]: export MPI_BUFS_PER_HOST=2048
+++ HERCULES.env[20]: MPI_BUFS_PER_HOST=2048
+++ HERCULES.env[21]: export MPI_GROUP_MAX=256
+++ HERCULES.env[21]: MPI_GROUP_MAX=256
+++ HERCULES.env[22]: export MPI_MEMMAP_OFF=1
+++ HERCULES.env[22]: MPI_MEMMAP_OFF=1
+++ HERCULES.env[23]: export MP_STDOUTMODE=ORDERED
+++ HERCULES.env[23]: MP_STDOUTMODE=ORDERED
+++ HERCULES.env[24]: export KMP_AFFINITY=scatter
+++ HERCULES.env[24]: KMP_AFFINITY=scatter
+++ HERCULES.env[25]: export OMP_STACKSIZE=2048000
+++ HERCULES.env[25]: OMP_STACKSIZE=2048000
+++ HERCULES.env[26]: export NTHSTACK=1024000000
+++ HERCULES.env[26]: NTHSTACK=1024000000
+++ HERCULES.env[28]: export I_MPI_EXTRA_FILESYSTEM=1
+++ HERCULES.env[28]: I_MPI_EXTRA_FILESYSTEM=1
+++ HERCULES.env[29]: export I_MPI_EXTRA_FILESYSTEM_LIST=lustre
+++ HERCULES.env[29]: I_MPI_EXTRA_FILESYSTEM_LIST=lustre
+++ HERCULES.env[31]: ulimit -s unlimited
+++ HERCULES.env[32]: ulimit -a
real-time non-blocking time  (microseconds, -R) unlimited
core file size              (blocks, -c) 0
data seg size               (kbytes, -d) unlimited
scheduling priority                 (-e) 0
file size                   (blocks, -f) unlimited
pending signals                     (-i) 2042963
max locked memory           (kbytes, -l) unlimited
max memory size             (kbytes, -m) 2097152
open files                          (-n) 131072
pipe size                (512 bytes, -p) 8
POSIX message queues         (bytes, -q) 819200
real-time priority                  (-r) 0
stack size                  (kbytes, -s) unlimited
cpu time                   (seconds, -t) unlimited
max user processes                  (-u) 1028798
virtual memory              (kbytes, -v) unlimited
file locks                          (-x) unlimited
+++ HERCULES.env[34]: case ${step} in
+++ HERCULES.env[50]: export CFP_MP=YES
+++ HERCULES.env[50]: CFP_MP=YES
+++ HERCULES.env[51]: [[ waveinit = \w\a\v\e\p\r\e\p ]]
+++ HERCULES.env[52]: export 'wavempexec=srun -l --export=ALL'
+++ HERCULES.env[52]: wavempexec='srun -l --export=ALL'
+++ HERCULES.env[53]: export 'wave_mpmd=--multi-prog --output=mpmd.%j.%t.out'
+++ HERCULES.env[53]: wave_mpmd='--multi-prog --output=mpmd.%j.%t.out'
++ jjob_header.sh[111]: status=0
++ jjob_header.sh[112]: ((  status != 0  ))
+ JGLOBAL_WAVE_INIT[8]: export errchk=err_chk
+ JGLOBAL_WAVE_INIT[8]: errchk=err_chk
+ JGLOBAL_WAVE_INIT[10]: export MP_PULSE=0
+ JGLOBAL_WAVE_INIT[10]: MP_PULSE=0
+ JGLOBAL_WAVE_INIT[13]: YMD=20210323
+ JGLOBAL_WAVE_INIT[13]: HH=12
+ JGLOBAL_WAVE_INIT[13]: declare_from_tmpl -rx COM_WAVE_PREP
+ bash_utils.sh[35]: [[ NO == \N\O ]]
+ bash_utils.sh[35]: set +x
declare_from_tmpl :: COM_WAVE_PREP=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem000/model_data/wave/prep
+ JGLOBAL_WAVE_INIT[15]: mkdir -m 775 -p /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem000/model_data/wave/prep
+ JGLOBAL_WAVE_INIT[18]: export 'wavempexec=srun -l --export=ALL'
+ JGLOBAL_WAVE_INIT[18]: wavempexec='srun -l --export=ALL'
+ JGLOBAL_WAVE_INIT[19]: export 'wave_mpmd=--multi-prog --output=mpmd.%j.%t.out'
+ JGLOBAL_WAVE_INIT[19]: wave_mpmd='--multi-prog --output=mpmd.%j.%t.out'
+ JGLOBAL_WAVE_INIT[22]: /work2/noaa/stmp/CI/HERCULES/2548/gefs/scripts/exgfs_wave_init.sh
Begin exgfs_wave_init.sh at Mon Apr 29 14:44:39 UTC 2024
+ exgfs_wave_init.sh[33]: err=0
+ exgfs_wave_init.sh[35]: cd /work/noaa/stmp/mterry/RUNDIRS/C48_S2SWA_gefs_19605adc/waveinit.434910
+ exgfs_wave_init.sh[37]: set +x
 
                      ********************************
                      *** MWW3 INIT CONFIG  SCRIPT ***
                      ********************************
                          Initial configuration script
                       Model identifier : gefswave
 
Starting at : Mon Apr 29 09:44:39 CDT 2024
 
+ exgfs_wave_init.sh[51]: '[' -z 12 ']'
+ exgfs_wave_init.sh[57]: set +x
 
 Script set to run with 12 tasks 
 
+ exgfs_wave_init.sh[67]: set +x
Preparing input files :
-----------------------
 
+ exgfs_wave_init.sh[75]: nmoddef=0
+ exgfs_wave_init.sh[77]: rm -f cmdfile
+ exgfs_wave_init.sh[78]: touch cmdfile
+ exgfs_wave_init.sh[79]: chmod 744 cmdfile
+ exgfs_wave_init.sh[82]: array=($WAVECUR_FID $WAVEICE_FID $WAVEWND_FID $waveuoutpGRD $waveGRD $waveesmfGRD $wavepostGRD $waveinterpGRD)
++ exgfs_wave_init.sh[83]: printf '%s\n' glo_500 glo_500 glo_500
++ exgfs_wave_init.sh[83]: tr '\n' ' '
++ exgfs_wave_init.sh[83]: sort -u
+ exgfs_wave_init.sh[83]: grdALL='glo_500 '
+ exgfs_wave_init.sh[85]: for grdID in ${grdALL}
+ exgfs_wave_init.sh[86]: [[ -f /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem000/model_data/wave/prep/gefswave.mod_def.glo_500 ]]
+ exgfs_wave_init.sh[87]: set +x
 Mod def file for glo_500 found in /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem000/model_data/wave/prep. copying ....
+ exgfs_wave_init.sh[90]: cp /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem000/model_data/wave/prep/gefswave.mod_def.glo_500 mod_def.glo_500
+ exgfs_wave_init.sh[142]: '[' 0 -gt 0 ']'
+ exgfs_wave_init.sh[192]: for grdID in ${grdALL}
+ exgfs_wave_init.sh[193]: [[ -f /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem000/model_data/wave/prep/gefswave.mod_def.glo_500 ]]
+ exgfs_wave_init.sh[194]: set +x
 
 mod_def.glo_500 succesfully created/copied 
 
+ exgfs_wave_init.sh[214]: ((  NMEM_ENS > 0  ))
++ exgfs_wave_init.sh[215]: seq -f %03g 1 2
+ exgfs_wave_init.sh[215]: for mem in $(seq -f "%03g" 1 "${NMEM_ENS}")
+ exgfs_wave_init.sh[216]: MEMDIR=mem001
+ exgfs_wave_init.sh[216]: YMD=20210323
+ exgfs_wave_init.sh[216]: HH=12
+ exgfs_wave_init.sh[216]: declare_from_tmpl COM_WAVE_PREP_MEM:COM_WAVE_PREP_TMPL
+ bash_utils.sh[35]: [[ NO == \N\O ]]
+ bash_utils.sh[35]: set +x
declare_from_tmpl :: COM_WAVE_PREP_MEM=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem001/model_data/wave/prep
+ exgfs_wave_init.sh[217]: mkdir -p /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem001/model_data/wave/prep
+ exgfs_wave_init.sh[218]: for grdID in ${grdALL}
+ exgfs_wave_init.sh[219]: /bin/ln -sf /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem000/model_data/wave/prep/gefswave.mod_def.glo_500 /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem001/model_data/wave/prep/
+ exgfs_wave_init.sh[215]: for mem in $(seq -f "%03g" 1 "${NMEM_ENS}")
+ exgfs_wave_init.sh[216]: MEMDIR=mem002
+ exgfs_wave_init.sh[216]: YMD=20210323
+ exgfs_wave_init.sh[216]: HH=12
+ exgfs_wave_init.sh[216]: declare_from_tmpl COM_WAVE_PREP_MEM:COM_WAVE_PREP_TMPL
+ bash_utils.sh[35]: [[ NO == \N\O ]]
+ bash_utils.sh[35]: set +x
declare_from_tmpl :: COM_WAVE_PREP_MEM=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem002/model_data/wave/prep
+ exgfs_wave_init.sh[217]: mkdir -p /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem002/model_data/wave/prep
+ exgfs_wave_init.sh[218]: for grdID in ${grdALL}
+ exgfs_wave_init.sh[219]: /bin/ln -sf /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem000/model_data/wave/prep/gefswave.mod_def.glo_500 /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem002/model_data/wave/prep/
/bin/ln: /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C48_S2SWA_gefs_19605adc/gefs.20210323/12/mem002/model_data/wave/prep/: cannot overwrite directory
+ exgfs_wave_init.sh[1]: postamble exgfs_wave_init.sh 1714401879 1
+ preamble.sh[70]: set +x
End exgfs_wave_init.sh at 14:44:40 with error code 1 (time elapsed: 00:00:01)
+ JGLOBAL_WAVE_INIT[1]: postamble JGLOBAL_WAVE_INIT 1714401873 1
+ preamble.sh[70]: set +x
End JGLOBAL_WAVE_INIT at 14:44:40 with error code 1 (time elapsed: 00:00:07)
+ waveinit.sh[1]: postamble waveinit.sh 1714401869 1
+ preamble.sh[70]: set +x
End waveinit.sh at 14:44:40 with error code 1 (time elapsed: 00:00:11)

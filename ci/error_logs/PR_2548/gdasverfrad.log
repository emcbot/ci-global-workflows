Begin verfrad.sh at Mon Apr 29 15:31:24 UTC 2024
+ verfrad.sh[7]: source /work2/noaa/stmp/CI/HERCULES/2548/gfs/ush/load_fv3gfs_modules.sh
++ load_fv3gfs_modules.sh[4]: [[ NO == \N\O ]]
++ load_fv3gfs_modules.sh[5]: echo 'Loading modules quietly...'
Loading modules quietly...
++ load_fv3gfs_modules.sh[6]: set +x
Running "module reset". Resetting modules to system default. The following $MODULEPATH directories have been removed: None

Currently Loaded Modules:
  1) contrib/0.1                      41) grib-util/1.3.0
  2) intel-oneapi-compilers/2023.1.0  42) g2tmpl/1.10.2
  3) stack-intel/2021.9.0             43) gsi-ncdiag/1.1.2
  4) intel-oneapi-mpi/2021.9.0        44) crtm-fix/2.4.0.1_emc
  5) stack-intel-oneapi-mpi/2021.9.0  45) git-lfs/3.1.2
  6) intel-oneapi-mkl/2023.1.0        46) crtm/2.4.0.1
  7) zlib/1.2.13                      47) openblas/0.3.24
  8) pigz/2.7                         48) py-setuptools/63.4.3
  9) zstd/1.5.2                       49) py-numpy/1.23.4
 10) tar/1.34                         50) bufr/11.7.0
 11) gettext/0.21.1                   51) gmake/4.2.1
 12) libxcrypt/4.4.35                 52) wgrib2/2.0.8
 13) sqlite/3.43.2                    53) py-f90nml/1.4.3
 14) util-linux-uuid/2.38.1           54) py-cftime/1.0.3.4
 15) python/3.11.6                    55) py-netcdf4/1.5.8
 16) libjpeg/2.1.0                    56) libyaml/0.2.5
 17) jasper/2.0.32                    57) py-pyyaml/6.0
 18) libpng/1.6.37                    58) py-markupsafe/2.1.3
 19) openjpeg/2.3.1                   59) py-jinja2/3.1.2
 20) eccodes/2.32.0                   60) py-bottleneck/1.3.7
 21) fftw/3.3.10                      61) py-numexpr/2.8.4
 22) nghttp2/1.57.0                   62) py-et-xmlfile/1.0.1
 23) curl/8.4.0                       63) py-openpyxl/3.1.2
 24) proj/9.2.1                       64) py-pytz/2023.3
 25) udunits/2.2.28                   65) py-pyxlsb/1.0.10
 26) cdo/2.2.0                        66) py-xlrd/2.0.1
 27) hdf5/1.14.0                      67) py-xlsxwriter/3.1.7
 28) snappy/1.1.10                    68) py-xlwt/1.3.0
 29) c-blosc/1.21.5                   69) py-pandas/1.5.3
 30) netcdf-c/4.9.2                   70) py-six/1.16.0
 31) netcdf-fortran/4.6.1             71) py-python-dateutil/2.8.2
 32) antlr/2.7.7                      72) g2c/1.6.4
 33) gsl/2.7.1                        73) netcdf-cxx4/4.3.1
 34) nco/5.0.6                        74) met/9.1.3
 35) bacio/2.4.1                      75) metplus/3.1.1
 36) w3emc/2.10.0                     76) py-packaging/23.1
 37) prod_util/2.1.1                  77) py-xarray/2023.7.0
 38) g2/3.4.5                         78) prepobs/1.0.1
 39) sp/2.5.0                         79) fit2obs/1.0.0
 40) ip/4.3.0                         80) module_base.hercules

 

+ verfrad.sh[8]: status=0
+ verfrad.sh[9]: ((  status != 0  ))
+ verfrad.sh[11]: export job=verfrad
+ verfrad.sh[11]: job=verfrad
+ verfrad.sh[12]: export jobid=verfrad.1530116
+ verfrad.sh[12]: jobid=verfrad.1530116
+ verfrad.sh[16]: echo

+ verfrad.sh[17]: echo '=============== START TO RUN RADMON DATA EXTRACTION ==============='
=============== START TO RUN RADMON DATA EXTRACTION ===============
+ verfrad.sh[19]: /work2/noaa/stmp/CI/HERCULES/2548/gfs/jobs/JGDAS_ATMOS_VERFRAD
Begin JGDAS_ATMOS_VERFRAD at Mon Apr 29 15:31:26 UTC 2024
+ JGDAS_ATMOS_VERFRAD[7]: source /work2/noaa/stmp/CI/HERCULES/2548/gfs/ush/jjob_header.sh -e verfrad -c 'base verfrad'
++ jjob_header.sh[44]: OPTIND=1
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[46]: case "${option}" in
++ jjob_header.sh[48]: env_job=verfrad
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[46]: case "${option}" in
++ jjob_header.sh[47]: read -ra configs
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[59]: shift 4
++ jjob_header.sh[61]: [[ -z verfrad ]]
++ jjob_header.sh[69]: export DATA=/work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc/verfrad.1530116
++ jjob_header.sh[69]: DATA=/work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc/verfrad.1530116
++ jjob_header.sh[70]: [[ YES == \Y\E\S ]]
++ jjob_header.sh[71]: rm -rf /work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc/verfrad.1530116
++ jjob_header.sh[73]: mkdir -p /work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc/verfrad.1530116
++ jjob_header.sh[74]: cd /work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc/verfrad.1530116
++ jjob_header.sh[80]: export cycle=t00z
++ jjob_header.sh[80]: cycle=t00z
++ jjob_header.sh[81]: setpdy.sh
sed: can't read /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/date/t00z: No such file or directory
 completed cleanly
 completed cleanly
Source PDY script to export PDYm7, ..., PDY, ..., PDYp7 variables.
++ jjob_header.sh[82]: source ./PDY
+++ PDY[1]: export PDYm7=20211214
+++ PDY[1]: PDYm7=20211214
+++ PDY[2]: export PDYm6=20211215
+++ PDY[2]: PDYm6=20211215
+++ PDY[3]: export PDYm5=20211216
+++ PDY[3]: PDYm5=20211216
+++ PDY[4]: export PDYm4=20211217
+++ PDY[4]: PDYm4=20211217
+++ PDY[5]: export PDYm3=20211218
+++ PDY[5]: PDYm3=20211218
+++ PDY[6]: export PDYm2=20211219
+++ PDY[6]: PDYm2=20211219
+++ PDY[7]: export PDYm1=20211220
+++ PDY[7]: PDYm1=20211220
+++ PDY[8]: export PDY=20211221
+++ PDY[8]: PDY=20211221
+++ PDY[9]: export PDYp1=20211222
+++ PDY[9]: PDYp1=20211222
+++ PDY[10]: export PDYp2=20211223
+++ PDY[10]: PDYp2=20211223
+++ PDY[11]: export PDYp3=20211224
+++ PDY[11]: PDYp3=20211224
+++ PDY[12]: export PDYp4=20211225
+++ PDY[12]: PDYp4=20211225
+++ PDY[13]: export PDYp5=20211226
+++ PDY[13]: PDYp5=20211226
+++ PDY[14]: export PDYp6=20211227
+++ PDY[14]: PDYp6=20211227
+++ PDY[15]: export PDYp7=20211228
+++ PDY[15]: PDYp7=20211228
++ jjob_header.sh[88]: export pid=1532072
++ jjob_header.sh[88]: pid=1532072
++ jjob_header.sh[89]: export pgmout=OUTPUT.1532072
++ jjob_header.sh[89]: pgmout=OUTPUT.1532072
++ jjob_header.sh[90]: export pgmerr=errfile
++ jjob_header.sh[90]: pgmerr=errfile
++ jjob_header.sh[96]: export EXPDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C96C48_hybatmDA_19605adc
++ jjob_header.sh[96]: EXPDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C96C48_hybatmDA_19605adc
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C96C48_hybatmDA_19605adc/config.base
+++ config.base[6]: echo 'BEGIN: config.base'
BEGIN: config.base
+++ config.base[9]: export machine=HERCULES
+++ config.base[9]: machine=HERCULES
+++ config.base[12]: export RUN_ENVIR=emc
+++ config.base[12]: RUN_ENVIR=emc
+++ config.base[15]: export ACCOUNT=nems
+++ config.base[15]: ACCOUNT=nems
+++ config.base[16]: export QUEUE=batch
+++ config.base[16]: QUEUE=batch
+++ config.base[17]: export QUEUE_SERVICE=batch
+++ config.base[17]: QUEUE_SERVICE=batch
+++ config.base[18]: export PARTITION_BATCH=hercules
+++ config.base[18]: PARTITION_BATCH=hercules
+++ config.base[19]: export PARTITION_SERVICE=service
+++ config.base[19]: PARTITION_SERVICE=service
+++ config.base[22]: export HPSS_PROJECT=emc-global
+++ config.base[22]: HPSS_PROJECT=emc-global
+++ config.base[25]: export HOMEgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs
+++ config.base[25]: HOMEgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs
+++ config.base[26]: export EXECgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/exec
+++ config.base[26]: EXECgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/exec
+++ config.base[27]: export FIXgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix
+++ config.base[27]: FIXgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix
+++ config.base[28]: export PARMgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/parm
+++ config.base[28]: PARMgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/parm
+++ config.base[29]: export SCRgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/scripts
+++ config.base[29]: SCRgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/scripts
+++ config.base[30]: export USHgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/ush
+++ config.base[30]: USHgfs=/work2/noaa/stmp/CI/HERCULES/2548/gfs/ush
+++ config.base[32]: export FIXam=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/am
+++ config.base[32]: FIXam=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/am
+++ config.base[33]: export FIXaer=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/aer
+++ config.base[33]: FIXaer=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/aer
+++ config.base[34]: export FIXcpl=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/cpl
+++ config.base[34]: FIXcpl=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/cpl
+++ config.base[35]: export FIXlut=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/lut
+++ config.base[35]: FIXlut=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/lut
+++ config.base[36]: export FIXorog=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/orog
+++ config.base[36]: FIXorog=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/orog
+++ config.base[37]: export FIXcice=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/cice
+++ config.base[37]: FIXcice=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/cice
+++ config.base[38]: export FIXmom=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/mom6
+++ config.base[38]: FIXmom=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/mom6
+++ config.base[39]: export FIXreg2grb2=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/reg2grb2
+++ config.base[39]: FIXreg2grb2=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/reg2grb2
+++ config.base[40]: export FIXugwd=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/ugwd
+++ config.base[40]: FIXugwd=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/ugwd
+++ config.base[41]: export FIXgdas=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/gdas
+++ config.base[41]: FIXgdas=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/gdas
+++ config.base[46]: export PACKAGEROOT=/work/noaa/global/glopara/nwpara
+++ config.base[46]: PACKAGEROOT=/work/noaa/global/glopara/nwpara
+++ config.base[47]: export COMROOT=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT
+++ config.base[47]: COMROOT=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT
+++ config.base[48]: export COMINsyn=/work/noaa/global/glopara/com/gfs/prod/syndat
+++ config.base[48]: COMINsyn=/work/noaa/global/glopara/com/gfs/prod/syndat
+++ config.base[49]: export DMPDIR=/work/noaa/rstprod/dump
+++ config.base[49]: DMPDIR=/work/noaa/rstprod/dump
+++ config.base[50]: export BASE_CPLIC=/work/noaa/global/glopara/data/ICSDIR/prototype_ICs
+++ config.base[50]: BASE_CPLIC=/work/noaa/global/glopara/data/ICSDIR/prototype_ICs
+++ config.base[54]: export COMINecmwf=/work/noaa/global/glopara/data/external_gempak/ecmwf
+++ config.base[54]: COMINecmwf=/work/noaa/global/glopara/data/external_gempak/ecmwf
+++ config.base[55]: export COMINnam=/work/noaa/global/glopara/data/external_gempak/nam
+++ config.base[55]: COMINnam=/work/noaa/global/glopara/data/external_gempak/nam
+++ config.base[56]: export COMINukmet=/work/noaa/global/glopara/data/external_gempak/ukmet
+++ config.base[56]: COMINukmet=/work/noaa/global/glopara/data/external_gempak/ukmet
+++ config.base[59]: export HOMEDIR=/work/noaa/global/mterry
+++ config.base[59]: HOMEDIR=/work/noaa/global/mterry
+++ config.base[60]: export STMP=/work/noaa/stmp/mterry
+++ config.base[60]: STMP=/work/noaa/stmp/mterry
+++ config.base[61]: export PTMP=/work/noaa/stmp/mterry
+++ config.base[61]: PTMP=/work/noaa/stmp/mterry
+++ config.base[62]: export NOSCRUB=/work/noaa/global/mterry
+++ config.base[62]: NOSCRUB=/work/noaa/global/mterry
+++ config.base[65]: export BASE_GIT=/work/noaa/global/glopara/git
+++ config.base[65]: BASE_GIT=/work/noaa/global/glopara/git
+++ config.base[68]: export DO_GOES=NO
+++ config.base[68]: DO_GOES=NO
+++ config.base[69]: export DO_BUFRSND=NO
+++ config.base[69]: DO_BUFRSND=NO
+++ config.base[70]: export DO_GEMPAK=NO
+++ config.base[70]: DO_GEMPAK=NO
+++ config.base[71]: export DO_AWIPS=NO
+++ config.base[71]: DO_AWIPS=NO
+++ config.base[72]: export DO_NPOESS=NO
+++ config.base[72]: DO_NPOESS=NO
+++ config.base[73]: export DO_TRACKER=YES
+++ config.base[73]: DO_TRACKER=YES
+++ config.base[74]: export DO_GENESIS=YES
+++ config.base[74]: DO_GENESIS=YES
+++ config.base[75]: export DO_GENESIS_FSU=NO
+++ config.base[75]: DO_GENESIS_FSU=NO
+++ config.base[76]: export DO_VERFOZN=YES
+++ config.base[76]: DO_VERFOZN=YES
+++ config.base[77]: export DO_VERFRAD=YES
+++ config.base[77]: DO_VERFRAD=YES
+++ config.base[78]: export DO_VMINMON=YES
+++ config.base[78]: DO_VMINMON=YES
+++ config.base[79]: export DO_MOS=NO
+++ config.base[79]: DO_MOS=NO
+++ config.base[85]: export REALTIME=YES
+++ config.base[85]: REALTIME=YES
+++ config.base[88]: export MODE=cycled
+++ config.base[88]: MODE=cycled
+++ config.base[97]: export FIXgsi=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/gsi
+++ config.base[97]: FIXgsi=/work2/noaa/stmp/CI/HERCULES/2548/gfs/fix/gsi
+++ config.base[98]: export HOMEpost=/work2/noaa/stmp/CI/HERCULES/2548/gfs
+++ config.base[98]: HOMEpost=/work2/noaa/stmp/CI/HERCULES/2548/gfs
+++ config.base[99]: export HOMEobsproc=/work/noaa/global/glopara/git/obsproc/v1.1.2
+++ config.base[99]: HOMEobsproc=/work/noaa/global/glopara/git/obsproc/v1.1.2
+++ config.base[102]: export 'NCP=/bin/cp -p'
+++ config.base[102]: NCP='/bin/cp -p'
+++ config.base[103]: export NMV=/bin/mv
+++ config.base[103]: NMV=/bin/mv
+++ config.base[104]: export 'NLN=/bin/ln -sf'
+++ config.base[104]: NLN='/bin/ln -sf'
+++ config.base[105]: export VERBOSE=YES
+++ config.base[105]: VERBOSE=YES
+++ config.base[106]: export KEEPDATA=NO
+++ config.base[106]: KEEPDATA=NO
+++ config.base[107]: export DEBUG_POSTSCRIPT=NO
+++ config.base[107]: DEBUG_POSTSCRIPT=NO
+++ config.base[108]: export CHGRP_RSTPROD=YES
+++ config.base[108]: CHGRP_RSTPROD=YES
+++ config.base[109]: export 'CHGRP_CMD=chgrp rstprod'
+++ config.base[109]: CHGRP_CMD='chgrp rstprod'
+++ config.base[110]: export NCDUMP=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/netcdf-c-4.9.2-tslbcfy/bin/ncdump
+++ config.base[110]: NCDUMP=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/netcdf-c-4.9.2-tslbcfy/bin/ncdump
+++ config.base[111]: export NCLEN=/work2/noaa/stmp/CI/HERCULES/2548/gfs/ush/getncdimlen
+++ config.base[111]: NCLEN=/work2/noaa/stmp/CI/HERCULES/2548/gfs/ush/getncdimlen
+++ config.base[114]: export BASE_ENV=/work2/noaa/stmp/CI/HERCULES/2548/gfs/env
+++ config.base[114]: BASE_ENV=/work2/noaa/stmp/CI/HERCULES/2548/gfs/env
+++ config.base[115]: export BASE_JOB=/work2/noaa/stmp/CI/HERCULES/2548/gfs/jobs/rocoto
+++ config.base[115]: BASE_JOB=/work2/noaa/stmp/CI/HERCULES/2548/gfs/jobs/rocoto
+++ config.base[118]: export SDATE=2021122018
+++ config.base[118]: SDATE=2021122018
+++ config.base[119]: export EDATE=2021122106
+++ config.base[119]: EDATE=2021122106
+++ config.base[120]: export EXP_WARM_START=.false.
+++ config.base[120]: EXP_WARM_START=.false.
+++ config.base[121]: export assim_freq=6
+++ config.base[121]: assim_freq=6
+++ config.base[122]: export PSLOT=C96C48_hybatmDA_19605adc
+++ config.base[122]: PSLOT=C96C48_hybatmDA_19605adc
+++ config.base[123]: export EXPDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C96C48_hybatmDA_19605adc
+++ config.base[123]: EXPDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C96C48_hybatmDA_19605adc
+++ config.base[124]: export ROTDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc
+++ config.base[124]: ROTDIR=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc
+++ config.base[125]: export ROTDIR_DUMP=YES
+++ config.base[125]: ROTDIR_DUMP=YES
+++ config.base[126]: export DUMP_SUFFIX=
+++ config.base[126]: DUMP_SUFFIX=
+++ config.base[127]: [[ 2021122100 -ge 2019092100 ]]
+++ config.base[127]: [[ 2021122100 -le 2019110700 ]]
+++ config.base[130]: export DATAROOT=/work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc
+++ config.base[130]: DATAROOT=/work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc
+++ config.base[131]: export RUNDIR=/work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc
+++ config.base[131]: RUNDIR=/work/noaa/stmp/mterry/RUNDIRS/C96C48_hybatmDA_19605adc
+++ config.base[132]: export ARCDIR=/work/noaa/global/mterry/archive/C96C48_hybatmDA_19605adc
+++ config.base[132]: ARCDIR=/work/noaa/global/mterry/archive/C96C48_hybatmDA_19605adc
+++ config.base[133]: export ATARDIR=/work/noaa/global/mterry/archive_rotdir/C96C48_hybatmDA_19605adc
+++ config.base[133]: ATARDIR=/work/noaa/global/mterry/archive_rotdir/C96C48_hybatmDA_19605adc
+++ config.base[136]: export envir=prod
+++ config.base[136]: envir=prod
+++ config.base[137]: export NET=gfs
+++ config.base[137]: NET=gfs
+++ config.base[138]: export RUN=gdas
+++ config.base[138]: RUN=gdas
+++ config.base[144]: source /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C96C48_hybatmDA_19605adc/config.com
++++ config.com[4]: echo 'BEGIN: config.com'
BEGIN: config.com
++++ config.com[37]: [[ emc == \n\c\o ]]
++++ config.com[41]: COM_OBS_TMPL='${ROTDIR}/${RUN}.${YMD}/${HH}/obs'
++++ config.com[42]: COM_RTOFS_TMPL='${DMPDIR}'
++++ config.com[44]: declare -rx COM_OBS_TMPL COM_RTOFS_TMPL
++++ config.com[45]: declare -rx 'COM_OBSDMP_TMPL=${DMPDIR}/${DUMP}${DUMP_SUFFIX}.${YMD}/${HH}/atmos'
++++ config.com[47]: COM_BASE='${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}'
++++ config.com[49]: declare -rx 'COM_TOP_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}'
++++ config.com[51]: declare -rx 'COM_CONF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/conf'
++++ config.com[52]: declare -rx 'COM_ATMOS_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/input'
++++ config.com[53]: declare -rx 'COM_ATMOS_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/restart'
++++ config.com[54]: declare -rx 'COM_ATMOS_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/atmos'
++++ config.com[55]: declare -rx 'COM_SNOW_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/snow'
++++ config.com[56]: declare -rx 'COM_ATMOS_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/history'
++++ config.com[57]: declare -rx 'COM_ATMOS_MASTER_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/master'
++++ config.com[58]: declare -rx 'COM_ATMOS_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/grib2'
++++ config.com[59]: declare -rx 'COM_ATMOS_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/grib2/${GRID}'
++++ config.com[60]: declare -rx 'COM_ATMOS_BUFR_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/bufr'
++++ config.com[61]: declare -rx 'COM_ATMOS_GEMPAK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/gempak/${GRID}'
++++ config.com[62]: declare -rx 'COM_ATMOS_GENESIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/cyclone/genesis_vital'
++++ config.com[63]: declare -rx 'COM_ATMOS_TRACK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/cyclone/tracks'
++++ config.com[64]: declare -rx 'COM_ATMOS_GOES_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/goes_sim'
++++ config.com[65]: declare -rx 'COM_ATMOS_IMAGERY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/imagery'
++++ config.com[66]: declare -rx 'COM_ATMOS_OZNMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/oznmon'
++++ config.com[67]: declare -rx 'COM_ATMOS_RADMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/radmon'
++++ config.com[68]: declare -rx 'COM_ATMOS_MINMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/minmon'
++++ config.com[69]: declare -rx 'COM_ATMOS_WMO_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/wmo'
++++ config.com[71]: declare -rx 'COM_WAVE_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/restart'
++++ config.com[72]: declare -rx 'COM_WAVE_PREP_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/prep'
++++ config.com[73]: declare -rx 'COM_WAVE_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/history'
++++ config.com[74]: declare -rx 'COM_WAVE_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/gridded'
++++ config.com[75]: declare -rx 'COM_WAVE_STATION_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/station'
++++ config.com[76]: declare -rx 'COM_WAVE_GEMPAK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/gempak'
++++ config.com[77]: declare -rx 'COM_WAVE_WMO_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/wmo'
++++ config.com[79]: declare -rx 'COM_OCEAN_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/history'
++++ config.com[80]: declare -rx 'COM_OCEAN_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/restart'
++++ config.com[81]: declare -rx 'COM_OCEAN_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/input'
++++ config.com[82]: declare -rx 'COM_OCEAN_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/ocean'
++++ config.com[83]: declare -rx 'COM_OCEAN_NETCDF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/netcdf'
++++ config.com[84]: declare -rx 'COM_OCEAN_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/grib2'
++++ config.com[85]: declare -rx 'COM_OCEAN_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/grib2/${GRID}'
++++ config.com[87]: declare -rx 'COM_ICE_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/input'
++++ config.com[88]: declare -rx 'COM_ICE_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/history'
++++ config.com[89]: declare -rx 'COM_ICE_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/restart'
++++ config.com[90]: declare -rx 'COM_ICE_NETCDF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/netcdf'
++++ config.com[91]: declare -rx 'COM_ICE_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/grib2'
++++ config.com[92]: declare -rx 'COM_ICE_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/grib2/${GRID}'
++++ config.com[94]: declare -rx 'COM_CHEM_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/chem/history'
++++ config.com[95]: declare -rx 'COM_CHEM_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/chem'
++++ config.com[97]: declare -rx 'COM_MED_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/med/restart'
+++ config.base[147]: export 'ERRSCRIPT=eval [[ $err = 0 ]]'
+++ config.base[147]: ERRSCRIPT='eval [[ $err = 0 ]]'
+++ config.base[148]: export LOGSCRIPT=
+++ config.base[148]: LOGSCRIPT=
+++ config.base[151]: export 'REDOUT=1>'
+++ config.base[151]: REDOUT='1>'
+++ config.base[152]: export 'REDERR=2>'
+++ config.base[152]: REDERR='2>'
+++ config.base[154]: export SENDECF=NO
+++ config.base[154]: SENDECF=NO
+++ config.base[155]: export SENDSDM=NO
+++ config.base[155]: SENDSDM=NO
+++ config.base[156]: export SENDDBN_NTC=NO
+++ config.base[156]: SENDDBN_NTC=NO
+++ config.base[157]: export SENDDBN=NO
+++ config.base[157]: SENDDBN=NO
+++ config.base[158]: export DBNROOT=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/prod-util-2.1.1-ddlo2cq/fakedbn
+++ config.base[158]: DBNROOT=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/prod-util-2.1.1-ddlo2cq/fakedbn
+++ config.base[161]: export APP=ATM
+++ config.base[161]: APP=ATM
+++ config.base[163]: shopt -s extglob
+++ config.base[165]: case "${RUN}" in
+++ config.base[175]: shopt -u extglob
+++ config.base[178]: export DO_ATM=YES
+++ config.base[178]: DO_ATM=YES
+++ config.base[179]: export DO_COUPLED=NO
+++ config.base[179]: DO_COUPLED=NO
+++ config.base[180]: export DO_WAVE=NO
+++ config.base[180]: DO_WAVE=NO
+++ config.base[181]: export DO_OCN=NO
+++ config.base[181]: DO_OCN=NO
+++ config.base[182]: export DO_ICE=NO
+++ config.base[182]: DO_ICE=NO
+++ config.base[183]: export DO_AERO=NO
+++ config.base[183]: DO_AERO=NO
+++ config.base[184]: export WAVE_CDUMP=
+++ config.base[184]: WAVE_CDUMP=
+++ config.base[185]: export DOBNDPNT_WAVE=NO
+++ config.base[185]: DOBNDPNT_WAVE=NO
+++ config.base[186]: export FRAC_GRID=.true.
+++ config.base[186]: FRAC_GRID=.true.
+++ config.base[189]: export OPS_RES=C768
+++ config.base[189]: OPS_RES=C768
+++ config.base[192]: export LEVS=128
+++ config.base[192]: LEVS=128
+++ config.base[193]: export CASE=C96
+++ config.base[193]: CASE=C96
+++ config.base[194]: export CASE_ENS=C48
+++ config.base[194]: CASE_ENS=C48
+++ config.base[195]: export OCNRES=500
+++ config.base[195]: OCNRES=500
+++ config.base[196]: export ICERES=500
+++ config.base[196]: ICERES=500
+++ config.base[199]: case "${CASE}" in
+++ config.base[204]: export waveGRD=uglo_100km
+++ config.base[204]: waveGRD=uglo_100km
+++ config.base[218]: case "${APP}" in
+++ config.base[255]: [[ gdas =~ gdas ]]
+++ config.base[256]: export FHCYC=1
+++ config.base[256]: FHCYC=1
+++ config.base[257]: export FTSFS=10
+++ config.base[257]: FTSFS=10
+++ config.base[263]: export FHMIN=0
+++ config.base[263]: FHMIN=0
+++ config.base[264]: export FHMAX=9
+++ config.base[264]: FHMAX=9
+++ config.base[265]: export FHOUT=3
+++ config.base[265]: FHOUT=3
+++ config.base[266]: export FHOUT_OCNICE=3
+++ config.base[266]: FHOUT_OCNICE=3
+++ config.base[269]: export EUPD_CYC=gdas
+++ config.base[269]: EUPD_CYC=gdas
+++ config.base[272]: export gfs_cyc=1
+++ config.base[272]: gfs_cyc=1
+++ config.base[275]: export FHMIN_GFS=0
+++ config.base[275]: FHMIN_GFS=0
+++ config.base[276]: export FHMAX_GFS=120
+++ config.base[276]: FHMAX_GFS=120
+++ config.base[277]: export FHOUT_GFS=3
+++ config.base[277]: FHOUT_GFS=3
+++ config.base[278]: export FHMAX_HF_GFS=0
+++ config.base[278]: FHMAX_HF_GFS=0
+++ config.base[279]: export FHOUT_HF_GFS=1
+++ config.base[279]: FHOUT_HF_GFS=1
+++ config.base[280]: export FHOUT_OCNICE_GFS=6
+++ config.base[280]: FHOUT_OCNICE_GFS=6
+++ config.base[281]: ((  gfs_cyc != 0  ))
+++ config.base[282]: export STEP_GFS=24
+++ config.base[282]: STEP_GFS=24
+++ config.base[287]: export ILPOST=1
+++ config.base[287]: ILPOST=1
+++ config.base[288]: ((  FHMAX_HF_GFS < 120  ))
+++ config.base[289]: export ILPOST=3
+++ config.base[289]: ILPOST=3
+++ config.base[293]: export restart_interval_gfs=12
+++ config.base[293]: restart_interval_gfs=12
+++ config.base[298]: export QUILTING=.true.
+++ config.base[298]: QUILTING=.true.
+++ config.base[299]: export OUTPUT_GRID=gaussian_grid
+++ config.base[299]: OUTPUT_GRID=gaussian_grid
+++ config.base[300]: export WRITE_DOPOST=.true.
+++ config.base[300]: WRITE_DOPOST=.true.
+++ config.base[301]: export WRITE_NSFLIP=.true.
+++ config.base[301]: WRITE_NSFLIP=.true.
+++ config.base[304]: export DOIAU=YES
+++ config.base[304]: DOIAU=YES
+++ config.base[305]: export IAUFHRS=3,6,9
+++ config.base[305]: IAUFHRS=3,6,9
+++ config.base[306]: export IAU_FHROT=3
+++ config.base[306]: IAU_FHROT=3
+++ config.base[307]: export IAU_DELTHRS=6
+++ config.base[307]: IAU_DELTHRS=6
+++ config.base[308]: export IAU_OFFSET=6
+++ config.base[308]: IAU_OFFSET=6
+++ config.base[309]: export DOIAU_ENKF=YES
+++ config.base[309]: DOIAU_ENKF=YES
+++ config.base[310]: export IAUFHRS_ENKF=3,6,9
+++ config.base[310]: IAUFHRS_ENKF=3,6,9
+++ config.base[311]: export IAU_DELTHRS_ENKF=6
+++ config.base[311]: IAU_DELTHRS_ENKF=6
+++ config.base[314]: export lobsdiag_forenkf=.true.
+++ config.base[314]: lobsdiag_forenkf=.true.
+++ config.base[322]: export imp_physics=8
+++ config.base[322]: imp_physics=8
+++ config.base[326]: export DO_JEDIATMVAR=NO
+++ config.base[326]: DO_JEDIATMVAR=NO
+++ config.base[327]: export DO_JEDIATMENS=NO
+++ config.base[327]: DO_JEDIATMENS=NO
+++ config.base[328]: export DO_JEDIOCNVAR=NO
+++ config.base[328]: DO_JEDIOCNVAR=NO
+++ config.base[329]: export DO_JEDISNOWDA=NO
+++ config.base[329]: DO_JEDISNOWDA=NO
+++ config.base[330]: export DO_MERGENSST=NO
+++ config.base[330]: DO_MERGENSST=NO
+++ config.base[333]: export DOHYBVAR=YES
+++ config.base[333]: DOHYBVAR=YES
+++ config.base[334]: export NMEM_ENS=2
+++ config.base[334]: NMEM_ENS=2
+++ config.base[335]: export SMOOTH_ENKF=NO
+++ config.base[335]: SMOOTH_ENKF=NO
+++ config.base[336]: export l4densvar=.true.
+++ config.base[336]: l4densvar=.true.
+++ config.base[337]: export lwrite4danl=.true.
+++ config.base[337]: lwrite4danl=.true.
+++ config.base[340]: export NMEM_ENS_GFS=30
+++ config.base[340]: NMEM_ENS_GFS=30
+++ config.base[341]: export NMEM_ENS_GFS_OFFSET=20
+++ config.base[341]: NMEM_ENS_GFS_OFFSET=20
+++ config.base[342]: export DO_CALC_INCREMENT_ENKF_GFS=NO
+++ config.base[342]: DO_CALC_INCREMENT_ENKF_GFS=NO
+++ config.base[345]: [[ YES = \Y\E\S ]]
+++ config.base[346]: export FHMIN_ENKF=3
+++ config.base[346]: FHMIN_ENKF=3
+++ config.base[347]: export FHMAX_ENKF=9
+++ config.base[347]: FHMAX_ENKF=9
+++ config.base[348]: export FHMAX_ENKF_GFS=12
+++ config.base[348]: FHMAX_ENKF_GFS=12
+++ config.base[349]: export FHOUT_ENKF_GFS=3
+++ config.base[349]: FHOUT_ENKF_GFS=3
+++ config.base[350]: [[ .true. = \.\t\r\u\e\. ]]
+++ config.base[351]: export FHOUT=1
+++ config.base[351]: FHOUT=1
+++ config.base[352]: export FHOUT_ENKF=1
+++ config.base[352]: FHOUT_ENKF=1
+++ config.base[359]: [[ YES == \N\O ]]
+++ config.base[367]: [[ cycled = \c\y\c\l\e\d ]]
+++ config.base[367]: [[ 2021122018 = \2\0\2\1\1\2\2\1\0\0 ]]
+++ config.base[367]: [[ YES = \N\O ]]
+++ config.base[367]: [[ cycled = \f\o\r\e\c\a\s\t\-\o\n\l\y ]]
+++ config.base[373]: [[ YES = \N\O ]]
+++ config.base[375]: export GSI_SOILANAL=NO
+++ config.base[375]: GSI_SOILANAL=NO
+++ config.base[378]: export DONST=YES
+++ config.base[378]: DONST=YES
+++ config.base[379]: [[ YES = \Y\E\S ]]
+++ config.base[379]: export 'FNTSFA=        '
+++ config.base[379]: FNTSFA='        '
+++ config.base[382]: export nst_anl=.true.
+++ config.base[382]: nst_anl=.true.
+++ config.base[385]: export MAKE_NSSTBUFR=NO
+++ config.base[385]: MAKE_NSSTBUFR=NO
+++ config.base[388]: export MAKE_ACFTBUFR=NO
+++ config.base[388]: MAKE_ACFTBUFR=NO
+++ config.base[391]: export 'INCREMENTS_TO_ZERO='\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[391]: INCREMENTS_TO_ZERO=''\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[394]: export 'INCVARS_ZERO_STRAT='\''sphum_inc'\'','\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[394]: INCVARS_ZERO_STRAT=''\''sphum_inc'\'','\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[395]: export INCVARS_EFOLD=5
+++ config.base[395]: INCVARS_EFOLD=5
+++ config.base[400]: export netcdf_diag=.true.
+++ config.base[400]: netcdf_diag=.true.
+++ config.base[401]: export binary_diag=.false.
+++ config.base[401]: binary_diag=.false.
+++ config.base[404]: export DO_METP=NO
+++ config.base[404]: DO_METP=NO
+++ config.base[405]: export DO_FIT2OBS=YES
+++ config.base[405]: DO_FIT2OBS=YES
+++ config.base[406]: export DO_VRFY_OCEANDA=NO
+++ config.base[406]: DO_VRFY_OCEANDA=NO
+++ config.base[409]: export HPSSARCH=NO
+++ config.base[409]: HPSSARCH=NO
+++ config.base[410]: export LOCALARCH=NO
+++ config.base[410]: LOCALARCH=NO
+++ config.base[411]: [[ NO = \Y\E\S ]]
+++ config.base[415]: export ARCH_CYC=00
+++ config.base[415]: ARCH_CYC=00
+++ config.base[416]: export ARCH_WARMICFREQ=4
+++ config.base[416]: ARCH_WARMICFREQ=4
+++ config.base[417]: export ARCH_FCSTICFREQ=1
+++ config.base[417]: ARCH_FCSTICFREQ=1
+++ config.base[420]: export FITSARC=YES
+++ config.base[420]: FITSARC=YES
+++ config.base[421]: export FHMAX_FITS=132
+++ config.base[421]: FHMAX_FITS=132
+++ config.base[422]: [[ 132 -gt 120 ]]
+++ config.base[422]: export FHMAX_FITS=120
+++ config.base[422]: FHMAX_FITS=120
+++ config.base[425]: [[ NO = \Y\E\S ]]
+++ config.base[431]: echo 'END: config.base'
END: config.base
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C96C48_hybatmDA_19605adc/config.verfrad
+++ config.verfrad[4]: echo 'BEGIN: config.verfrad'
BEGIN: config.verfrad
+++ config.verfrad[7]: . /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/EXPDIR/C96C48_hybatmDA_19605adc/config.resources verfrad
++++ config.resources[7]: ((  1 != 1  ))
++++ config.resources[31]: step=verfrad
++++ config.resources[33]: echo 'BEGIN: config.resources'
BEGIN: config.resources
++++ config.resources[35]: case ${machine} in
++++ config.resources[39]: npe_node_max=80
++++ config.resources[71]: export npe_node_max
++++ config.resources[73]: case ${step} in
++++ config.resources[769]: export wtime_verfrad=00:40:00
++++ config.resources[769]: wtime_verfrad=00:40:00
++++ config.resources[770]: export npe_verfrad=1
++++ config.resources[770]: npe_verfrad=1
++++ config.resources[771]: export nth_verfrad=1
++++ config.resources[771]: nth_verfrad=1
++++ config.resources[772]: export npe_node_verfrad=1
++++ config.resources[772]: npe_node_verfrad=1
++++ config.resources[773]: export memory_verfrad=5G
++++ config.resources[773]: memory_verfrad=5G
++++ config.resources[1228]: echo 'END: config.resources'
END: config.resources
+++ config.verfrad[9]: export satype_file=/work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/gdas_radmon_satype.txt
+++ config.verfrad[9]: satype_file=/work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/gdas_radmon_satype.txt
+++ config.verfrad[12]: . /work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/da_mon.parm
++++ da_mon.parm[4]: export LITTLE_ENDIAN=0
++++ da_mon.parm[4]: LITTLE_ENDIAN=0
++++ da_mon.parm[5]: export COMPRESS=gzip
++++ da_mon.parm[5]: COMPRESS=gzip
++++ da_mon.parm[6]: export UNCOMPRESS=gunzip
++++ da_mon.parm[6]: UNCOMPRESS=gunzip
++++ da_mon.parm[7]: export Z=gz
++++ da_mon.parm[7]: Z=gz
+++ config.verfrad[15]: export RAD_AREA=glb
+++ config.verfrad[15]: RAD_AREA=glb
+++ config.verfrad[16]: export MAKE_CTL=1
+++ config.verfrad[16]: MAKE_CTL=1
+++ config.verfrad[17]: export MAKE_DATA=1
+++ config.verfrad[17]: MAKE_DATA=1
+++ config.verfrad[18]: export USE_ANL=1
+++ config.verfrad[18]: USE_ANL=1
+++ config.verfrad[19]: export DO_DIAG_RPT=1
+++ config.verfrad[19]: DO_DIAG_RPT=1
+++ config.verfrad[20]: export DO_DATA_RPT=1
+++ config.verfrad[20]: DO_DATA_RPT=1
+++ config.verfrad[22]: export RADMON_SUFFIX=gdas
+++ config.verfrad[22]: RADMON_SUFFIX=gdas
+++ config.verfrad[23]: export CYCLE_INTERVAL=6
+++ config.verfrad[23]: CYCLE_INTERVAL=6
+++ config.verfrad[24]: export VERBOSE=YES
+++ config.verfrad[24]: VERBOSE=YES
+++ config.verfrad[26]: echo 'END: config.verfrad'
END: config.verfrad
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[110]: source /work2/noaa/stmp/CI/HERCULES/2548/gfs/env/HERCULES.env verfrad
+++ HERCULES.env[3]: [[ 1 -ne 1 ]]
+++ HERCULES.env[13]: step=verfrad
+++ HERCULES.env[15]: export 'launcher=srun -l --export=ALL'
+++ HERCULES.env[15]: launcher='srun -l --export=ALL'
+++ HERCULES.env[16]: export 'mpmd_opt=--multi-prog --output=mpmd.%j.%t.out'
+++ HERCULES.env[16]: mpmd_opt='--multi-prog --output=mpmd.%j.%t.out'
+++ HERCULES.env[19]: export MPI_BUFS_PER_PROC=2048
+++ HERCULES.env[19]: MPI_BUFS_PER_PROC=2048
+++ HERCULES.env[20]: export MPI_BUFS_PER_HOST=2048
+++ HERCULES.env[20]: MPI_BUFS_PER_HOST=2048
+++ HERCULES.env[21]: export MPI_GROUP_MAX=256
+++ HERCULES.env[21]: MPI_GROUP_MAX=256
+++ HERCULES.env[22]: export MPI_MEMMAP_OFF=1
+++ HERCULES.env[22]: MPI_MEMMAP_OFF=1
+++ HERCULES.env[23]: export MP_STDOUTMODE=ORDERED
+++ HERCULES.env[23]: MP_STDOUTMODE=ORDERED
+++ HERCULES.env[24]: export KMP_AFFINITY=scatter
+++ HERCULES.env[24]: KMP_AFFINITY=scatter
+++ HERCULES.env[25]: export OMP_STACKSIZE=2048000
+++ HERCULES.env[25]: OMP_STACKSIZE=2048000
+++ HERCULES.env[26]: export NTHSTACK=1024000000
+++ HERCULES.env[26]: NTHSTACK=1024000000
+++ HERCULES.env[28]: export I_MPI_EXTRA_FILESYSTEM=1
+++ HERCULES.env[28]: I_MPI_EXTRA_FILESYSTEM=1
+++ HERCULES.env[29]: export I_MPI_EXTRA_FILESYSTEM_LIST=lustre
+++ HERCULES.env[29]: I_MPI_EXTRA_FILESYSTEM_LIST=lustre
+++ HERCULES.env[31]: ulimit -s unlimited
+++ HERCULES.env[32]: ulimit -a
real-time non-blocking time  (microseconds, -R) unlimited
core file size              (blocks, -c) 0
data seg size               (kbytes, -d) unlimited
scheduling priority                 (-e) 0
file size                   (blocks, -f) unlimited
pending signals                     (-i) 2042963
max locked memory           (kbytes, -l) unlimited
max memory size             (kbytes, -m) 5242880
open files                          (-n) 131072
pipe size                (512 bytes, -p) 8
POSIX message queues         (bytes, -q) 819200
real-time priority                  (-r) 0
stack size                  (kbytes, -s) unlimited
cpu time                   (seconds, -t) unlimited
max user processes                  (-u) 1028798
virtual memory              (kbytes, -v) unlimited
file locks                          (-x) unlimited
+++ HERCULES.env[34]: case ${step} in
+++ HERCULES.env[322]: echo 'WARNING: The job step verfrad does not specify Hercules-specific resources'
WARNING: The job step verfrad does not specify Hercules-specific resources
++ jjob_header.sh[111]: status=0
++ jjob_header.sh[112]: ((  status != 0  ))
++ JGDAS_ATMOS_VERFRAD[13]: date --utc +%Y%m%d%H -d '20211221 00 - 6 hours'
+ JGDAS_ATMOS_VERFRAD[13]: GDATE=2021122018
+ JGDAS_ATMOS_VERFRAD[14]: export gPDY=20211220
+ JGDAS_ATMOS_VERFRAD[14]: gPDY=20211220
+ JGDAS_ATMOS_VERFRAD[15]: export gcyc=18
+ JGDAS_ATMOS_VERFRAD[15]: gcyc=18
+ JGDAS_ATMOS_VERFRAD[21]: YMD=20211221
+ JGDAS_ATMOS_VERFRAD[21]: HH=00
+ JGDAS_ATMOS_VERFRAD[21]: declare_from_tmpl -rx COM_ATMOS_ANALYSIS
+ bash_utils.sh[35]: [[ NO == \N\O ]]
+ bash_utils.sh[35]: set +x
declare_from_tmpl :: COM_ATMOS_ANALYSIS=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos
+ JGDAS_ATMOS_VERFRAD[22]: YMD=20211221
+ JGDAS_ATMOS_VERFRAD[22]: HH=00
+ JGDAS_ATMOS_VERFRAD[22]: declare_from_tmpl -rx COM_ATMOS_RADMON
+ bash_utils.sh[35]: [[ NO == \N\O ]]
+ bash_utils.sh[35]: set +x
declare_from_tmpl :: COM_ATMOS_RADMON=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//products/atmos/radmon
+ JGDAS_ATMOS_VERFRAD[23]: YMD=20211220
+ JGDAS_ATMOS_VERFRAD[23]: HH=18
+ JGDAS_ATMOS_VERFRAD[23]: declare_from_tmpl -rx COM_ATMOS_RADMON_PREV:COM_ATMOS_RADMON_TMPL
+ bash_utils.sh[35]: [[ NO == \N\O ]]
+ bash_utils.sh[35]: set +x
declare_from_tmpl :: COM_ATMOS_RADMON_PREV=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211220/18//products/atmos/radmon
+ JGDAS_ATMOS_VERFRAD[25]: export biascr=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos/gdas.t00z.abias
+ JGDAS_ATMOS_VERFRAD[25]: biascr=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos/gdas.t00z.abias
+ JGDAS_ATMOS_VERFRAD[26]: export radstat=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos/gdas.t00z.radstat
+ JGDAS_ATMOS_VERFRAD[26]: radstat=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos/gdas.t00z.radstat
+ JGDAS_ATMOS_VERFRAD[27]: export TANKverf_rad=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//products/atmos/radmon
+ JGDAS_ATMOS_VERFRAD[27]: TANKverf_rad=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//products/atmos/radmon
+ JGDAS_ATMOS_VERFRAD[28]: export TANKverf_radM1=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211220/18//products/atmos/radmon
+ JGDAS_ATMOS_VERFRAD[28]: TANKverf_radM1=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211220/18//products/atmos/radmon
+ JGDAS_ATMOS_VERFRAD[30]: [[ ! -d /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//products/atmos/radmon ]]
+ JGDAS_ATMOS_VERFRAD[31]: [[ ! -d /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211220/18//products/atmos/radmon ]]
+ JGDAS_ATMOS_VERFRAD[35]: /work2/noaa/stmp/CI/HERCULES/2548/gfs/scripts/exgdas_atmos_verfrad.sh
Begin exgdas_atmos_verfrad.sh at Mon Apr 29 15:32:07 UTC 2024
+ exgdas_atmos_verfrad.sh[22]: data_available=0
+ exgdas_atmos_verfrad.sh[24]: [[ -s /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos/gdas.t00z.radstat ]]
+ exgdas_atmos_verfrad.sh[24]: [[ -s /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos/gdas.t00z.abias ]]
+ exgdas_atmos_verfrad.sh[25]: data_available=1
+ exgdas_atmos_verfrad.sh[32]: /bin/cp -p /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos/gdas.t00z.abias ./biascr.2021122100
+ exgdas_atmos_verfrad.sh[33]: /bin/cp -p /work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211221/00//analysis/atmos/gdas.t00z.radstat ./radstat.2021122100
+ exgdas_atmos_verfrad.sh[35]: tar -xvf radstat.2021122100
diag_amsua_n15_ges.2021122100.nc4.gz
diag_amsua_n18_ges.2021122100.nc4.gz
diag_ssmis_f17_ges.2021122100.nc4.gz
diag_ssmis_f18_ges.2021122100.nc4.gz
diag_amsua_n19_ges.2021122100.nc4.gz
diag_mhs_n19_ges.2021122100.nc4.gz
diag_seviri_m08_ges.2021122100.nc4.gz
diag_seviri_m11_ges.2021122100.nc4.gz
diag_cris-fsr_npp_ges.2021122100.nc4.gz
diag_cris-fsr_n20_ges.2021122100.nc4.gz
diag_atms_npp_ges.2021122100.nc4.gz
diag_atms_n20_ges.2021122100.nc4.gz
diag_amsua_metop-b_ges.2021122100.nc4.gz
diag_mhs_metop-b_ges.2021122100.nc4.gz
diag_iasi_metop-b_ges.2021122100.nc4.gz
diag_avhrr_metop-b_ges.2021122100.nc4.gz
diag_avhrr_n18_ges.2021122100.nc4.gz
diag_avhrr_n19_ges.2021122100.nc4.gz
diag_ahi_himawari8_ges.2021122100.nc4.gz
diag_abi_g16_ges.2021122100.nc4.gz
diag_abi_g17_ges.2021122100.nc4.gz
diag_amsua_metop-c_ges.2021122100.nc4.gz
diag_mhs_metop-c_ges.2021122100.nc4.gz
diag_iasi_metop-c_ges.2021122100.nc4.gz
diag_viirs-m_npp_ges.2021122100.nc4.gz
diag_viirs-m_j1_ges.2021122100.nc4.gz
diag_amsua_n15_anl.2021122100.nc4.gz
diag_amsua_n18_anl.2021122100.nc4.gz
diag_ssmis_f17_anl.2021122100.nc4.gz
diag_ssmis_f18_anl.2021122100.nc4.gz
diag_amsua_n19_anl.2021122100.nc4.gz
diag_mhs_n19_anl.2021122100.nc4.gz
diag_seviri_m08_anl.2021122100.nc4.gz
diag_seviri_m11_anl.2021122100.nc4.gz
diag_cris-fsr_npp_anl.2021122100.nc4.gz
diag_cris-fsr_n20_anl.2021122100.nc4.gz
diag_atms_npp_anl.2021122100.nc4.gz
diag_atms_n20_anl.2021122100.nc4.gz
diag_amsua_metop-b_anl.2021122100.nc4.gz
diag_mhs_metop-b_anl.2021122100.nc4.gz
diag_iasi_metop-b_anl.2021122100.nc4.gz
diag_avhrr_metop-b_anl.2021122100.nc4.gz
diag_avhrr_n18_anl.2021122100.nc4.gz
diag_avhrr_n19_anl.2021122100.nc4.gz
diag_ahi_himawari8_anl.2021122100.nc4.gz
diag_abi_g16_anl.2021122100.nc4.gz
diag_abi_g17_anl.2021122100.nc4.gz
diag_amsua_metop-c_anl.2021122100.nc4.gz
diag_mhs_metop-c_anl.2021122100.nc4.gz
diag_iasi_metop-c_anl.2021122100.nc4.gz
diag_viirs-m_npp_anl.2021122100.nc4.gz
diag_viirs-m_j1_anl.2021122100.nc4.gz
+ exgdas_atmos_verfrad.sh[36]: rm radstat.2021122100
++ exgdas_atmos_verfrad.sh[46]: awk -F_ '{ print $2 "_" $3 }'
++ exgdas_atmos_verfrad.sh[46]: ls diag_abi_g16_ges.2021122100.nc4.gz diag_abi_g17_ges.2021122100.nc4.gz diag_ahi_himawari8_ges.2021122100.nc4.gz diag_amsua_metop-b_ges.2021122100.nc4.gz diag_amsua_metop-c_ges.2021122100.nc4.gz diag_amsua_n15_ges.2021122100.nc4.gz diag_amsua_n18_ges.2021122100.nc4.gz diag_amsua_n19_ges.2021122100.nc4.gz diag_atms_n20_ges.2021122100.nc4.gz diag_atms_npp_ges.2021122100.nc4.gz diag_avhrr_metop-b_ges.2021122100.nc4.gz diag_avhrr_n18_ges.2021122100.nc4.gz diag_avhrr_n19_ges.2021122100.nc4.gz diag_cris-fsr_n20_ges.2021122100.nc4.gz diag_cris-fsr_npp_ges.2021122100.nc4.gz diag_iasi_metop-b_ges.2021122100.nc4.gz diag_iasi_metop-c_ges.2021122100.nc4.gz diag_mhs_metop-b_ges.2021122100.nc4.gz diag_mhs_metop-c_ges.2021122100.nc4.gz diag_mhs_n19_ges.2021122100.nc4.gz diag_seviri_m08_ges.2021122100.nc4.gz diag_seviri_m11_ges.2021122100.nc4.gz diag_ssmis_f17_ges.2021122100.nc4.gz diag_ssmis_f18_ges.2021122100.nc4.gz diag_viirs-m_j1_ges.2021122100.nc4.gz diag_viirs-m_npp_ges.2021122100.nc4.gz
+ exgdas_atmos_verfrad.sh[46]: radstat_satype='abi_g16
abi_g17
ahi_himawari8
amsua_metop-b
amsua_metop-c
amsua_n15
amsua_n18
amsua_n19
atms_n20
atms_npp
avhrr_metop-b
avhrr_n18
avhrr_n19
cris-fsr_n20
cris-fsr_npp
iasi_metop-b
iasi_metop-c
mhs_metop-b
mhs_metop-c
mhs_n19
seviri_m08
seviri_m11
ssmis_f17
ssmis_f18
viirs-m_j1
viirs-m_npp'
+ exgdas_atmos_verfrad.sh[47]: [[ YES = \Y\E\S ]]
+ exgdas_atmos_verfrad.sh[48]: echo 'abi_g16
abi_g17
ahi_himawari8
amsua_metop-b
amsua_metop-c
amsua_n15
amsua_n18
amsua_n19
atms_n20
atms_npp
avhrr_metop-b
avhrr_n18
avhrr_n19
cris-fsr_n20
cris-fsr_npp
iasi_metop-b
iasi_metop-c
mhs_metop-b
mhs_metop-c
mhs_n19
seviri_m08
seviri_m11
ssmis_f17
ssmis_f18
viirs-m_j1
viirs-m_npp'
abi_g16
abi_g17
ahi_himawari8
amsua_metop-b
amsua_metop-c
amsua_n15
amsua_n18
amsua_n19
atms_n20
atms_npp
avhrr_metop-b
avhrr_n18
avhrr_n19
cris-fsr_n20
cris-fsr_npp
iasi_metop-b
iasi_metop-c
mhs_metop-b
mhs_metop-c
mhs_n19
seviri_m08
seviri_m11
ssmis_f17
ssmis_f18
viirs-m_j1
viirs-m_npp
+ exgdas_atmos_verfrad.sh[51]: echo satype_file = /work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/gdas_radmon_satype.txt
satype_file = /work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/gdas_radmon_satype.txt
+ exgdas_atmos_verfrad.sh[58]: [[ 00 = \0\0 ]]
+ exgdas_atmos_verfrad.sh[59]: use_tankdir=/work2/noaa/stmp/CI/HERCULES/2548/RUNTESTS/COMROOT/C96C48_hybatmDA_19605adc/gdas.20211220/18//products/atmos/radmon
+ exgdas_atmos_verfrad.sh[64]: echo satype_file = /work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/gdas_radmon_satype.txt
satype_file = /work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/gdas_radmon_satype.txt
++ exgdas_atmos_verfrad.sh[65]: cat /work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/gdas_radmon_satype.txt
+ exgdas_atmos_verfrad.sh[65]: export 'SATYPE=abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[65]: SATYPE='abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[73]: satype_changes=0
+ exgdas_atmos_verfrad.sh[74]: new_satype='abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep abi_g16
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep abi_g17
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=0
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[79]: [[ YES = \Y\E\S ]]
+ exgdas_atmos_verfrad.sh[80]: echo 'Found abi_g17 in radstat file but not in SATYPE list.  Adding it now.'
Found abi_g17 in radstat file but not in SATYPE list.  Adding it now.
+ exgdas_atmos_verfrad.sh[82]: satype_changes=1
+ exgdas_atmos_verfrad.sh[83]: new_satype='abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2 abi_g17'
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep ahi_himawari8
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=0
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[79]: [[ YES = \Y\E\S ]]
+ exgdas_atmos_verfrad.sh[80]: echo 'Found ahi_himawari8 in radstat file but not in SATYPE list.  Adding it now.'
Found ahi_himawari8 in radstat file but not in SATYPE list.  Adding it now.
+ exgdas_atmos_verfrad.sh[82]: satype_changes=1
+ exgdas_atmos_verfrad.sh[83]: new_satype='abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2 abi_g17 ahi_himawari8'
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep amsua_metop-b
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep amsua_metop-c
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep amsua_n15
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep amsua_n18
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: grep amsua_n19
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep atms_n20
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep atms_npp
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep avhrr_metop-b
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep avhrr_n18
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep avhrr_n19
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: grep cris-fsr_n20
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep cris-fsr_npp
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: grep iasi_metop-b
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep iasi_metop-c
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep mhs_metop-b
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep mhs_metop-c
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep mhs_n19
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
++ exgdas_atmos_verfrad.sh[76]: grep seviri_m08
+ exgdas_atmos_verfrad.sh[76]: type_count=0
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[79]: [[ YES = \Y\E\S ]]
+ exgdas_atmos_verfrad.sh[80]: echo 'Found seviri_m08 in radstat file but not in SATYPE list.  Adding it now.'
Found seviri_m08 in radstat file but not in SATYPE list.  Adding it now.
+ exgdas_atmos_verfrad.sh[82]: satype_changes=1
+ exgdas_atmos_verfrad.sh[83]: new_satype='abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2 abi_g17 ahi_himawari8 seviri_m08'
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep seviri_m11
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=0
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[79]: [[ YES = \Y\E\S ]]
+ exgdas_atmos_verfrad.sh[80]: echo 'Found seviri_m11 in radstat file but not in SATYPE list.  Adding it now.'
Found seviri_m11 in radstat file but not in SATYPE list.  Adding it now.
+ exgdas_atmos_verfrad.sh[82]: satype_changes=1
+ exgdas_atmos_verfrad.sh[83]: new_satype='abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2 abi_g17 ahi_himawari8 seviri_m08 seviri_m11'
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
++ exgdas_atmos_verfrad.sh[76]: grep ssmis_f17
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep ssmis_f18
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: wc -l
++ exgdas_atmos_verfrad.sh[76]: grep viirs-m_j1
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[75]: for type in ${radstat_satype}
++ exgdas_atmos_verfrad.sh[76]: grep viirs-m_npp
++ exgdas_atmos_verfrad.sh[76]: echo 'abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
++ exgdas_atmos_verfrad.sh[76]: wc -l
+ exgdas_atmos_verfrad.sh[76]: type_count=1
+ exgdas_atmos_verfrad.sh[78]: ((  type_count == 0  ))
+ exgdas_atmos_verfrad.sh[91]: netcdf=0
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
+ exgdas_atmos_verfrad.sh[95]: [[ -e diag_abi_g16_ges.2021122100.nc4.gz ]]
+ exgdas_atmos_verfrad.sh[96]: netcdf=1
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_abi_g16_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_abi_g16_ges.2021122100.nc4.gz abi_g16.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./abi_g16.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_abi_g16_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_abi_g16_anl.2021122100.nc4.gz abi_g16_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./abi_g16_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_ahi_himawari9_ges.2021122100*.gz'
++ exgdas_atmos_verfrad.sh[99]: wc -l
+ exgdas_atmos_verfrad.sh[99]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[103]: echo 'WARNING: diag_ahi_himawari9_ges.2021122100*.gz not available, skipping'
WARNING: diag_ahi_himawari9_ges.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_ahi_himawari9_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[111]: echo 'WARNING: diag_ahi_himawari9_anl.2021122100*.gz not available, skipping'
WARNING: diag_ahi_himawari9_anl.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_amsua_metop-b_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_amsua_metop-b_ges.2021122100.nc4.gz amsua_metop-b.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./amsua_metop-b.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_amsua_metop-b_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_amsua_metop-b_anl.2021122100.nc4.gz amsua_metop-b_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./amsua_metop-b_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_amsua_metop-c_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_amsua_metop-c_ges.2021122100.nc4.gz amsua_metop-c.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./amsua_metop-c.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_amsua_metop-c_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_amsua_metop-c_anl.2021122100.nc4.gz amsua_metop-c_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./amsua_metop-c_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_amsua_n15_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_amsua_n15_ges.2021122100.nc4.gz amsua_n15.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./amsua_n15.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_amsua_n15_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_amsua_n15_anl.2021122100.nc4.gz amsua_n15_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./amsua_n15_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_amsua_n18_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_amsua_n18_ges.2021122100.nc4.gz amsua_n18.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./amsua_n18.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_amsua_n18_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_amsua_n18_anl.2021122100.nc4.gz amsua_n18_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./amsua_n18_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_amsua_n19_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_amsua_n19_ges.2021122100.nc4.gz amsua_n19.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./amsua_n19.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_amsua_n19_anl.2021122100*.gz'
++ exgdas_atmos_verfrad.sh[107]: wc -l
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_amsua_n19_anl.2021122100.nc4.gz amsua_n19_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./amsua_n19_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_atms_npp_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_atms_npp_ges.2021122100.nc4.gz atms_npp.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./atms_npp.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_atms_npp_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_atms_npp_anl.2021122100.nc4.gz atms_npp_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./atms_npp_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_atms_n20_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_atms_n20_ges.2021122100.nc4.gz atms_n20.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./atms_n20.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_atms_n20_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_atms_n20_anl.2021122100.nc4.gz atms_n20_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./atms_n20_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_avhrr_metop-b_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_avhrr_metop-b_ges.2021122100.nc4.gz avhrr_metop-b.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./avhrr_metop-b.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_avhrr_metop-b_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_avhrr_metop-b_anl.2021122100.nc4.gz avhrr_metop-b_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./avhrr_metop-b_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_avhrr_metop-c_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[103]: echo 'WARNING: diag_avhrr_metop-c_ges.2021122100*.gz not available, skipping'
WARNING: diag_avhrr_metop-c_ges.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_avhrr_metop-c_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[111]: echo 'WARNING: diag_avhrr_metop-c_anl.2021122100*.gz not available, skipping'
WARNING: diag_avhrr_metop-c_anl.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_avhrr_n18_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_avhrr_n18_ges.2021122100.nc4.gz avhrr_n18.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./avhrr_n18.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_avhrr_n18_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_avhrr_n18_anl.2021122100.nc4.gz avhrr_n18_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./avhrr_n18_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_avhrr_n19_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_avhrr_n19_ges.2021122100.nc4.gz avhrr_n19.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./avhrr_n19.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_avhrr_n19_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_avhrr_n19_anl.2021122100.nc4.gz avhrr_n19_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./avhrr_n19_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_cris-fsr_npp_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_cris-fsr_npp_ges.2021122100.nc4.gz cris-fsr_npp.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./cris-fsr_npp.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_cris-fsr_npp_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_cris-fsr_npp_anl.2021122100.nc4.gz cris-fsr_npp_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./cris-fsr_npp_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_cris-fsr_n20_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_cris-fsr_n20_ges.2021122100.nc4.gz cris-fsr_n20.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./cris-fsr_n20.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_cris-fsr_n20_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_cris-fsr_n20_anl.2021122100.nc4.gz cris-fsr_n20_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./cris-fsr_n20_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_hirs4_n19_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[103]: echo 'WARNING: diag_hirs4_n19_ges.2021122100*.gz not available, skipping'
WARNING: diag_hirs4_n19_ges.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_hirs4_n19_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[111]: echo 'WARNING: diag_hirs4_n19_anl.2021122100*.gz not available, skipping'
WARNING: diag_hirs4_n19_anl.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_iasi_metop-b_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_iasi_metop-b_ges.2021122100.nc4.gz iasi_metop-b.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./iasi_metop-b.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_iasi_metop-b_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_iasi_metop-b_anl.2021122100.nc4.gz iasi_metop-b_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./iasi_metop-b_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_iasi_metop-c_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_iasi_metop-c_ges.2021122100.nc4.gz iasi_metop-c.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./iasi_metop-c.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_iasi_metop-c_anl.2021122100*.gz'
++ exgdas_atmos_verfrad.sh[107]: wc -l
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_iasi_metop-c_anl.2021122100.nc4.gz iasi_metop-c_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./iasi_metop-c_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_mhs_metop-b_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_mhs_metop-b_ges.2021122100.nc4.gz mhs_metop-b.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./mhs_metop-b.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_mhs_metop-b_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_mhs_metop-b_anl.2021122100.nc4.gz mhs_metop-b_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./mhs_metop-b_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_mhs_metop-c_ges.2021122100*.gz'
++ exgdas_atmos_verfrad.sh[99]: wc -l
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_mhs_metop-c_ges.2021122100.nc4.gz mhs_metop-c.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./mhs_metop-c.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_mhs_metop-c_anl.2021122100*.gz'
++ exgdas_atmos_verfrad.sh[107]: wc -l
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_mhs_metop-c_anl.2021122100.nc4.gz mhs_metop-c_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./mhs_metop-c_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_mhs_n19_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_mhs_n19_ges.2021122100.nc4.gz mhs_n19.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./mhs_n19.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_mhs_n19_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_mhs_n19_anl.2021122100.nc4.gz mhs_n19_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./mhs_n19_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_ssmis_f17_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_ssmis_f17_ges.2021122100.nc4.gz ssmis_f17.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./ssmis_f17.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_ssmis_f17_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_ssmis_f17_anl.2021122100.nc4.gz ssmis_f17_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./ssmis_f17_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_ssmis_f18_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_ssmis_f18_ges.2021122100.nc4.gz ssmis_f18.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./ssmis_f18.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_ssmis_f18_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_ssmis_f18_anl.2021122100.nc4.gz ssmis_f18_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./ssmis_f18_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_atms_n21_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[103]: echo 'WARNING: diag_atms_n21_ges.2021122100*.gz not available, skipping'
WARNING: diag_atms_n21_ges.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_atms_n21_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[111]: echo 'WARNING: diag_atms_n21_anl.2021122100*.gz not available, skipping'
WARNING: diag_atms_n21_anl.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_cris-fsr_n21_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[103]: echo 'WARNING: diag_cris-fsr_n21_ges.2021122100*.gz not available, skipping'
WARNING: diag_cris-fsr_n21_ges.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_cris-fsr_n21_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[111]: echo 'WARNING: diag_cris-fsr_n21_anl.2021122100*.gz not available, skipping'
WARNING: diag_cris-fsr_n21_anl.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_viirs-m_npp_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_viirs-m_npp_ges.2021122100.nc4.gz viirs-m_npp.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./viirs-m_npp.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_viirs-m_npp_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_viirs-m_npp_anl.2021122100.nc4.gz viirs-m_npp_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./viirs-m_npp_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_viirs-m_j1_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[100]: mv diag_viirs-m_j1_ges.2021122100.nc4.gz viirs-m_j1.gz
+ exgdas_atmos_verfrad.sh[101]: gunzip ./viirs-m_j1.gz
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_viirs-m_j1_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 1 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[108]: mv diag_viirs-m_j1_anl.2021122100.nc4.gz viirs-m_j1_anl.gz
+ exgdas_atmos_verfrad.sh[109]: gunzip ./viirs-m_j1_anl.gz
+ exgdas_atmos_verfrad.sh[93]: for type in ${SATYPE}
+ exgdas_atmos_verfrad.sh[95]: ((  netcdf == 0  ))
++ exgdas_atmos_verfrad.sh[99]: wc -l
++ exgdas_atmos_verfrad.sh[99]: find . -maxdepth 1 -type f -name 'diag_viirs-m_j2_ges.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[99]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[103]: echo 'WARNING: diag_viirs-m_j2_ges.2021122100*.gz not available, skipping'
WARNING: diag_viirs-m_j2_ges.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[106]: [[ 1 -eq 1 ]]
++ exgdas_atmos_verfrad.sh[107]: wc -l
++ exgdas_atmos_verfrad.sh[107]: find . -maxdepth 1 -type f -name 'diag_viirs-m_j2_anl.2021122100*.gz'
+ exgdas_atmos_verfrad.sh[107]: [[ 0 -gt 0 ]]
+ exgdas_atmos_verfrad.sh[111]: echo 'WARNING: diag_viirs-m_j2_anl.2021122100*.gz not available, skipping'
WARNING: diag_viirs-m_j2_anl.2021122100*.gz not available, skipping
+ exgdas_atmos_verfrad.sh[116]: export RADMON_NETCDF=1
+ exgdas_atmos_verfrad.sh[116]: RADMON_NETCDF=1
+ exgdas_atmos_verfrad.sh[122]: /work2/noaa/stmp/CI/HERCULES/2548/gfs/ush/radmon_verf_angle.sh
Begin radmon_verf_angle.sh at Mon Apr 29 15:33:38 UTC 2024
+ radmon_verf_angle.sh[68]: RAD_AREA=glb
+ radmon_verf_angle.sh[69]: REGIONAL_RR=0
+ radmon_verf_angle.sh[70]: rgnHH=
+ radmon_verf_angle.sh[71]: rgnTM=
+ radmon_verf_angle.sh[73]: echo ' REGIONAL_RR, rgnHH, rgnTM = 0, , '
 REGIONAL_RR, rgnHH, rgnTM = 0, , 
+ radmon_verf_angle.sh[74]: netcdf_boolean=.false.
+ radmon_verf_angle.sh[75]: [[ 1 -eq 1 ]]
+ radmon_verf_angle.sh[76]: netcdf_boolean=.true.
+ radmon_verf_angle.sh[78]: echo ' RADMON_NETCDF, netcdf_boolean = 1, .true.'
 RADMON_NETCDF, netcdf_boolean = 1, .true.
+ radmon_verf_angle.sh[80]: which prep_step
+ environment[1]: /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot prep_step
+ environment[0]: alias
+ environment[1]: eval declare -f
++ environment[1]: declare -f
/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/prod-util-2.1.1-ddlo2cq/bin/prep_step
+ radmon_verf_angle.sh[81]: which startmsg
+ environment[1]: /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot startmsg
+ environment[0]: alias
+ environment[1]: eval declare -f
++ environment[1]: declare -f
/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/prod-util-2.1.1-ddlo2cq/bin/startmsg
+ radmon_verf_angle.sh[84]: touch OUTPUT.1532072
+ radmon_verf_angle.sh[87]: SATYPE='abi_g16 ahi_himawari9 amsua_metop-b amsua_metop-c amsua_n15 amsua_n18 amsua_n19 atms_npp atms_n20 avhrr_metop-b avhrr_metop-c avhrr_n18 avhrr_n19 cris-fsr_npp cris-fsr_n20 hirs4_n19 iasi_metop-b iasi_metop-c  mhs_metop-b mhs_metop-c mhs_n19 ssmis_f17 ssmis_f18 atms_n21 cris-fsr_n21 viirs-m_npp viirs-m_j1 viirs-m_j2'
+ radmon_verf_angle.sh[88]: VERBOSE=YES
+ radmon_verf_angle.sh[89]: LITTLE_ENDIAN=0
+ radmon_verf_angle.sh[90]: USE_ANL=1
+ radmon_verf_angle.sh[93]: [[ 1 -eq 1 ]]
+ radmon_verf_angle.sh[94]: gesanl='ges anl'
+ radmon_verf_angle.sh[99]: err=0
+ radmon_verf_angle.sh[100]: angle_exec=radmon_angle.x
+ radmon_verf_angle.sh[101]: shared_scaninfo=/work2/noaa/stmp/CI/HERCULES/2548/gfs/parm/monitor/gdas_radmon_scaninfo.txt
+ radmon_verf_angle.sh[102]: scaninfo=scaninfo.txt
+ radmon_verf_angle.sh[107]: /bin/cp -p /work2/noaa/stmp/CI/HERCULES/2548/gfs/exec/radmon_angle.x ./
/bin/cp: cannot stat '/work2/noaa/stmp/CI/HERCULES/2548/gfs/exec/radmon_angle.x': No such file or directory
+ radmon_verf_angle.sh[1]: postamble radmon_verf_angle.sh 1714404818 1
+ preamble.sh[70]: set +x
End radmon_verf_angle.sh at 15:33:46 with error code 1 (time elapsed: 00:00:08)
+ exgdas_atmos_verfrad.sh[1]: postamble exgdas_atmos_verfrad.sh 1714404727 1
+ preamble.sh[70]: set +x
End exgdas_atmos_verfrad.sh at 15:33:47 with error code 1 (time elapsed: 00:01:40)
+ JGDAS_ATMOS_VERFRAD[1]: postamble JGDAS_ATMOS_VERFRAD 1714404686 1
+ preamble.sh[70]: set +x
End JGDAS_ATMOS_VERFRAD at 15:33:47 with error code 1 (time elapsed: 00:02:21)
+ verfrad.sh[1]: postamble verfrad.sh 1714404684 1
+ preamble.sh[70]: set +x
End verfrad.sh at 15:33:48 with error code 1 (time elapsed: 00:02:24)

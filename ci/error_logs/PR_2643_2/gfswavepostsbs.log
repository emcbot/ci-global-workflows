Begin wavepostsbs.sh at Tue Jun 25 06:57:57 UTC 2024
+ wavepostsbs.sh[8]: . /work2/noaa/stmp/CI/HERCULES/2643/gfs/ush/load_ufswm_modules.sh
++ load_ufswm_modules.sh[4]: [[ NO == \N\O ]]
++ load_ufswm_modules.sh[5]: echo 'Loading modules quietly...'
Loading modules quietly...
++ load_ufswm_modules.sh[6]: set +x
Running "module reset". Resetting modules to system default. The following $MODULEPATH directories have been removed: None

Currently Loaded Modules:
  1) contrib/0.1                      25) git-lfs/3.1.2
  2) intel-oneapi-compilers/2023.1.0  26) crtm/2.4.0
  3) stack-intel/2021.9.0             27) g2/3.4.5
  4) intel-oneapi-mpi/2021.9.0        28) g2tmpl/1.10.2
  5) stack-intel-oneapi-mpi/2021.9.0  29) ip/4.3.0
  6) nghttp2/1.57.0                   30) sp/2.5.0
  7) curl/8.4.0                       31) w3emc/2.10.0
  8) cmake/3.23.1                     32) gftl/1.10.0
  9) libjpeg/2.1.0                    33) gftl-shared/1.6.1
 10) jasper/2.0.32                    34) fargparse/1.5.0
 11) zlib/1.2.13                      35) pigz/2.7
 12) libpng/1.6.37                    36) tar/1.34
 13) hdf5/1.14.0                      37) gettext/0.21.1
 14) snappy/1.1.10                    38) libxcrypt/4.4.35
 15) zstd/1.5.2                       39) sqlite/3.43.2
 16) c-blosc/1.21.5                   40) util-linux-uuid/2.38.1
 17) netcdf-c/4.9.2                   41) python/3.10.13
 18) netcdf-fortran/4.6.1             42) mapl/2.40.3-esmf-8.6.0
 19) parallel-netcdf/1.12.2           43) scotch/7.0.4
 20) parallelio/2.5.10                44) ufs_common
 21) esmf/8.6.0                       45) nccmp/1.9.0.1
 22) fms/2023.04                      46) ufs_hercules.intel
 23) bacio/2.4.1                      47) prod_util/2.1.1
 24) crtm-fix/2.4.0_emc               48) wgrib2/3.1.1

 

+ wavepostsbs.sh[9]: status=0
+ wavepostsbs.sh[10]: [[ 0 -ne 0 ]]
+ wavepostsbs.sh[12]: export job=wavepostsbs
+ wavepostsbs.sh[12]: job=wavepostsbs
+ wavepostsbs.sh[13]: export jobid=wavepostsbs.1647334
+ wavepostsbs.sh[13]: jobid=wavepostsbs.1647334
+ wavepostsbs.sh[17]: /work2/noaa/stmp/CI/HERCULES/2643/gfs/jobs/JGLOBAL_WAVE_POST_SBS
Begin JGLOBAL_WAVE_POST_SBS at Tue Jun 25 06:57:59 UTC 2024
+ JGLOBAL_WAVE_POST_SBS[4]: source /work2/noaa/stmp/CI/HERCULES/2643/gfs/ush/jjob_header.sh -e wavepostsbs -c 'base wave wavepostsbs'
++ jjob_header.sh[44]: OPTIND=1
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[46]: case "${option}" in
++ jjob_header.sh[48]: env_job=wavepostsbs
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[46]: case "${option}" in
++ jjob_header.sh[47]: read -ra configs
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[59]: shift 4
++ jjob_header.sh[61]: [[ -z wavepostsbs ]]
++ jjob_header.sh[69]: export DATA=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334
++ jjob_header.sh[69]: DATA=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334
++ jjob_header.sh[70]: [[ YES == \Y\E\S ]]
++ jjob_header.sh[71]: rm -rf /work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334
++ jjob_header.sh[73]: mkdir -p /work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334
++ jjob_header.sh[74]: cd /work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334
++ jjob_header.sh[80]: export cycle=t12z
++ jjob_header.sh[80]: cycle=t12z
++ jjob_header.sh[81]: setpdy.sh
sed: can't read /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/date/t12z: No such file or directory
 completed cleanly
 completed cleanly
Source PDY script to export PDYm7, ..., PDY, ..., PDYp7 variables.
++ jjob_header.sh[82]: source ./PDY
+++ PDY[1]: export PDYm7=20210316
+++ PDY[1]: PDYm7=20210316
+++ PDY[2]: export PDYm6=20210317
+++ PDY[2]: PDYm6=20210317
+++ PDY[3]: export PDYm5=20210318
+++ PDY[3]: PDYm5=20210318
+++ PDY[4]: export PDYm4=20210319
+++ PDY[4]: PDYm4=20210319
+++ PDY[5]: export PDYm3=20210320
+++ PDY[5]: PDYm3=20210320
+++ PDY[6]: export PDYm2=20210321
+++ PDY[6]: PDYm2=20210321
+++ PDY[7]: export PDYm1=20210322
+++ PDY[7]: PDYm1=20210322
+++ PDY[8]: export PDY=20210323
+++ PDY[8]: PDY=20210323
+++ PDY[9]: export PDYp1=20210324
+++ PDY[9]: PDYp1=20210324
+++ PDY[10]: export PDYp2=20210325
+++ PDY[10]: PDYp2=20210325
+++ PDY[11]: export PDYp3=20210326
+++ PDY[11]: PDYp3=20210326
+++ PDY[12]: export PDYp4=20210327
+++ PDY[12]: PDYp4=20210327
+++ PDY[13]: export PDYp5=20210328
+++ PDY[13]: PDYp5=20210328
+++ PDY[14]: export PDYp6=20210329
+++ PDY[14]: PDYp6=20210329
+++ PDY[15]: export PDYp7=20210330
+++ PDY[15]: PDYp7=20210330
++ jjob_header.sh[88]: export pid=1649283
++ jjob_header.sh[88]: pid=1649283
++ jjob_header.sh[89]: export pgmout=OUTPUT.1649283
++ jjob_header.sh[89]: pgmout=OUTPUT.1649283
++ jjob_header.sh[90]: export pgmerr=errfile
++ jjob_header.sh[90]: pgmerr=errfile
++ jjob_header.sh[96]: export EXPDIR=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a
++ jjob_header.sh[96]: EXPDIR=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a/config.base
+++ config.base[6]: echo 'BEGIN: config.base'
BEGIN: config.base
+++ config.base[9]: export machine=HERCULES
+++ config.base[9]: machine=HERCULES
+++ config.base[12]: export RUN_ENVIR=emc
+++ config.base[12]: RUN_ENVIR=emc
+++ config.base[15]: export ACCOUNT=nems
+++ config.base[15]: ACCOUNT=nems
+++ config.base[16]: export ACCOUNT_SERVICE=fv3-cpu
+++ config.base[16]: ACCOUNT_SERVICE=fv3-cpu
+++ config.base[17]: export QUEUE=batch
+++ config.base[17]: QUEUE=batch
+++ config.base[18]: export QUEUE_SERVICE=batch
+++ config.base[18]: QUEUE_SERVICE=batch
+++ config.base[19]: export PARTITION_BATCH=hercules
+++ config.base[19]: PARTITION_BATCH=hercules
+++ config.base[20]: export PARTITION_SERVICE=service
+++ config.base[20]: PARTITION_SERVICE=service
+++ config.base[21]: export RESERVATION=
+++ config.base[21]: RESERVATION=
+++ config.base[24]: export HPSS_PROJECT=emc-global
+++ config.base[24]: HPSS_PROJECT=emc-global
+++ config.base[27]: export HOMEgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs
+++ config.base[27]: HOMEgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs
+++ config.base[28]: export EXECgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/exec
+++ config.base[28]: EXECgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/exec
+++ config.base[29]: export FIXgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix
+++ config.base[29]: FIXgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix
+++ config.base[30]: export PARMgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/parm
+++ config.base[30]: PARMgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/parm
+++ config.base[31]: export SCRgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/scripts
+++ config.base[31]: SCRgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/scripts
+++ config.base[32]: export USHgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/ush
+++ config.base[32]: USHgfs=/work2/noaa/stmp/CI/HERCULES/2643/gfs/ush
+++ config.base[34]: export FIXam=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/am
+++ config.base[34]: FIXam=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/am
+++ config.base[35]: export FIXaer=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/aer
+++ config.base[35]: FIXaer=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/aer
+++ config.base[36]: export FIXcpl=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/cpl
+++ config.base[36]: FIXcpl=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/cpl
+++ config.base[37]: export FIXlut=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/lut
+++ config.base[37]: FIXlut=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/lut
+++ config.base[38]: export FIXcice=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/cice
+++ config.base[38]: FIXcice=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/cice
+++ config.base[39]: export FIXmom=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/mom6
+++ config.base[39]: FIXmom=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/mom6
+++ config.base[40]: export FIXreg2grb2=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/reg2grb2
+++ config.base[40]: FIXreg2grb2=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/reg2grb2
+++ config.base[41]: export FIXgdas=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/gdas
+++ config.base[41]: FIXgdas=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/gdas
+++ config.base[46]: export PACKAGEROOT=/work/noaa/global/glopara/nwpara
+++ config.base[46]: PACKAGEROOT=/work/noaa/global/glopara/nwpara
+++ config.base[47]: export COMROOT=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT
+++ config.base[47]: COMROOT=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT
+++ config.base[48]: export COMINsyn=/work/noaa/global/glopara/com/gfs/prod/syndat
+++ config.base[48]: COMINsyn=/work/noaa/global/glopara/com/gfs/prod/syndat
+++ config.base[49]: export DMPDIR=/work/noaa/rstprod/dump
+++ config.base[49]: DMPDIR=/work/noaa/rstprod/dump
+++ config.base[50]: export BASE_CPLIC=/work/noaa/global/glopara/data/ICSDIR/prototype_ICs
+++ config.base[50]: BASE_CPLIC=/work/noaa/global/glopara/data/ICSDIR/prototype_ICs
+++ config.base[54]: export COMINecmwf=/work/noaa/global/glopara/data/external_gempak/ecmwf
+++ config.base[54]: COMINecmwf=/work/noaa/global/glopara/data/external_gempak/ecmwf
+++ config.base[55]: export COMINnam=/work/noaa/global/glopara/data/external_gempak/nam
+++ config.base[55]: COMINnam=/work/noaa/global/glopara/data/external_gempak/nam
+++ config.base[56]: export COMINukmet=/work/noaa/global/glopara/data/external_gempak/ukmet
+++ config.base[56]: COMINukmet=/work/noaa/global/glopara/data/external_gempak/ukmet
+++ config.base[59]: export HOMEDIR=/work/noaa/global/mterry
+++ config.base[59]: HOMEDIR=/work/noaa/global/mterry
+++ config.base[60]: export STMP=/work/noaa/stmp/mterry/HERCULES
+++ config.base[60]: STMP=/work/noaa/stmp/mterry/HERCULES
+++ config.base[61]: export PTMP=/work/noaa/stmp/mterry/HERCULES
+++ config.base[61]: PTMP=/work/noaa/stmp/mterry/HERCULES
+++ config.base[62]: export NOSCRUB=/work/noaa/global/mterry
+++ config.base[62]: NOSCRUB=/work/noaa/global/mterry
+++ config.base[65]: export BASE_GIT=/work/noaa/global/glopara/git_rocky9
+++ config.base[65]: BASE_GIT=/work/noaa/global/glopara/git_rocky9
+++ config.base[68]: export DO_GOES=NO
+++ config.base[68]: DO_GOES=NO
+++ config.base[69]: export DO_BUFRSND=NO
+++ config.base[69]: DO_BUFRSND=NO
+++ config.base[70]: export DO_GEMPAK=NO
+++ config.base[70]: DO_GEMPAK=NO
+++ config.base[71]: export DO_AWIPS=NO
+++ config.base[71]: DO_AWIPS=NO
+++ config.base[72]: export DO_NPOESS=NO
+++ config.base[72]: DO_NPOESS=NO
+++ config.base[73]: export DO_TRACKER=YES
+++ config.base[73]: DO_TRACKER=YES
+++ config.base[74]: export DO_GENESIS=YES
+++ config.base[74]: DO_GENESIS=YES
+++ config.base[75]: export DO_GENESIS_FSU=NO
+++ config.base[75]: DO_GENESIS_FSU=NO
+++ config.base[76]: export DO_VERFOZN=YES
+++ config.base[76]: DO_VERFOZN=YES
+++ config.base[77]: export DO_VERFRAD=YES
+++ config.base[77]: DO_VERFRAD=YES
+++ config.base[78]: export DO_VMINMON=YES
+++ config.base[78]: DO_VMINMON=YES
+++ config.base[79]: export DO_MOS=NO
+++ config.base[79]: DO_MOS=NO
+++ config.base[85]: export REALTIME=YES
+++ config.base[85]: REALTIME=YES
+++ config.base[88]: export MODE=forecast-only
+++ config.base[88]: MODE=forecast-only
+++ config.base[97]: export FIXgsi=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/gsi
+++ config.base[97]: FIXgsi=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/gsi
+++ config.base[98]: export HOMEpost=/work2/noaa/stmp/CI/HERCULES/2643/gfs
+++ config.base[98]: HOMEpost=/work2/noaa/stmp/CI/HERCULES/2643/gfs
+++ config.base[99]: export HOMEobsproc=/work/noaa/global/glopara/git_rocky9/obsproc/v1.1.2
+++ config.base[99]: HOMEobsproc=/work/noaa/global/glopara/git_rocky9/obsproc/v1.1.2
+++ config.base[102]: export 'NCP=/bin/cp -p'
+++ config.base[102]: NCP='/bin/cp -p'
+++ config.base[103]: export NMV=/bin/mv
+++ config.base[103]: NMV=/bin/mv
+++ config.base[104]: export 'NLN=/bin/ln -sf'
+++ config.base[104]: NLN='/bin/ln -sf'
+++ config.base[105]: export VERBOSE=YES
+++ config.base[105]: VERBOSE=YES
+++ config.base[106]: export KEEPDATA=NO
+++ config.base[106]: KEEPDATA=NO
+++ config.base[107]: export DEBUG_POSTSCRIPT=NO
+++ config.base[107]: DEBUG_POSTSCRIPT=NO
+++ config.base[108]: export CHGRP_RSTPROD=YES
+++ config.base[108]: CHGRP_RSTPROD=YES
+++ config.base[109]: export 'CHGRP_CMD=chgrp rstprod'
+++ config.base[109]: CHGRP_CMD='chgrp rstprod'
+++ config.base[110]: export NCDUMP=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/netcdf-c-4.9.2-tslbcfy/bin/ncdump
+++ config.base[110]: NCDUMP=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/netcdf-c-4.9.2-tslbcfy/bin/ncdump
+++ config.base[111]: export NCLEN=/work2/noaa/stmp/CI/HERCULES/2643/gfs/ush/getncdimlen
+++ config.base[111]: NCLEN=/work2/noaa/stmp/CI/HERCULES/2643/gfs/ush/getncdimlen
+++ config.base[114]: export BASE_ENV=/work2/noaa/stmp/CI/HERCULES/2643/gfs/env
+++ config.base[114]: BASE_ENV=/work2/noaa/stmp/CI/HERCULES/2643/gfs/env
+++ config.base[115]: export BASE_JOB=/work2/noaa/stmp/CI/HERCULES/2643/gfs/jobs/rocoto
+++ config.base[115]: BASE_JOB=/work2/noaa/stmp/CI/HERCULES/2643/gfs/jobs/rocoto
+++ config.base[118]: export SDATE=2021032312
+++ config.base[118]: SDATE=2021032312
+++ config.base[119]: export EDATE=2021032312
+++ config.base[119]: EDATE=2021032312
+++ config.base[120]: export EXP_WARM_START=.false.
+++ config.base[120]: EXP_WARM_START=.false.
+++ config.base[121]: export assim_freq=6
+++ config.base[121]: assim_freq=6
+++ config.base[122]: export PSLOT=C48_S2SW_63904c2a
+++ config.base[122]: PSLOT=C48_S2SW_63904c2a
+++ config.base[123]: export EXPDIR=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a
+++ config.base[123]: EXPDIR=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a
+++ config.base[124]: export ROTDIR=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a
+++ config.base[124]: ROTDIR=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a
+++ config.base[125]: export ROTDIR_DUMP=YES
+++ config.base[125]: ROTDIR_DUMP=YES
+++ config.base[126]: export DUMP_SUFFIX=
+++ config.base[126]: DUMP_SUFFIX=
+++ config.base[127]: [[ 2021032312 -ge 2019092100 ]]
+++ config.base[127]: [[ 2021032312 -le 2019110700 ]]
+++ config.base[130]: export DATAROOT=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a
+++ config.base[130]: DATAROOT=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a
+++ config.base[131]: export RUNDIR=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a
+++ config.base[131]: RUNDIR=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a
+++ config.base[132]: export ARCDIR=/work/noaa/global/mterry/archive/C48_S2SW_63904c2a
+++ config.base[132]: ARCDIR=/work/noaa/global/mterry/archive/C48_S2SW_63904c2a
+++ config.base[133]: export ATARDIR=/work/noaa/global/mterry/archive_rotdir/C48_S2SW_63904c2a
+++ config.base[133]: ATARDIR=/work/noaa/global/mterry/archive_rotdir/C48_S2SW_63904c2a
+++ config.base[136]: export envir=prod
+++ config.base[136]: envir=prod
+++ config.base[137]: export NET=gfs
+++ config.base[137]: NET=gfs
+++ config.base[138]: export RUN=gfs
+++ config.base[138]: RUN=gfs
+++ config.base[144]: source /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a/config.com
++++ config.com[4]: echo 'BEGIN: config.com'
BEGIN: config.com
++++ config.com[37]: [[ emc == \n\c\o ]]
++++ config.com[41]: COM_OBS_TMPL='${ROTDIR}/${RUN}.${YMD}/${HH}/obs'
++++ config.com[42]: COM_RTOFS_TMPL='${DMPDIR}'
++++ config.com[44]: declare -rx COM_OBS_TMPL COM_RTOFS_TMPL
++++ config.com[45]: declare -rx 'COM_OBSDMP_TMPL=${DMPDIR}/${DUMP}${DUMP_SUFFIX}.${YMD}/${HH}/atmos'
++++ config.com[47]: COM_BASE='${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}'
++++ config.com[49]: declare -rx 'COM_TOP_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}'
++++ config.com[51]: declare -rx 'COM_CONF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/conf'
++++ config.com[52]: declare -rx 'COM_OBS_JEDI=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/obs_jedi'
++++ config.com[54]: declare -rx 'COM_ATMOS_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/input'
++++ config.com[55]: declare -rx 'COM_ATMOS_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/restart'
++++ config.com[56]: declare -rx 'COM_ATMOS_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/atmos'
++++ config.com[57]: declare -rx 'COM_SNOW_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/snow'
++++ config.com[58]: declare -rx 'COM_ATMOS_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/history'
++++ config.com[59]: declare -rx 'COM_ATMOS_MASTER_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/master'
++++ config.com[60]: declare -rx 'COM_ATMOS_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/grib2'
++++ config.com[61]: declare -rx 'COM_ATMOS_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/grib2/${GRID}'
++++ config.com[62]: declare -rx 'COM_ATMOS_BUFR_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/bufr'
++++ config.com[63]: declare -rx 'COM_ATMOS_GEMPAK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/gempak/${GRID}'
++++ config.com[64]: declare -rx 'COM_ATMOS_GENESIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/cyclone/genesis_vital'
++++ config.com[65]: declare -rx 'COM_ATMOS_TRACK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/cyclone/tracks'
++++ config.com[66]: declare -rx 'COM_ATMOS_GOES_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/goes_sim'
++++ config.com[67]: declare -rx 'COM_ATMOS_IMAGERY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/imagery'
++++ config.com[68]: declare -rx 'COM_ATMOS_OZNMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/oznmon'
++++ config.com[69]: declare -rx 'COM_ATMOS_RADMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/radmon'
++++ config.com[70]: declare -rx 'COM_ATMOS_MINMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/minmon'
++++ config.com[71]: declare -rx 'COM_ATMOS_WMO_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/wmo'
++++ config.com[73]: declare -rx 'COM_WAVE_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/restart'
++++ config.com[74]: declare -rx 'COM_WAVE_PREP_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/prep'
++++ config.com[75]: declare -rx 'COM_WAVE_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/history'
++++ config.com[76]: declare -rx 'COM_WAVE_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/gridded'
++++ config.com[77]: declare -rx 'COM_WAVE_STATION_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/station'
++++ config.com[78]: declare -rx 'COM_WAVE_GEMPAK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/gempak'
++++ config.com[79]: declare -rx 'COM_WAVE_WMO_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/wmo'
++++ config.com[81]: declare -rx 'COM_OCEAN_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/history'
++++ config.com[82]: declare -rx 'COM_OCEAN_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/restart'
++++ config.com[83]: declare -rx 'COM_OCEAN_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/input'
++++ config.com[84]: declare -rx 'COM_OCEAN_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/ocean'
++++ config.com[85]: declare -rx 'COM_OCEAN_NETCDF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/netcdf'
++++ config.com[86]: declare -rx 'COM_OCEAN_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/grib2'
++++ config.com[87]: declare -rx 'COM_OCEAN_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/grib2/${GRID}'
++++ config.com[89]: declare -rx 'COM_ICE_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/ice'
++++ config.com[90]: declare -rx 'COM_ICE_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/input'
++++ config.com[91]: declare -rx 'COM_ICE_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/history'
++++ config.com[92]: declare -rx 'COM_ICE_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/restart'
++++ config.com[93]: declare -rx 'COM_ICE_NETCDF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/netcdf'
++++ config.com[94]: declare -rx 'COM_ICE_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/grib2'
++++ config.com[95]: declare -rx 'COM_ICE_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/grib2/${GRID}'
++++ config.com[97]: declare -rx 'COM_CHEM_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/chem/history'
++++ config.com[98]: declare -rx 'COM_CHEM_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/chem'
++++ config.com[100]: declare -rx 'COM_MED_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/med/restart'
+++ config.base[147]: export 'ERRSCRIPT=eval [[ $err = 0 ]]'
+++ config.base[147]: ERRSCRIPT='eval [[ $err = 0 ]]'
+++ config.base[148]: export LOGSCRIPT=
+++ config.base[148]: LOGSCRIPT=
+++ config.base[151]: export 'REDOUT=1>'
+++ config.base[151]: REDOUT='1>'
+++ config.base[152]: export 'REDERR=2>'
+++ config.base[152]: REDERR='2>'
+++ config.base[154]: export SENDECF=NO
+++ config.base[154]: SENDECF=NO
+++ config.base[155]: export SENDSDM=NO
+++ config.base[155]: SENDSDM=NO
+++ config.base[156]: export SENDDBN_NTC=NO
+++ config.base[156]: SENDDBN_NTC=NO
+++ config.base[157]: export SENDDBN=NO
+++ config.base[157]: SENDDBN=NO
+++ config.base[158]: export DBNROOT=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/prod-util-2.1.1-ddlo2cq/fakedbn
+++ config.base[158]: DBNROOT=/work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/prod-util-2.1.1-ddlo2cq/fakedbn
+++ config.base[161]: export APP=S2SW
+++ config.base[161]: APP=S2SW
+++ config.base[163]: shopt -s extglob
+++ config.base[165]: case "${RUN}" in
+++ config.base[172]: shopt -u extglob
+++ config.base[175]: export DO_ATM=YES
+++ config.base[175]: DO_ATM=YES
+++ config.base[176]: export DO_COUPLED=NO
+++ config.base[176]: DO_COUPLED=NO
+++ config.base[177]: export DO_WAVE=NO
+++ config.base[177]: DO_WAVE=NO
+++ config.base[178]: export DO_OCN=NO
+++ config.base[178]: DO_OCN=NO
+++ config.base[179]: export DO_ICE=NO
+++ config.base[179]: DO_ICE=NO
+++ config.base[180]: export DO_AERO=NO
+++ config.base[180]: DO_AERO=NO
+++ config.base[181]: export DO_PREP_OBS_AERO=NO
+++ config.base[181]: DO_PREP_OBS_AERO=NO
+++ config.base[182]: export AERO_FCST_CDUMP=
+++ config.base[182]: AERO_FCST_CDUMP=
+++ config.base[183]: export AERO_ANL_CDUMP=
+++ config.base[183]: AERO_ANL_CDUMP=
+++ config.base[184]: export WAVE_CDUMP=
+++ config.base[184]: WAVE_CDUMP=
+++ config.base[185]: export DOBNDPNT_WAVE=NO
+++ config.base[185]: DOBNDPNT_WAVE=NO
+++ config.base[186]: export DOIBP_WAV=NO
+++ config.base[186]: DOIBP_WAV=NO
+++ config.base[187]: export FRAC_GRID=.true.
+++ config.base[187]: FRAC_GRID=.true.
+++ config.base[188]: export DO_NEST=NO
+++ config.base[188]: DO_NEST=NO
+++ config.base[189]: [[ NO == \Y\E\S ]]
+++ config.base[195]: export ntiles=6
+++ config.base[195]: ntiles=6
+++ config.base[196]: export FIXugwd=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/ugwd
+++ config.base[196]: FIXugwd=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/ugwd
+++ config.base[197]: export FIXorog=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/orog
+++ config.base[197]: FIXorog=/work2/noaa/stmp/CI/HERCULES/2643/gfs/fix/orog
+++ config.base[201]: export OPS_RES=C768
+++ config.base[201]: OPS_RES=C768
+++ config.base[204]: export LEVS=128
+++ config.base[204]: LEVS=128
+++ config.base[205]: export CASE=C48
+++ config.base[205]: CASE=C48
+++ config.base[206]: export CASE_ENS=@CASEENS@
+++ config.base[206]: CASE_ENS=@CASEENS@
+++ config.base[207]: export OCNRES=500
+++ config.base[207]: OCNRES=500
+++ config.base[208]: export ICERES=500
+++ config.base[208]: ICERES=500
+++ config.base[211]: case "${CASE}" in
+++ config.base[213]: export waveGRD=uglo_100km
+++ config.base[213]: waveGRD=uglo_100km
+++ config.base[230]: case "${APP}" in
+++ config.base[249]: export DO_COUPLED=YES
+++ config.base[249]: DO_COUPLED=YES
+++ config.base[250]: export DO_OCN=YES
+++ config.base[250]: DO_OCN=YES
+++ config.base[251]: export DO_ICE=YES
+++ config.base[251]: DO_ICE=YES
+++ config.base[253]: [[ S2SW =~ A$ ]]
+++ config.base[259]: [[ S2SW =~ ^S2SW ]]
+++ config.base[260]: export DO_WAVE=YES
+++ config.base[260]: DO_WAVE=YES
+++ config.base[261]: export WAVE_CDUMP=both
+++ config.base[261]: WAVE_CDUMP=both
+++ config.base[271]: [[ gfs =~ gdas ]]
+++ config.base[274]: [[ gfs =~ gfs ]]
+++ config.base[275]: export FHCYC=24
+++ config.base[275]: FHCYC=24
+++ config.base[279]: export FHMIN=0
+++ config.base[279]: FHMIN=0
+++ config.base[280]: export FHMAX=9
+++ config.base[280]: FHMAX=9
+++ config.base[281]: export FHOUT=3
+++ config.base[281]: FHOUT=3
+++ config.base[282]: export FHOUT_OCN=3
+++ config.base[282]: FHOUT_OCN=3
+++ config.base[283]: export FHOUT_ICE=3
+++ config.base[283]: FHOUT_ICE=3
+++ config.base[286]: export EUPD_CYC=gdas
+++ config.base[286]: EUPD_CYC=gdas
+++ config.base[289]: export gfs_cyc=1
+++ config.base[289]: gfs_cyc=1
+++ config.base[292]: export FHMIN_GFS=0
+++ config.base[292]: FHMIN_GFS=0
+++ config.base[293]: export FHMAX_GFS=120
+++ config.base[293]: FHMAX_GFS=120
+++ config.base[294]: export FHOUT_GFS=3
+++ config.base[294]: FHOUT_GFS=3
+++ config.base[295]: export FHMAX_HF_GFS=0
+++ config.base[295]: FHMAX_HF_GFS=0
+++ config.base[296]: export FHOUT_HF_GFS=1
+++ config.base[296]: FHOUT_HF_GFS=1
+++ config.base[297]: export FHOUT_OCN_GFS=6
+++ config.base[297]: FHOUT_OCN_GFS=6
+++ config.base[298]: export FHOUT_ICE_GFS=6
+++ config.base[298]: FHOUT_ICE_GFS=6
+++ config.base[299]: export FHMIN_WAV=0
+++ config.base[299]: FHMIN_WAV=0
+++ config.base[300]: export FHOUT_WAV=3
+++ config.base[300]: FHOUT_WAV=3
+++ config.base[301]: export FHMAX_HF_WAV=120
+++ config.base[301]: FHMAX_HF_WAV=120
+++ config.base[302]: export FHOUT_HF_WAV=1
+++ config.base[302]: FHOUT_HF_WAV=1
+++ config.base[303]: export FHMAX_WAV=9
+++ config.base[303]: FHMAX_WAV=9
+++ config.base[304]: export FHMAX_WAV_GFS=120
+++ config.base[304]: FHMAX_WAV_GFS=120
+++ config.base[305]: ((  gfs_cyc != 0  ))
+++ config.base[306]: export STEP_GFS=24
+++ config.base[306]: STEP_GFS=24
+++ config.base[311]: export ILPOST=1
+++ config.base[311]: ILPOST=1
+++ config.base[312]: ((  FHMAX_HF_GFS < 120  ))
+++ config.base[313]: export ILPOST=3
+++ config.base[313]: ILPOST=3
+++ config.base[317]: export restart_interval_gfs=12
+++ config.base[317]: restart_interval_gfs=12
+++ config.base[322]: export QUILTING=.true.
+++ config.base[322]: QUILTING=.true.
+++ config.base[323]: export OUTPUT_GRID=gaussian_grid
+++ config.base[323]: OUTPUT_GRID=gaussian_grid
+++ config.base[324]: export WRITE_DOPOST=.true.
+++ config.base[324]: WRITE_DOPOST=.true.
+++ config.base[325]: export WRITE_NSFLIP=.true.
+++ config.base[325]: WRITE_NSFLIP=.true.
+++ config.base[328]: export DOIAU=YES
+++ config.base[328]: DOIAU=YES
+++ config.base[329]: export IAUFHRS=3,6,9
+++ config.base[329]: IAUFHRS=3,6,9
+++ config.base[330]: export IAU_FHROT=3
+++ config.base[330]: IAU_FHROT=3
+++ config.base[331]: export IAU_DELTHRS=6
+++ config.base[331]: IAU_DELTHRS=6
+++ config.base[332]: export IAU_OFFSET=6
+++ config.base[332]: IAU_OFFSET=6
+++ config.base[333]: export DOIAU_ENKF=YES
+++ config.base[333]: DOIAU_ENKF=YES
+++ config.base[334]: export IAUFHRS_ENKF=3,6,9
+++ config.base[334]: IAUFHRS_ENKF=3,6,9
+++ config.base[335]: export IAU_DELTHRS_ENKF=6
+++ config.base[335]: IAU_DELTHRS_ENKF=6
+++ config.base[338]: export lobsdiag_forenkf=.true.
+++ config.base[338]: lobsdiag_forenkf=.true.
+++ config.base[346]: export imp_physics=8
+++ config.base[346]: imp_physics=8
+++ config.base[350]: export DO_JEDIATMVAR=NO
+++ config.base[350]: DO_JEDIATMVAR=NO
+++ config.base[351]: export DO_JEDIATMENS=NO
+++ config.base[351]: DO_JEDIATMENS=NO
+++ config.base[352]: export DO_JEDIOCNVAR=NO
+++ config.base[352]: DO_JEDIOCNVAR=NO
+++ config.base[353]: export DO_JEDISNOWDA=NO
+++ config.base[353]: DO_JEDISNOWDA=NO
+++ config.base[354]: export DO_MERGENSST=NO
+++ config.base[354]: DO_MERGENSST=NO
+++ config.base[357]: export DOHYBVAR=@DOHYBVAR@
+++ config.base[357]: DOHYBVAR=@DOHYBVAR@
+++ config.base[358]: export NMEM_ENS=0
+++ config.base[358]: NMEM_ENS=0
+++ config.base[359]: export SMOOTH_ENKF=NO
+++ config.base[359]: SMOOTH_ENKF=NO
+++ config.base[360]: export l4densvar=.true.
+++ config.base[360]: l4densvar=.true.
+++ config.base[361]: export lwrite4danl=.true.
+++ config.base[361]: lwrite4danl=.true.
+++ config.base[362]: export DO_CALC_INCREMENT=NO
+++ config.base[362]: DO_CALC_INCREMENT=NO
+++ config.base[365]: export NMEM_ENS_GFS=30
+++ config.base[365]: NMEM_ENS_GFS=30
+++ config.base[366]: export NMEM_ENS_GFS_OFFSET=20
+++ config.base[366]: NMEM_ENS_GFS_OFFSET=20
+++ config.base[367]: export DO_CALC_INCREMENT_ENKF_GFS=NO
+++ config.base[367]: DO_CALC_INCREMENT_ENKF_GFS=NO
+++ config.base[370]: [[ @DOHYBVAR@ = \Y\E\S ]]
+++ config.base[384]: [[ @DOHYBVAR@ == \N\O ]]
+++ config.base[392]: export ENKF_SPREAD=YES
+++ config.base[392]: ENKF_SPREAD=YES
+++ config.base[395]: [[ forecast-only = \c\y\c\l\e\d ]]
+++ config.base[395]: [[ YES = \N\O ]]
+++ config.base[395]: [[ forecast-only = \f\o\r\e\c\a\s\t\-\o\n\l\y ]]
+++ config.base[395]: [[ .false. = \.\f\a\l\s\e\. ]]
+++ config.base[396]: export IAU_OFFSET=0
+++ config.base[396]: IAU_OFFSET=0
+++ config.base[397]: export IAU_FHROT=0
+++ config.base[397]: IAU_FHROT=0
+++ config.base[398]: export IAUFHRS=6
+++ config.base[398]: IAUFHRS=6
+++ config.base[401]: [[ YES = \N\O ]]
+++ config.base[405]: [[ YES == \Y\E\S ]]
+++ config.base[406]: export restart_interval_enkfgdas=3
+++ config.base[406]: restart_interval_enkfgdas=3
+++ config.base[411]: export restart_interval_enkfgfs=3
+++ config.base[411]: restart_interval_enkfgfs=3
+++ config.base[413]: [[ YES == \Y\E\S ]]
+++ config.base[414]: export restart_interval_gdas=3
+++ config.base[414]: restart_interval_gdas=3
+++ config.base[419]: export GSI_SOILANAL=NO
+++ config.base[419]: GSI_SOILANAL=NO
+++ config.base[422]: export DONST=YES
+++ config.base[422]: DONST=YES
+++ config.base[423]: [[ YES = \Y\E\S ]]
+++ config.base[423]: export 'FNTSFA=        '
+++ config.base[423]: FNTSFA='        '
+++ config.base[426]: export nst_anl=.true.
+++ config.base[426]: nst_anl=.true.
+++ config.base[429]: export MAKE_NSSTBUFR=NO
+++ config.base[429]: MAKE_NSSTBUFR=NO
+++ config.base[432]: export MAKE_ACFTBUFR=NO
+++ config.base[432]: MAKE_ACFTBUFR=NO
+++ config.base[435]: export 'INCREMENTS_TO_ZERO='\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[435]: INCREMENTS_TO_ZERO=''\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[438]: export 'INCVARS_ZERO_STRAT='\''sphum_inc'\'','\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[438]: INCVARS_ZERO_STRAT=''\''sphum_inc'\'','\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[439]: export INCVARS_EFOLD=5
+++ config.base[439]: INCVARS_EFOLD=5
+++ config.base[444]: export netcdf_diag=.true.
+++ config.base[444]: netcdf_diag=.true.
+++ config.base[445]: export binary_diag=.false.
+++ config.base[445]: binary_diag=.false.
+++ config.base[448]: export DO_METP=YES
+++ config.base[448]: DO_METP=YES
+++ config.base[449]: export DO_FIT2OBS=YES
+++ config.base[449]: DO_FIT2OBS=YES
+++ config.base[450]: export DO_VRFY_OCEANDA=NO
+++ config.base[450]: DO_VRFY_OCEANDA=NO
+++ config.base[453]: export FHMAX_FITS=132
+++ config.base[453]: FHMAX_FITS=132
+++ config.base[454]: [[ 132 -gt 120 ]]
+++ config.base[454]: export FHMAX_FITS=120
+++ config.base[454]: FHMAX_FITS=120
+++ config.base[457]: export HPSSARCH=NO
+++ config.base[457]: HPSSARCH=NO
+++ config.base[458]: export LOCALARCH=NO
+++ config.base[458]: LOCALARCH=NO
+++ config.base[459]: [[ NO = \Y\E\S ]]
+++ config.base[463]: export ARCH_CYC=00
+++ config.base[463]: ARCH_CYC=00
+++ config.base[464]: export ARCH_WARMICFREQ=4
+++ config.base[464]: ARCH_WARMICFREQ=4
+++ config.base[465]: export ARCH_FCSTICFREQ=1
+++ config.base[465]: ARCH_FCSTICFREQ=1
+++ config.base[468]: [[ NO = \Y\E\S ]]
+++ config.base[475]: export REPLAY_ICS=NO
+++ config.base[475]: REPLAY_ICS=NO
+++ config.base[476]: export OFFSET_START_HOUR=0
+++ config.base[476]: OFFSET_START_HOUR=0
+++ config.base[479]: export NUM_SND_COLLECTIVES=9
+++ config.base[479]: NUM_SND_COLLECTIVES=9
+++ config.base[481]: echo 'END: config.base'
END: config.base
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a/config.wave
+++ config.wave[6]: echo 'BEGIN: config.wave'
BEGIN: config.wave
+++ config.wave[13]: export CDUMPwave=gfswave
+++ config.wave[13]: CDUMPwave=gfswave
+++ config.wave[16]: export CDUMPRSTwave=gdas
+++ config.wave[16]: CDUMPRSTwave=gdas
+++ config.wave[19]: export waveGRDN=1
+++ config.wave[19]: waveGRDN=1
+++ config.wave[20]: export waveGRDG=10
+++ config.wave[20]: waveGRDG=10
+++ config.wave[21]: export USE_WAV_RMP=NO
+++ config.wave[21]: USE_WAV_RMP=NO
+++ config.wave[22]: export waveMULTIGRID=.false.
+++ config.wave[22]: waveMULTIGRID=.false.
+++ config.wave[23]: export MESH_WAV=mesh.uglo_100km.nc
+++ config.wave[23]: MESH_WAV=mesh.uglo_100km.nc
+++ config.wave[24]: export 'waveesmfGRD= '
+++ config.wave[24]: waveesmfGRD=' '
+++ config.wave[27]: case "${waveGRD}" in
+++ config.wave[79]: export waveinterpGRD=glo_200
+++ config.wave[79]: waveinterpGRD=glo_200
+++ config.wave[80]: export wavepostGRD=
+++ config.wave[80]: wavepostGRD=
+++ config.wave[81]: export waveuoutpGRD=uglo_100km
+++ config.wave[81]: waveuoutpGRD=uglo_100km
+++ config.wave[96]: export WAVEWND_DID=
+++ config.wave[96]: WAVEWND_DID=
+++ config.wave[97]: export WAVEWND_FID=
+++ config.wave[97]: WAVEWND_FID=
+++ config.wave[100]: [[ gfs == \g\f\s ]]
+++ config.wave[101]: export FHMAX_WAV=120
+++ config.wave[101]: FHMAX_WAV=120
+++ config.wave[103]: export WAVHINDH=0
+++ config.wave[103]: WAVHINDH=0
+++ config.wave[104]: export FHMAX_WAV_IBP=180
+++ config.wave[104]: FHMAX_WAV_IBP=180
+++ config.wave[105]: ((  FHMAX_WAV < FHMAX_WAV_IBP  ))
+++ config.wave[105]: export FHMAX_WAV_IBP=120
+++ config.wave[105]: FHMAX_WAV_IBP=120
+++ config.wave[108]: export DTFLD_WAV=3600
+++ config.wave[108]: DTFLD_WAV=3600
+++ config.wave[109]: export DTPNT_WAV=3600
+++ config.wave[109]: DTPNT_WAV=3600
+++ config.wave[110]: export FHINCP_WAV=1
+++ config.wave[110]: FHINCP_WAV=1
+++ config.wave[113]: export 'OUTPARS_WAV=WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'
+++ config.wave[113]: OUTPARS_WAV='WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'
+++ config.wave[116]: [[ gfs == \g\d\a\s ]]
+++ config.wave[120]: [[ 1 -ne 0 ]]
+++ config.wave[121]: export WAVHCYC=6
+++ config.wave[121]: WAVHCYC=6
+++ config.wave[122]: export FHMAX_WAV_CUR=192
+++ config.wave[122]: FHMAX_WAV_CUR=192
+++ config.wave[130]: export RSTTYPE_WAV=T
+++ config.wave[130]: RSTTYPE_WAV=T
+++ config.wave[131]: [[ gfs != gfs ]]
+++ config.wave[136]: rst_dt_gfs=43200
+++ config.wave[137]: [[ 43200 -gt 0 ]]
+++ config.wave[138]: export DT_1_RST_WAV=0
+++ config.wave[138]: DT_1_RST_WAV=0
+++ config.wave[141]: export DT_2_RST_WAV=43200
+++ config.wave[141]: DT_2_RST_WAV=43200
+++ config.wave[147]: export RSTIOFF_WAV=0
+++ config.wave[147]: RSTIOFF_WAV=0
+++ config.wave[152]: export RUNMEM=-1
+++ config.wave[152]: RUNMEM=-1
+++ config.wave[155]: ((  RUNMEM == -1  ))
+++ config.wave[157]: export waveMEMB=
+++ config.wave[157]: waveMEMB=
+++ config.wave[164]: export WW3ATMINP=CPL
+++ config.wave[164]: WW3ATMINP=CPL
+++ config.wave[165]: [[ YES == \Y\E\S ]]
+++ config.wave[166]: export WW3ICEINP=CPL
+++ config.wave[166]: WW3ICEINP=CPL
+++ config.wave[167]: export WAVEICE_FID=
+++ config.wave[167]: WAVEICE_FID=
+++ config.wave[173]: export WAVECUR_DID=rtofs
+++ config.wave[173]: WAVECUR_DID=rtofs
+++ config.wave[174]: [[ YES == \Y\E\S ]]
+++ config.wave[175]: export WW3CURINP=CPL
+++ config.wave[175]: WW3CURINP=CPL
+++ config.wave[176]: export WAVECUR_FID=
+++ config.wave[176]: WAVECUR_FID=
+++ config.wave[183]: export WW3ATMIENS=F
+++ config.wave[183]: WW3ATMIENS=F
+++ config.wave[184]: export WW3ICEIENS=F
+++ config.wave[184]: WW3ICEIENS=F
+++ config.wave[185]: export WW3CURIENS=F
+++ config.wave[185]: WW3CURIENS=F
+++ config.wave[187]: export GOFILETYPE=1
+++ config.wave[187]: GOFILETYPE=1
+++ config.wave[188]: export POFILETYPE=1
+++ config.wave[188]: POFILETYPE=1
+++ config.wave[192]: export FUNIPNT=T
+++ config.wave[192]: FUNIPNT=T
+++ config.wave[194]: export IOSRV=1
+++ config.wave[194]: IOSRV=1
+++ config.wave[196]: export FPNTPROC=T
+++ config.wave[196]: FPNTPROC=T
+++ config.wave[198]: export FGRDPROC=F
+++ config.wave[198]: FGRDPROC=F
+++ config.wave[200]: export FLAGMASKCOMP=F
+++ config.wave[200]: FLAGMASKCOMP=F
+++ config.wave[202]: export FLAGMASKOUT=F
+++ config.wave[202]: FLAGMASKOUT=F
+++ config.wave[204]: echo 'END: config.wave'
END: config.wave
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a/config.wavepostsbs
+++ config.wavepostsbs[6]: echo 'BEGIN: config.wavepostsbs'
BEGIN: config.wavepostsbs
+++ config.wavepostsbs[9]: source /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/EXPDIR/C48_S2SW_63904c2a/config.resources wavepostsbs
++++ config.resources[7]: ((  1 != 1  ))
++++ config.resources[31]: step=wavepostsbs
++++ config.resources[33]: echo 'BEGIN: config.resources'
BEGIN: config.resources
++++ config.resources[35]: case ${machine} in
++++ config.resources[40]: npe_node_max=80
++++ config.resources[72]: export npe_node_max
++++ config.resources[74]: case ${step} in
++++ config.resources[134]: export wtime_wavepostsbs=00:20:00
++++ config.resources[134]: wtime_wavepostsbs=00:20:00
++++ config.resources[135]: export wtime_wavepostsbs_gfs=03:00:00
++++ config.resources[135]: wtime_wavepostsbs_gfs=03:00:00
++++ config.resources[136]: export npe_wavepostsbs=8
++++ config.resources[136]: npe_wavepostsbs=8
++++ config.resources[137]: export nth_wavepostsbs=1
++++ config.resources[137]: nth_wavepostsbs=1
++++ config.resources[138]: export npe_node_wavepostsbs=80
++++ config.resources[138]: npe_node_wavepostsbs=80
++++ config.resources[139]: export NTASKS=8
++++ config.resources[139]: NTASKS=8
++++ config.resources[140]: export memory_wavepostsbs=10GB
++++ config.resources[140]: memory_wavepostsbs=10GB
++++ config.resources[141]: export memory_wavepostsbs_gfs=10GB
++++ config.resources[141]: memory_wavepostsbs_gfs=10GB
++++ config.resources[1310]: echo 'END: config.resources'
END: config.resources
+++ config.wavepostsbs[12]: export WAV_SUBGRBSRC=
+++ config.wavepostsbs[12]: WAV_SUBGRBSRC=
+++ config.wavepostsbs[13]: export WAV_SUBGRB=
+++ config.wavepostsbs[13]: WAV_SUBGRB=
+++ config.wavepostsbs[16]: export DOFLD_WAV=YES
+++ config.wavepostsbs[16]: DOFLD_WAV=YES
+++ config.wavepostsbs[17]: export DOPNT_WAV=YES
+++ config.wavepostsbs[17]: DOPNT_WAV=YES
+++ config.wavepostsbs[18]: export DOGRB_WAV=YES
+++ config.wavepostsbs[18]: DOGRB_WAV=YES
+++ config.wavepostsbs[19]: [[ -n glo_200 ]]
+++ config.wavepostsbs[20]: export DOGRI_WAV=YES
+++ config.wavepostsbs[20]: DOGRI_WAV=YES
+++ config.wavepostsbs[24]: export DOSPC_WAV=YES
+++ config.wavepostsbs[24]: DOSPC_WAV=YES
+++ config.wavepostsbs[25]: export DOBLL_WAV=YES
+++ config.wavepostsbs[25]: DOBLL_WAV=YES
+++ config.wavepostsbs[27]: echo 'END: config.wavepostsbs'
END: config.wavepostsbs
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[110]: source /work2/noaa/stmp/CI/HERCULES/2643/gfs/env/HERCULES.env wavepostsbs
+++ HERCULES.env[3]: [[ 1 -ne 1 ]]
+++ HERCULES.env[13]: step=wavepostsbs
+++ HERCULES.env[15]: export 'launcher=srun -l --export=ALL'
+++ HERCULES.env[15]: launcher='srun -l --export=ALL'
+++ HERCULES.env[16]: export 'mpmd_opt=--multi-prog --output=mpmd.%j.%t.out'
+++ HERCULES.env[16]: mpmd_opt='--multi-prog --output=mpmd.%j.%t.out'
+++ HERCULES.env[19]: export MPI_BUFS_PER_PROC=2048
+++ HERCULES.env[19]: MPI_BUFS_PER_PROC=2048
+++ HERCULES.env[20]: export MPI_BUFS_PER_HOST=2048
+++ HERCULES.env[20]: MPI_BUFS_PER_HOST=2048
+++ HERCULES.env[21]: export MPI_GROUP_MAX=256
+++ HERCULES.env[21]: MPI_GROUP_MAX=256
+++ HERCULES.env[22]: export MPI_MEMMAP_OFF=1
+++ HERCULES.env[22]: MPI_MEMMAP_OFF=1
+++ HERCULES.env[23]: export MP_STDOUTMODE=ORDERED
+++ HERCULES.env[23]: MP_STDOUTMODE=ORDERED
+++ HERCULES.env[24]: export KMP_AFFINITY=scatter
+++ HERCULES.env[24]: KMP_AFFINITY=scatter
+++ HERCULES.env[25]: export OMP_STACKSIZE=2048000
+++ HERCULES.env[25]: OMP_STACKSIZE=2048000
+++ HERCULES.env[26]: export NTHSTACK=1024000000
+++ HERCULES.env[26]: NTHSTACK=1024000000
+++ HERCULES.env[28]: export I_MPI_EXTRA_FILESYSTEM=1
+++ HERCULES.env[28]: I_MPI_EXTRA_FILESYSTEM=1
+++ HERCULES.env[29]: export I_MPI_EXTRA_FILESYSTEM_LIST=lustre
+++ HERCULES.env[29]: I_MPI_EXTRA_FILESYSTEM_LIST=lustre
+++ HERCULES.env[31]: ulimit -s unlimited
+++ HERCULES.env[32]: ulimit -a
real-time non-blocking time  (microseconds, -R) unlimited
core file size              (blocks, -c) 0
data seg size               (kbytes, -d) unlimited
scheduling priority                 (-e) 0
file size                   (blocks, -f) unlimited
pending signals                     (-i) 2042962
max locked memory           (kbytes, -l) unlimited
max memory size             (kbytes, -m) 10485760
open files                          (-n) 131072
pipe size                (512 bytes, -p) 8
POSIX message queues         (bytes, -q) 819200
real-time priority                  (-r) 0
stack size                  (kbytes, -s) unlimited
cpu time                   (seconds, -t) unlimited
max user processes                  (-u) 1028798
virtual memory              (kbytes, -v) unlimited
file locks                          (-x) unlimited
+++ HERCULES.env[34]: case ${step} in
+++ HERCULES.env[54]: export CFP_MP=YES
+++ HERCULES.env[54]: CFP_MP=YES
+++ HERCULES.env[55]: [[ wavepostsbs = \w\a\v\e\p\r\e\p ]]
+++ HERCULES.env[56]: export 'wavempexec=srun -l --export=ALL'
+++ HERCULES.env[56]: wavempexec='srun -l --export=ALL'
+++ HERCULES.env[57]: export 'wave_mpmd=--multi-prog --output=mpmd.%j.%t.out'
+++ HERCULES.env[57]: wave_mpmd='--multi-prog --output=mpmd.%j.%t.out'
++ jjob_header.sh[111]: status=0
++ jjob_header.sh[112]: ((  status != 0  ))
+ JGLOBAL_WAVE_POST_SBS[7]: export errchk=err_chk
+ JGLOBAL_WAVE_POST_SBS[7]: errchk=err_chk
+ JGLOBAL_WAVE_POST_SBS[9]: export MP_PULSE=0
+ JGLOBAL_WAVE_POST_SBS[9]: MP_PULSE=0
+ JGLOBAL_WAVE_POST_SBS[12]: YMD=20210323
+ JGLOBAL_WAVE_POST_SBS[12]: HH=12
+ JGLOBAL_WAVE_POST_SBS[12]: declare_from_tmpl -rx COMIN_WAVE_PREP:COM_WAVE_PREP_TMPL COMIN_WAVE_HISTORY:COM_WAVE_HISTORY_TMPL COMOUT_WAVE_PREP:COM_WAVE_PREP_TMPL COMOUT_WAVE_GRID:COM_WAVE_GRID_TMPL
+ bash_utils.sh[35]: [[ NO == \N\O ]]
+ bash_utils.sh[35]: set +x
declare_from_tmpl :: COMIN_WAVE_PREP=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep
declare_from_tmpl :: COMIN_WAVE_HISTORY=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/history
declare_from_tmpl :: COMOUT_WAVE_PREP=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep
declare_from_tmpl :: COMOUT_WAVE_GRID=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//products/wave/gridded
+ JGLOBAL_WAVE_POST_SBS[18]: for out_dir in "${COMOUT_WAVE_PREP}" "${COMOUT_WAVE_GRID}"
+ JGLOBAL_WAVE_POST_SBS[19]: [[ ! -d /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep ]]
+ JGLOBAL_WAVE_POST_SBS[18]: for out_dir in "${COMOUT_WAVE_PREP}" "${COMOUT_WAVE_GRID}"
+ JGLOBAL_WAVE_POST_SBS[19]: [[ ! -d /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//products/wave/gridded ]]
+ JGLOBAL_WAVE_POST_SBS[27]: membTAG=p
+ JGLOBAL_WAVE_POST_SBS[28]: '[' '' == 00 ']'
+ JGLOBAL_WAVE_POST_SBS[29]: export membTAG
+ JGLOBAL_WAVE_POST_SBS[30]: export WAV_MOD_TAG=gfswave
+ JGLOBAL_WAVE_POST_SBS[30]: WAV_MOD_TAG=gfswave
+ JGLOBAL_WAVE_POST_SBS[32]: export CFP_VERBOSE=1
+ JGLOBAL_WAVE_POST_SBS[32]: CFP_VERBOSE=1
+ JGLOBAL_WAVE_POST_SBS[35]: /work2/noaa/stmp/CI/HERCULES/2643/gfs/scripts/exgfs_wave_post_gridded_sbs.sh
Begin exgfs_wave_post_gridded_sbs.sh at Tue Jun 25 06:58:05 UTC 2024
+ exgfs_wave_post_gridded_sbs.sh[44]: export WAV_MOD_TAG=gfswave
+ exgfs_wave_post_gridded_sbs.sh[44]: WAV_MOD_TAG=gfswave
+ exgfs_wave_post_gridded_sbs.sh[46]: cd /work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334
+ exgfs_wave_post_gridded_sbs.sh[48]: echo 'Starting WAVE POSTPROCESSOR SCRIPT for gfswave'
Starting WAVE POSTPROCESSOR SCRIPT for gfswave
+ exgfs_wave_post_gridded_sbs.sh[50]: set +x
 
                     *********************************
                     *** WAVE POSTPROCESSOR SCRIPT ***
                     *********************************
 
Starting at : Tue Jun 25 01:58:05 CDT 2024
-------------
 
+ exgfs_wave_post_gridded_sbs.sh[63]: '[' -z 8 ']'
+ exgfs_wave_post_gridded_sbs.sh[74]: export waveGRD=uglo_100km
+ exgfs_wave_post_gridded_sbs.sh[74]: waveGRD=uglo_100km
+ exgfs_wave_post_gridded_sbs.sh[77]: export waveinterpGRD=glo_200
+ exgfs_wave_post_gridded_sbs.sh[77]: waveinterpGRD=glo_200
+ exgfs_wave_post_gridded_sbs.sh[78]: export wavepostGRD=
+ exgfs_wave_post_gridded_sbs.sh[78]: wavepostGRD=
+ exgfs_wave_post_gridded_sbs.sh[81]: set +x
 
Grid information  :
-------------------
   Native wave grids  : uglo_100km
   Interpolated grids : glo_200
   Post-process grids : 
 
+ exgfs_wave_post_gridded_sbs.sh[91]: export FHRUN=0
+ exgfs_wave_post_gridded_sbs.sh[91]: FHRUN=0
+ exgfs_wave_post_gridded_sbs.sh[96]: export DOGRB_WAV=YES
+ exgfs_wave_post_gridded_sbs.sh[96]: DOGRB_WAV=YES
+ exgfs_wave_post_gridded_sbs.sh[97]: export DOGRI_WAV=YES
+ exgfs_wave_post_gridded_sbs.sh[97]: DOGRI_WAV=YES
+ exgfs_wave_post_gridded_sbs.sh[99]: exit_code=0
+ exgfs_wave_post_gridded_sbs.sh[101]: set +x
 
Preparing input files :
-----------------------
+ exgfs_wave_post_gridded_sbs.sh[110]: for grdID in ${waveGRD} ${wavepostGRD} ${waveinterpGRD}
+ exgfs_wave_post_gridded_sbs.sh[111]: [[ -f /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep/gfswave.mod_def.uglo_100km ]]
+ exgfs_wave_post_gridded_sbs.sh[112]: set +x
 Mod def file for uglo_100km found in /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep. copying ....
+ exgfs_wave_post_gridded_sbs.sh[116]: cp -f /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep/gfswave.mod_def.uglo_100km mod_def.uglo_100km
+ exgfs_wave_post_gridded_sbs.sh[110]: for grdID in ${waveGRD} ${wavepostGRD} ${waveinterpGRD}
+ exgfs_wave_post_gridded_sbs.sh[111]: [[ -f /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep/gfswave.mod_def.glo_200 ]]
+ exgfs_wave_post_gridded_sbs.sh[112]: set +x
 Mod def file for glo_200 found in /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep. copying ....
+ exgfs_wave_post_gridded_sbs.sh[116]: cp -f /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/prep/gfswave.mod_def.glo_200 mod_def.glo_200
+ exgfs_wave_post_gridded_sbs.sh[121]: for grdID in ${waveGRD} ${wavepostGRD} ${waveinterpGRD}
+ exgfs_wave_post_gridded_sbs.sh[122]: [[ ! -f mod_def.uglo_100km ]]
+ exgfs_wave_post_gridded_sbs.sh[134]: set +x
File mod_def.uglo_100km found. Syncing to all nodes ...
+ exgfs_wave_post_gridded_sbs.sh[121]: for grdID in ${waveGRD} ${wavepostGRD} ${waveinterpGRD}
+ exgfs_wave_post_gridded_sbs.sh[122]: [[ ! -f mod_def.glo_200 ]]
+ exgfs_wave_post_gridded_sbs.sh[134]: set +x
File mod_def.glo_200 found. Syncing to all nodes ...
+ exgfs_wave_post_gridded_sbs.sh[143]: '[' YES = YES ']'
+ exgfs_wave_post_gridded_sbs.sh[145]: for intGRD in $waveinterpGRD
+ exgfs_wave_post_gridded_sbs.sh[147]: '[' -f /work2/noaa/stmp/CI/HERCULES/2643/gfs/parm/wave/glo_200_interp.inp.tmpl ']'
+ exgfs_wave_post_gridded_sbs.sh[149]: cp -f /work2/noaa/stmp/CI/HERCULES/2643/gfs/parm/wave/glo_200_interp.inp.tmpl glo_200_interp.inp.tmpl
+ exgfs_wave_post_gridded_sbs.sh[152]: '[' -f glo_200_interp.inp.tmpl ']'
+ exgfs_wave_post_gridded_sbs.sh[154]: set +x
   glo_200_interp.inp.tmpl copied. Syncing to all nodes ...
+ exgfs_wave_post_gridded_sbs.sh[172]: '[' YES = YES ']'
+ exgfs_wave_post_gridded_sbs.sh[174]: for grbGRD in $waveinterpGRD $wavepostGRD
+ exgfs_wave_post_gridded_sbs.sh[176]: '[' -f /work2/noaa/stmp/CI/HERCULES/2643/gfs/parm/wave/ww3_grib2.glo_200.inp.tmpl ']'
+ exgfs_wave_post_gridded_sbs.sh[178]: cp -f /work2/noaa/stmp/CI/HERCULES/2643/gfs/parm/wave/ww3_grib2.glo_200.inp.tmpl ww3_grib2.glo_200.inp.tmpl
+ exgfs_wave_post_gridded_sbs.sh[181]: '[' -f ww3_grib2.glo_200.inp.tmpl ']'
+ exgfs_wave_post_gridded_sbs.sh[183]: set +x
   ww3_grib2.glo_200.inp.tmpl copied. Syncing to all nodes ...
+ exgfs_wave_post_gridded_sbs.sh[203]: set +x
 
   Input files read and processed at : Tue Jun 25 01:58:06 CDT 2024
 
   Data summary : 
   ---------------------------------------------
      Sufficient data for GRID interpolation    : YES
      Sufficient data for GRIB files            : YES
 
+ exgfs_wave_post_gridded_sbs.sh[220]: set +x
   Making command file for sbs grib2 and GRID Interpolation 
+ exgfs_wave_post_gridded_sbs.sh[227]: '[' NO = YES ']'
+ exgfs_wave_post_gridded_sbs.sh[236]: fhr=0
+ exgfs_wave_post_gridded_sbs.sh[238]: fhrg=0
+ exgfs_wave_post_gridded_sbs.sh[239]: sleep_interval=10
+ exgfs_wave_post_gridded_sbs.sh[240]: iwaitmax=120
+ exgfs_wave_post_gridded_sbs.sh[241]: '[' 0 -le 120 ']'
++ exgfs_wave_post_gridded_sbs.sh[243]: /work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/prod-util-2.1.1-ddlo2cq/bin/ndate 0 2021032312
+ exgfs_wave_post_gridded_sbs.sh[243]: ymdh=2021032312
++ exgfs_wave_post_gridded_sbs.sh[244]: cut -c1-8
++ exgfs_wave_post_gridded_sbs.sh[244]: echo 2021032312
+ exgfs_wave_post_gridded_sbs.sh[244]: YMD=20210323
++ exgfs_wave_post_gridded_sbs.sh[245]: echo 2021032312
++ exgfs_wave_post_gridded_sbs.sh[245]: cut -c9-10
+ exgfs_wave_post_gridded_sbs.sh[245]: HMS=120000
+ exgfs_wave_post_gridded_sbs.sh[246]: YMDHMS=20210323120000
++ exgfs_wave_post_gridded_sbs.sh[247]: printf %03i 0
+ exgfs_wave_post_gridded_sbs.sh[247]: FH3=000
+ exgfs_wave_post_gridded_sbs.sh[249]: fcmdnow=cmdfile.000
+ exgfs_wave_post_gridded_sbs.sh[250]: fcmdigrd=icmdfile.000
+ exgfs_wave_post_gridded_sbs.sh[251]: mkdir output_20210323120000
+ exgfs_wave_post_gridded_sbs.sh[252]: cd output_20210323120000
+ exgfs_wave_post_gridded_sbs.sh[253]: rm -f cmdfile.000 icmdfile.000
+ exgfs_wave_post_gridded_sbs.sh[254]: touch cmdfile.000 icmdfile.000
+ exgfs_wave_post_gridded_sbs.sh[258]: export GRIBDATA=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334/output_20210323120000
+ exgfs_wave_post_gridded_sbs.sh[258]: GRIBDATA=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334/output_20210323120000
+ exgfs_wave_post_gridded_sbs.sh[259]: export GRDIDATA=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334/output_20210323120000
+ exgfs_wave_post_gridded_sbs.sh[259]: GRDIDATA=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334/output_20210323120000
+ exgfs_wave_post_gridded_sbs.sh[263]: '[' 0 = 0 ']'
+ exgfs_wave_post_gridded_sbs.sh[265]: for wavGRD in ${waveGRD}
+ exgfs_wave_post_gridded_sbs.sh[266]: gfile=/work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/history/gfswave.out_grd.uglo_100km.20210323.120000
+ exgfs_wave_post_gridded_sbs.sh[267]: wait_for_file /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/history/gfswave.out_grd.uglo_100km.20210323.120000 10 120
+ bash_utils.sh[93]: set +x
+ bash_utils.sh[101]: return 0
+ exgfs_wave_post_gridded_sbs.sh[273]: /bin/ln -sf /work2/noaa/stmp/CI/HERCULES/2643/RUNTESTS/COMROOT/C48_S2SW_63904c2a/gfs.20210323/12//model_data/wave/history/gfswave.out_grd.uglo_100km.20210323.120000 ./out_grd.uglo_100km
+ exgfs_wave_post_gridded_sbs.sh[276]: '[' YES = YES ']'
+ exgfs_wave_post_gridded_sbs.sh[278]: nigrd=1
+ exgfs_wave_post_gridded_sbs.sh[279]: for grdID in $waveinterpGRD
++ exgfs_wave_post_gridded_sbs.sh[281]: /work/noaa/epic/role-epic/spack-stack/hercules/spack-stack-1.6.0/envs/unified-env/install/intel/2021.9.0/prod-util-2.1.1-ddlo2cq/bin/ndate -0 2021032312
+ exgfs_wave_post_gridded_sbs.sh[281]: ymdh_int=2021032312
+ exgfs_wave_post_gridded_sbs.sh[281]: dt_int=3600.
+ exgfs_wave_post_gridded_sbs.sh[281]: n_int=9999
+ exgfs_wave_post_gridded_sbs.sh[282]: echo '/work2/noaa/stmp/CI/HERCULES/2643/gfs/ush/wave_grid_interp_sbs.sh glo_200 2021032312 3600. 9999 > grint_glo_200.out 2>&1'
+ exgfs_wave_post_gridded_sbs.sh[283]: '[' YES = YES ']'
++ exgfs_wave_post_gridded_sbs.sh[285]: echo WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA
+ exgfs_wave_post_gridded_sbs.sh[285]: gribFL=''\''WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'\'''
+ exgfs_wave_post_gridded_sbs.sh[286]: case $grdID in
+ exgfs_wave_post_gridded_sbs.sh[291]: GRDNAME=global
+ exgfs_wave_post_gridded_sbs.sh[291]: GRDRES=2p00
+ exgfs_wave_post_gridded_sbs.sh[291]: GRIDNR=255
+ exgfs_wave_post_gridded_sbs.sh[291]: MODNR=11
+ exgfs_wave_post_gridded_sbs.sh[300]: echo '/work2/noaa/stmp/CI/HERCULES/2643/gfs/ush/wave_grib2_sbs.sh glo_200 255 11 2021032312 0 global 2p00 '\''WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'\'' > grib_glo_200.out 2>&1'
+ exgfs_wave_post_gridded_sbs.sh[302]: echo /work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334/output_20210323120000/icmdfile.000.1
+ exgfs_wave_post_gridded_sbs.sh[303]: chmod 744 icmdfile.000.1
+ exgfs_wave_post_gridded_sbs.sh[304]: nigrd=2
+ exgfs_wave_post_gridded_sbs.sh[308]: '[' YES = YES ']'
+ exgfs_wave_post_gridded_sbs.sh[336]: '[' YES = YES ']'
+ exgfs_wave_post_gridded_sbs.sh[337]: nfile=0
+ exgfs_wave_post_gridded_sbs.sh[338]: ifile=0
+ exgfs_wave_post_gridded_sbs.sh[339]: iline=1
+ exgfs_wave_post_gridded_sbs.sh[340]: ifirst=yes
++ exgfs_wave_post_gridded_sbs.sh[341]: wc -l cmdfile.000
++ exgfs_wave_post_gridded_sbs.sh[341]: awk '{print $1}'
+ exgfs_wave_post_gridded_sbs.sh[341]: nlines=1
+ exgfs_wave_post_gridded_sbs.sh[342]: '[' 1 -le 1 ']'
++ exgfs_wave_post_gridded_sbs.sh[343]: sed -n 1p cmdfile.000
+ exgfs_wave_post_gridded_sbs.sh[343]: line=/work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334/output_20210323120000/icmdfile.000.1
+ exgfs_wave_post_gridded_sbs.sh[344]: '[' -z /work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334/output_20210323120000/icmdfile.000.1 ']'
+ exgfs_wave_post_gridded_sbs.sh[347]: '[' yes = yes ']'
+ exgfs_wave_post_gridded_sbs.sh[348]: echo '#!/bin/sh'
+ exgfs_wave_post_gridded_sbs.sh[349]: echo '0 cmdmfile.0'
+ exgfs_wave_post_gridded_sbs.sh[350]: chmod 744 cmdmfile.0
+ exgfs_wave_post_gridded_sbs.sh[352]: echo /work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334/output_20210323120000/icmdfile.000.1
+ exgfs_wave_post_gridded_sbs.sh[353]: nfile=1
+ exgfs_wave_post_gridded_sbs.sh[354]: '[' 1 -eq 8 ']'
+ exgfs_wave_post_gridded_sbs.sh[358]: iline=2
+ exgfs_wave_post_gridded_sbs.sh[342]: '[' 2 -le 1 ']'
++ exgfs_wave_post_gridded_sbs.sh[363]: wc -l cmdfile.000
++ exgfs_wave_post_gridded_sbs.sh[363]: awk '{print $1}'
+ exgfs_wave_post_gridded_sbs.sh[363]: wavenproc=1
++ exgfs_wave_post_gridded_sbs.sh[364]: echo 1
+ exgfs_wave_post_gridded_sbs.sh[364]: wavenproc=1
+ exgfs_wave_post_gridded_sbs.sh[366]: set +x
 
   Executing the grib2_sbs scripts at : Tue Jun 25 01:58:06 CDT 2024
   ------------------------------------
 
+ exgfs_wave_post_gridded_sbs.sh[373]: '[' 1 -gt 1 ']'
+ exgfs_wave_post_gridded_sbs.sh[382]: chmod 744 cmdfile.000
+ exgfs_wave_post_gridded_sbs.sh[383]: ./cmdfile.000
+ exgfs_wave_post_gridded_sbs.sh[384]: exit=0
+ exgfs_wave_post_gridded_sbs.sh[387]: '[' 0 '!=' 0 ']'
+ exgfs_wave_post_gridded_sbs.sh[401]: rm -f out_grd.glo_200 out_grd.uglo_100km
+ exgfs_wave_post_gridded_sbs.sh[403]: cd /work/noaa/stmp/mterry/HERCULES/RUNDIRS/C48_S2SW_63904c2a/wavepostsbs.1647334
+ exgfs_wave_post_gridded_sbs.sh[405]: FHINCG=1
+ exgfs_wave_post_gridded_sbs.sh[406]: '[' 0 = 0 ']'
+ exgfs_wave_post_gridded_sbs.sh[409]: ENSTAG=
+ exgfs_wave_post_gridded_sbs.sh[410]: '[' ']'
+ exgfs_wave_post_gridded_sbs.sh[411]: gribchk=gfswave.t12z.global.2p00.f000.grib2
/work2/noaa/stmp/CI/HERCULES/2643/gfs/scripts/exgfs_wave_post_gridded_sbs.sh: line 412: COMIN_WAVE_GRID: unbound variable
++ exgfs_wave_post_gridded_sbs.sh[1]: postamble exgfs_wave_post_gridded_sbs.sh 1719298685 1
++ preamble.sh[70]: set +x
End exgfs_wave_post_gridded_sbs.sh at 06:58:21 with error code 1 (time elapsed: 00:00:16)
+ JGLOBAL_WAVE_POST_SBS[1]: postamble JGLOBAL_WAVE_POST_SBS 1719298679 1
+ preamble.sh[70]: set +x
End JGLOBAL_WAVE_POST_SBS at 06:58:21 with error code 1 (time elapsed: 00:00:22)
+ wavepostsbs.sh[1]: postamble wavepostsbs.sh 1719298677 1
+ preamble.sh[70]: set +x
End wavepostsbs.sh at 06:58:21 with error code 1 (time elapsed: 00:00:24)

Begin waveinit.sh at Thu May 30 15:56:58 UTC 2024
+ waveinit.sh[6]: echo

+ waveinit.sh[7]: echo '=============== START TO SOURCE FV3GFS WORKFLOW MODULES ==============='
=============== START TO SOURCE FV3GFS WORKFLOW MODULES ===============
+ waveinit.sh[9]: . /scratch1/NCEPDEV/global/CI/2620/gfs/ush/load_ufswm_modules.sh
++ load_ufswm_modules.sh[4]: [[ NO == \N\O ]]
++ load_ufswm_modules.sh[5]: echo 'Loading modules quietly...'
Loading modules quietly...
++ load_ufswm_modules.sh[6]: set +x
Running "module reset". Resetting modules to system default. The following $MODULEPATH directories have been removed: None

Currently Loaded Modules:
  1) contrib                          25) git-lfs/2.10.0
  2) intel/2022.1.2                   26) crtm/2.4.0
  3) stack-intel/2021.5.0             27) g2/3.4.5
  4) impi/2022.1.2                    28) g2tmpl/1.10.2
  5) stack-intel-oneapi-mpi/2021.5.1  29) ip/4.3.0
  6) curl/8.1.2                       30) sp/2.3.3
  7) cmake/3.23.1                     31) w3emc/2.10.0
  8) libjpeg/2.1.0                    32) gftl/1.10.0
  9) jasper/2.0.32                    33) gftl-shared/1.6.1
 10) zlib/1.2.13                      34) fargparse/1.5.0
 11) libpng/1.6.37                    35) gettext/0.19.8.1
 12) pkg-config/0.27.1                36) libxcrypt/4.4.35
 13) hdf5/1.14.0                      37) sqlite/3.42.0
 14) snappy/1.1.10                    38) util-linux-uuid/2.38.1
 15) zstd/1.5.2                       39) python/3.10.8
 16) c-blosc/1.21.4                   40) mapl/2.40.3-esmf-8.5.0
 17) netcdf-c/4.9.2                   41) scotch/7.0.4
 18) netcdf-fortran/4.6.0             42) ufs_common
 19) parallel-netcdf/1.12.2           43) nccmp/1.9.0.1
 20) parallelio/2.5.10                44) ufs_hera.intel
 21) esmf/8.5.0                       45) w3nco/2.4.1
 22) fms/2023.02.01                   46) prod_util/1.2.2
 23) bacio/2.4.1                      47) wgrib2/3.1.2_wmo
 24) crtm-fix/2.4.0_emc

 

+ waveinit.sh[10]: status=0
+ waveinit.sh[11]: [[ 0 -ne 0 ]]
+ waveinit.sh[13]: export job=waveinit
+ waveinit.sh[13]: job=waveinit
+ waveinit.sh[14]: export jobid=waveinit.3322669
+ waveinit.sh[14]: jobid=waveinit.3322669
+ waveinit.sh[17]: echo

+ waveinit.sh[18]: echo '=============== START TO RUN WAVE INIT ==============='
=============== START TO RUN WAVE INIT ===============
+ waveinit.sh[20]: /scratch1/NCEPDEV/global/CI/2620/gfs/jobs/JGLOBAL_WAVE_INIT
Begin JGLOBAL_WAVE_INIT at Thu May 30 15:57:01 UTC 2024
+ JGLOBAL_WAVE_INIT[4]: source /scratch1/NCEPDEV/global/CI/2620/gfs/ush/jjob_header.sh -e waveinit -c 'base wave waveinit'
++ jjob_header.sh[44]: OPTIND=1
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[46]: case "${option}" in
++ jjob_header.sh[48]: env_job=waveinit
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[46]: case "${option}" in
++ jjob_header.sh[47]: read -ra configs
++ jjob_header.sh[45]: getopts c:e: option
++ jjob_header.sh[59]: shift 4
++ jjob_header.sh[61]: [[ -z waveinit ]]
++ jjob_header.sh[69]: export DATA=/scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c/waveinit.3322669
++ jjob_header.sh[69]: DATA=/scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c/waveinit.3322669
++ jjob_header.sh[70]: [[ YES == \Y\E\S ]]
++ jjob_header.sh[71]: rm -rf /scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c/waveinit.3322669
++ jjob_header.sh[73]: mkdir -p /scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c/waveinit.3322669
++ jjob_header.sh[74]: cd /scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c/waveinit.3322669
++ jjob_header.sh[80]: export cycle=t12z
++ jjob_header.sh[80]: cycle=t12z
++ jjob_header.sh[81]: setpdy.sh
sed: can't read /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/date/t12z: No such file or directory
Source PDY script to export PDYm7, ..., PDY, ..., PDYp7 variables.
++ jjob_header.sh[82]: source ./PDY
+++ PDY[1]: export PDYm7=20210316
+++ PDY[1]: PDYm7=20210316
+++ PDY[2]: export PDYm6=20210317
+++ PDY[2]: PDYm6=20210317
+++ PDY[3]: export PDYm5=20210318
+++ PDY[3]: PDYm5=20210318
+++ PDY[4]: export PDYm4=20210319
+++ PDY[4]: PDYm4=20210319
+++ PDY[5]: export PDYm3=20210320
+++ PDY[5]: PDYm3=20210320
+++ PDY[6]: export PDYm2=20210321
+++ PDY[6]: PDYm2=20210321
+++ PDY[7]: export PDYm1=20210322
+++ PDY[7]: PDYm1=20210322
+++ PDY[8]: export PDY=20210323
+++ PDY[8]: PDY=20210323
+++ PDY[9]: export PDYp1=20210324
+++ PDY[9]: PDYp1=20210324
+++ PDY[10]: export PDYp2=20210325
+++ PDY[10]: PDYp2=20210325
+++ PDY[11]: export PDYp3=20210326
+++ PDY[11]: PDYp3=20210326
+++ PDY[12]: export PDYp4=20210327
+++ PDY[12]: PDYp4=20210327
+++ PDY[13]: export PDYp5=20210328
+++ PDY[13]: PDYp5=20210328
+++ PDY[14]: export PDYp6=20210329
+++ PDY[14]: PDYp6=20210329
+++ PDY[15]: export PDYp7=20210330
+++ PDY[15]: PDYp7=20210330
++ jjob_header.sh[88]: export pid=3324040
++ jjob_header.sh[88]: pid=3324040
++ jjob_header.sh[89]: export pgmout=OUTPUT.3324040
++ jjob_header.sh[89]: pgmout=OUTPUT.3324040
++ jjob_header.sh[90]: export pgmerr=errfile
++ jjob_header.sh[90]: pgmerr=errfile
++ jjob_header.sh[96]: export EXPDIR=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c
++ jjob_header.sh[96]: EXPDIR=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c/config.base
+++ config.base[6]: echo 'BEGIN: config.base'
BEGIN: config.base
+++ config.base[9]: export machine=HERA
+++ config.base[9]: machine=HERA
+++ config.base[12]: export RUN_ENVIR=emc
+++ config.base[12]: RUN_ENVIR=emc
+++ config.base[15]: export ACCOUNT=nems
+++ config.base[15]: ACCOUNT=nems
+++ config.base[16]: export QUEUE=batch
+++ config.base[16]: QUEUE=batch
+++ config.base[17]: export QUEUE_SERVICE=batch
+++ config.base[17]: QUEUE_SERVICE=batch
+++ config.base[18]: export PARTITION_BATCH=hera
+++ config.base[18]: PARTITION_BATCH=hera
+++ config.base[19]: export PARTITION_SERVICE=service
+++ config.base[19]: PARTITION_SERVICE=service
+++ config.base[22]: export HPSS_PROJECT=emc-global
+++ config.base[22]: HPSS_PROJECT=emc-global
+++ config.base[25]: export HOMEgfs=/scratch1/NCEPDEV/global/CI/2620/gfs
+++ config.base[25]: HOMEgfs=/scratch1/NCEPDEV/global/CI/2620/gfs
+++ config.base[26]: export EXECgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/exec
+++ config.base[26]: EXECgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/exec
+++ config.base[27]: export FIXgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/fix
+++ config.base[27]: FIXgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/fix
+++ config.base[28]: export PARMgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/parm
+++ config.base[28]: PARMgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/parm
+++ config.base[29]: export SCRgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/scripts
+++ config.base[29]: SCRgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/scripts
+++ config.base[30]: export USHgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/ush
+++ config.base[30]: USHgfs=/scratch1/NCEPDEV/global/CI/2620/gfs/ush
+++ config.base[32]: export FIXam=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/am
+++ config.base[32]: FIXam=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/am
+++ config.base[33]: export FIXaer=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/aer
+++ config.base[33]: FIXaer=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/aer
+++ config.base[34]: export FIXcpl=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/cpl
+++ config.base[34]: FIXcpl=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/cpl
+++ config.base[35]: export FIXlut=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/lut
+++ config.base[35]: FIXlut=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/lut
+++ config.base[36]: export FIXorog=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/orog
+++ config.base[36]: FIXorog=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/orog
+++ config.base[37]: export FIXcice=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/cice
+++ config.base[37]: FIXcice=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/cice
+++ config.base[38]: export FIXmom=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/mom6
+++ config.base[38]: FIXmom=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/mom6
+++ config.base[39]: export FIXreg2grb2=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/reg2grb2
+++ config.base[39]: FIXreg2grb2=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/reg2grb2
+++ config.base[40]: export FIXugwd=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/ugwd
+++ config.base[40]: FIXugwd=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/ugwd
+++ config.base[41]: export FIXgdas=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/gdas
+++ config.base[41]: FIXgdas=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/gdas
+++ config.base[46]: export PACKAGEROOT=/scratch1/NCEPDEV/global/glopara/nwpara
+++ config.base[46]: PACKAGEROOT=/scratch1/NCEPDEV/global/glopara/nwpara
+++ config.base[47]: export COMROOT=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT
+++ config.base[47]: COMROOT=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT
+++ config.base[48]: export COMINsyn=/scratch1/NCEPDEV/global/glopara/com/gfs/prod/syndat
+++ config.base[48]: COMINsyn=/scratch1/NCEPDEV/global/glopara/com/gfs/prod/syndat
+++ config.base[49]: export DMPDIR=/scratch1/NCEPDEV/global/glopara/dump
+++ config.base[49]: DMPDIR=/scratch1/NCEPDEV/global/glopara/dump
+++ config.base[50]: export BASE_CPLIC=/scratch1/NCEPDEV/global/glopara/data/ICSDIR/prototype_ICs
+++ config.base[50]: BASE_CPLIC=/scratch1/NCEPDEV/global/glopara/data/ICSDIR/prototype_ICs
+++ config.base[54]: export COMINecmwf=/scratch1/NCEPDEV/global/glopara/data/external_gempak/ecmwf
+++ config.base[54]: COMINecmwf=/scratch1/NCEPDEV/global/glopara/data/external_gempak/ecmwf
+++ config.base[55]: export COMINnam=/scratch1/NCEPDEV/global/glopara/data/external_gempak/nam
+++ config.base[55]: COMINnam=/scratch1/NCEPDEV/global/glopara/data/external_gempak/nam
+++ config.base[56]: export COMINukmet=/scratch1/NCEPDEV/global/glopara/data/external_gempak/ukmet
+++ config.base[56]: COMINukmet=/scratch1/NCEPDEV/global/glopara/data/external_gempak/ukmet
+++ config.base[59]: export HOMEDIR=/scratch1/NCEPDEV/global/Terry.McGuinness
+++ config.base[59]: HOMEDIR=/scratch1/NCEPDEV/global/Terry.McGuinness
+++ config.base[60]: export STMP=/scratch1/NCEPDEV/stmp2/Terry.McGuinness
+++ config.base[60]: STMP=/scratch1/NCEPDEV/stmp2/Terry.McGuinness
+++ config.base[61]: export PTMP=/scratch1/NCEPDEV/stmp4/Terry.McGuinness
+++ config.base[61]: PTMP=/scratch1/NCEPDEV/stmp4/Terry.McGuinness
+++ config.base[62]: export NOSCRUB=/scratch1/NCEPDEV/global/Terry.McGuinness
+++ config.base[62]: NOSCRUB=/scratch1/NCEPDEV/global/Terry.McGuinness
+++ config.base[65]: export BASE_GIT=/scratch1/NCEPDEV/global/glopara/git
+++ config.base[65]: BASE_GIT=/scratch1/NCEPDEV/global/glopara/git
+++ config.base[68]: export DO_GOES=NO
+++ config.base[68]: DO_GOES=NO
+++ config.base[69]: export DO_BUFRSND=NO
+++ config.base[69]: DO_BUFRSND=NO
+++ config.base[70]: export DO_GEMPAK=NO
+++ config.base[70]: DO_GEMPAK=NO
+++ config.base[71]: export DO_AWIPS=NO
+++ config.base[71]: DO_AWIPS=NO
+++ config.base[72]: export DO_NPOESS=NO
+++ config.base[72]: DO_NPOESS=NO
+++ config.base[73]: export DO_TRACKER=YES
+++ config.base[73]: DO_TRACKER=YES
+++ config.base[74]: export DO_GENESIS=YES
+++ config.base[74]: DO_GENESIS=YES
+++ config.base[75]: export DO_GENESIS_FSU=NO
+++ config.base[75]: DO_GENESIS_FSU=NO
+++ config.base[76]: export DO_VERFOZN=YES
+++ config.base[76]: DO_VERFOZN=YES
+++ config.base[77]: export DO_VERFRAD=YES
+++ config.base[77]: DO_VERFRAD=YES
+++ config.base[78]: export DO_VMINMON=YES
+++ config.base[78]: DO_VMINMON=YES
+++ config.base[79]: export DO_MOS=NO
+++ config.base[79]: DO_MOS=NO
+++ config.base[85]: export REALTIME=YES
+++ config.base[85]: REALTIME=YES
+++ config.base[88]: export MODE=forecast-only
+++ config.base[88]: MODE=forecast-only
+++ config.base[97]: export FIXgsi=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/gsi
+++ config.base[97]: FIXgsi=/scratch1/NCEPDEV/global/CI/2620/gfs/fix/gsi
+++ config.base[98]: export HOMEpost=/scratch1/NCEPDEV/global/CI/2620/gfs
+++ config.base[98]: HOMEpost=/scratch1/NCEPDEV/global/CI/2620/gfs
+++ config.base[99]: export HOMEobsproc=/scratch1/NCEPDEV/global/glopara/git/obsproc/v1.1.2
+++ config.base[99]: HOMEobsproc=/scratch1/NCEPDEV/global/glopara/git/obsproc/v1.1.2
+++ config.base[102]: export 'NCP=/bin/cp -p'
+++ config.base[102]: NCP='/bin/cp -p'
+++ config.base[103]: export NMV=/bin/mv
+++ config.base[103]: NMV=/bin/mv
+++ config.base[104]: export 'NLN=/bin/ln -sf'
+++ config.base[104]: NLN='/bin/ln -sf'
+++ config.base[105]: export VERBOSE=YES
+++ config.base[105]: VERBOSE=YES
+++ config.base[106]: export KEEPDATA=NO
+++ config.base[106]: KEEPDATA=NO
+++ config.base[107]: export DEBUG_POSTSCRIPT=NO
+++ config.base[107]: DEBUG_POSTSCRIPT=NO
+++ config.base[108]: export CHGRP_RSTPROD=YES
+++ config.base[108]: CHGRP_RSTPROD=YES
+++ config.base[109]: export 'CHGRP_CMD=chgrp rstprod'
+++ config.base[109]: CHGRP_CMD='chgrp rstprod'
+++ config.base[110]: export NCDUMP=/scratch1/NCEPDEV/nems/role.epic/spack-stack/spack-stack-1.5.1/envs/unified-env-rocky8/install/intel/2021.5.0/netcdf-c-4.9.2-u7rbz5g/bin/ncdump
+++ config.base[110]: NCDUMP=/scratch1/NCEPDEV/nems/role.epic/spack-stack/spack-stack-1.5.1/envs/unified-env-rocky8/install/intel/2021.5.0/netcdf-c-4.9.2-u7rbz5g/bin/ncdump
+++ config.base[111]: export NCLEN=/scratch1/NCEPDEV/global/CI/2620/gfs/ush/getncdimlen
+++ config.base[111]: NCLEN=/scratch1/NCEPDEV/global/CI/2620/gfs/ush/getncdimlen
+++ config.base[114]: export BASE_ENV=/scratch1/NCEPDEV/global/CI/2620/gfs/env
+++ config.base[114]: BASE_ENV=/scratch1/NCEPDEV/global/CI/2620/gfs/env
+++ config.base[115]: export BASE_JOB=/scratch1/NCEPDEV/global/CI/2620/gfs/jobs/rocoto
+++ config.base[115]: BASE_JOB=/scratch1/NCEPDEV/global/CI/2620/gfs/jobs/rocoto
+++ config.base[118]: export SDATE=2021032312
+++ config.base[118]: SDATE=2021032312
+++ config.base[119]: export EDATE=2021032312
+++ config.base[119]: EDATE=2021032312
+++ config.base[120]: export EXP_WARM_START=.false.
+++ config.base[120]: EXP_WARM_START=.false.
+++ config.base[121]: export assim_freq=6
+++ config.base[121]: assim_freq=6
+++ config.base[122]: export PSLOT=C48_S2SW_d6f6ae0c
+++ config.base[122]: PSLOT=C48_S2SW_d6f6ae0c
+++ config.base[123]: export EXPDIR=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c
+++ config.base[123]: EXPDIR=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c
+++ config.base[124]: export ROTDIR=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c
+++ config.base[124]: ROTDIR=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c
+++ config.base[125]: export ROTDIR_DUMP=YES
+++ config.base[125]: ROTDIR_DUMP=YES
+++ config.base[126]: export DUMP_SUFFIX=
+++ config.base[126]: DUMP_SUFFIX=
+++ config.base[127]: [[ 2021032312 -ge 2019092100 ]]
+++ config.base[127]: [[ 2021032312 -le 2019110700 ]]
+++ config.base[130]: export DATAROOT=/scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c
+++ config.base[130]: DATAROOT=/scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c
+++ config.base[131]: export RUNDIR=/scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c
+++ config.base[131]: RUNDIR=/scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c
+++ config.base[132]: export ARCDIR=/scratch1/NCEPDEV/global/Terry.McGuinness/archive/C48_S2SW_d6f6ae0c
+++ config.base[132]: ARCDIR=/scratch1/NCEPDEV/global/Terry.McGuinness/archive/C48_S2SW_d6f6ae0c
+++ config.base[133]: export ATARDIR=/NCEPDEV/emc-global/1year/Terry.McGuinness/HERA/scratch/C48_S2SW_d6f6ae0c
+++ config.base[133]: ATARDIR=/NCEPDEV/emc-global/1year/Terry.McGuinness/HERA/scratch/C48_S2SW_d6f6ae0c
+++ config.base[136]: export envir=prod
+++ config.base[136]: envir=prod
+++ config.base[137]: export NET=gfs
+++ config.base[137]: NET=gfs
+++ config.base[138]: export RUN=gfs
+++ config.base[138]: RUN=gfs
+++ config.base[144]: source /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c/config.com
++++ config.com[4]: echo 'BEGIN: config.com'
BEGIN: config.com
++++ config.com[37]: [[ emc == \n\c\o ]]
++++ config.com[41]: COM_OBS_TMPL='${ROTDIR}/${RUN}.${YMD}/${HH}/obs'
++++ config.com[42]: COM_RTOFS_TMPL='${DMPDIR}'
++++ config.com[44]: declare -rx COM_OBS_TMPL COM_RTOFS_TMPL
++++ config.com[45]: declare -rx 'COM_OBSDMP_TMPL=${DMPDIR}/${DUMP}${DUMP_SUFFIX}.${YMD}/${HH}/atmos'
++++ config.com[47]: COM_BASE='${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}'
++++ config.com[49]: declare -rx 'COM_TOP_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}'
++++ config.com[51]: declare -rx 'COM_CONF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/conf'
++++ config.com[52]: declare -rx 'COM_ATMOS_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/input'
++++ config.com[53]: declare -rx 'COM_ATMOS_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/restart'
++++ config.com[54]: declare -rx 'COM_ATMOS_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/atmos'
++++ config.com[55]: declare -rx 'COM_SNOW_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/snow'
++++ config.com[56]: declare -rx 'COM_ATMOS_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/history'
++++ config.com[57]: declare -rx 'COM_ATMOS_MASTER_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/atmos/master'
++++ config.com[58]: declare -rx 'COM_ATMOS_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/grib2'
++++ config.com[59]: declare -rx 'COM_ATMOS_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/grib2/${GRID}'
++++ config.com[60]: declare -rx 'COM_ATMOS_BUFR_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/bufr'
++++ config.com[61]: declare -rx 'COM_ATMOS_GEMPAK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/gempak/${GRID}'
++++ config.com[62]: declare -rx 'COM_ATMOS_GENESIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/cyclone/genesis_vital'
++++ config.com[63]: declare -rx 'COM_ATMOS_TRACK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/cyclone/tracks'
++++ config.com[64]: declare -rx 'COM_ATMOS_GOES_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/goes_sim'
++++ config.com[65]: declare -rx 'COM_ATMOS_IMAGERY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/imagery'
++++ config.com[66]: declare -rx 'COM_ATMOS_OZNMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/oznmon'
++++ config.com[67]: declare -rx 'COM_ATMOS_RADMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/radmon'
++++ config.com[68]: declare -rx 'COM_ATMOS_MINMON_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/minmon'
++++ config.com[69]: declare -rx 'COM_ATMOS_WMO_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/atmos/wmo'
++++ config.com[71]: declare -rx 'COM_WAVE_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/restart'
++++ config.com[72]: declare -rx 'COM_WAVE_PREP_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/prep'
++++ config.com[73]: declare -rx 'COM_WAVE_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/wave/history'
++++ config.com[74]: declare -rx 'COM_WAVE_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/gridded'
++++ config.com[75]: declare -rx 'COM_WAVE_STATION_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/station'
++++ config.com[76]: declare -rx 'COM_WAVE_GEMPAK_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/gempak'
++++ config.com[77]: declare -rx 'COM_WAVE_WMO_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/wave/wmo'
++++ config.com[79]: declare -rx 'COM_OCEAN_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/history'
++++ config.com[80]: declare -rx 'COM_OCEAN_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/restart'
++++ config.com[81]: declare -rx 'COM_OCEAN_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ocean/input'
++++ config.com[82]: declare -rx 'COM_OCEAN_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/ocean'
++++ config.com[83]: declare -rx 'COM_OCEAN_NETCDF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/netcdf'
++++ config.com[84]: declare -rx 'COM_OCEAN_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/grib2'
++++ config.com[85]: declare -rx 'COM_OCEAN_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ocean/grib2/${GRID}'
++++ config.com[87]: declare -rx 'COM_ICE_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/ice'
++++ config.com[88]: declare -rx 'COM_ICE_INPUT_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/input'
++++ config.com[89]: declare -rx 'COM_ICE_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/history'
++++ config.com[90]: declare -rx 'COM_ICE_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/ice/restart'
++++ config.com[91]: declare -rx 'COM_ICE_NETCDF_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/netcdf'
++++ config.com[92]: declare -rx 'COM_ICE_GRIB_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/grib2'
++++ config.com[93]: declare -rx 'COM_ICE_GRIB_GRID_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/products/ice/grib2/${GRID}'
++++ config.com[95]: declare -rx 'COM_CHEM_HISTORY_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/chem/history'
++++ config.com[96]: declare -rx 'COM_CHEM_ANALYSIS_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/analysis/chem'
++++ config.com[98]: declare -rx 'COM_MED_RESTART_TMPL=${ROTDIR}/${RUN}.${YMD}/${HH}/${MEMDIR}/model_data/med/restart'
+++ config.base[147]: export 'ERRSCRIPT=eval [[ $err = 0 ]]'
+++ config.base[147]: ERRSCRIPT='eval [[ $err = 0 ]]'
+++ config.base[148]: export LOGSCRIPT=
+++ config.base[148]: LOGSCRIPT=
+++ config.base[151]: export 'REDOUT=1>'
+++ config.base[151]: REDOUT='1>'
+++ config.base[152]: export 'REDERR=2>'
+++ config.base[152]: REDERR='2>'
+++ config.base[154]: export SENDECF=NO
+++ config.base[154]: SENDECF=NO
+++ config.base[155]: export SENDSDM=NO
+++ config.base[155]: SENDSDM=NO
+++ config.base[156]: export SENDDBN_NTC=NO
+++ config.base[156]: SENDDBN_NTC=NO
+++ config.base[157]: export SENDDBN=NO
+++ config.base[157]: SENDDBN=NO
+++ config.base[158]: export DBNROOT=/scratch1/NCEPDEV/nems/role.epic/spack-stack/spack-stack-1.5.1/envs/unified-env-rocky8/install/intel/2021.5.0/prod-util-1.2.2-etmp4wu/fakedbn
+++ config.base[158]: DBNROOT=/scratch1/NCEPDEV/nems/role.epic/spack-stack/spack-stack-1.5.1/envs/unified-env-rocky8/install/intel/2021.5.0/prod-util-1.2.2-etmp4wu/fakedbn
+++ config.base[161]: export APP=S2SW
+++ config.base[161]: APP=S2SW
+++ config.base[163]: shopt -s extglob
+++ config.base[165]: case "${RUN}" in
+++ config.base[172]: shopt -u extglob
+++ config.base[175]: export DO_ATM=YES
+++ config.base[175]: DO_ATM=YES
+++ config.base[176]: export DO_COUPLED=NO
+++ config.base[176]: DO_COUPLED=NO
+++ config.base[177]: export DO_WAVE=NO
+++ config.base[177]: DO_WAVE=NO
+++ config.base[178]: export DO_OCN=NO
+++ config.base[178]: DO_OCN=NO
+++ config.base[179]: export DO_ICE=NO
+++ config.base[179]: DO_ICE=NO
+++ config.base[180]: export DO_AERO=NO
+++ config.base[180]: DO_AERO=NO
+++ config.base[181]: export AERO_FCST_CDUMP=
+++ config.base[181]: AERO_FCST_CDUMP=
+++ config.base[182]: export AERO_ANL_CDUMP=
+++ config.base[182]: AERO_ANL_CDUMP=
+++ config.base[183]: export WAVE_CDUMP=
+++ config.base[183]: WAVE_CDUMP=
+++ config.base[184]: export DOBNDPNT_WAVE=NO
+++ config.base[184]: DOBNDPNT_WAVE=NO
+++ config.base[185]: export DOIBP_WAV=NO
+++ config.base[185]: DOIBP_WAV=NO
+++ config.base[186]: export FRAC_GRID=.true.
+++ config.base[186]: FRAC_GRID=.true.
+++ config.base[187]: export DO_NEST=NO
+++ config.base[187]: DO_NEST=NO
+++ config.base[188]: [[ NO == \Y\E\S ]]
+++ config.base[192]: export ntiles=6
+++ config.base[192]: ntiles=6
+++ config.base[196]: export OPS_RES=C768
+++ config.base[196]: OPS_RES=C768
+++ config.base[199]: export LEVS=128
+++ config.base[199]: LEVS=128
+++ config.base[200]: export CASE=C48
+++ config.base[200]: CASE=C48
+++ config.base[201]: export CASE_ENS=@CASEENS@
+++ config.base[201]: CASE_ENS=@CASEENS@
+++ config.base[202]: export OCNRES=500
+++ config.base[202]: OCNRES=500
+++ config.base[203]: export ICERES=500
+++ config.base[203]: ICERES=500
+++ config.base[206]: case "${CASE}" in
+++ config.base[208]: export waveGRD=uglo_100km
+++ config.base[208]: waveGRD=uglo_100km
+++ config.base[225]: case "${APP}" in
+++ config.base[244]: export DO_COUPLED=YES
+++ config.base[244]: DO_COUPLED=YES
+++ config.base[245]: export DO_OCN=YES
+++ config.base[245]: DO_OCN=YES
+++ config.base[246]: export DO_ICE=YES
+++ config.base[246]: DO_ICE=YES
+++ config.base[248]: [[ S2SW =~ A$ ]]
+++ config.base[254]: [[ S2SW =~ ^S2SW ]]
+++ config.base[255]: export DO_WAVE=YES
+++ config.base[255]: DO_WAVE=YES
+++ config.base[256]: export WAVE_CDUMP=both
+++ config.base[256]: WAVE_CDUMP=both
+++ config.base[266]: [[ gfs =~ gdas ]]
+++ config.base[269]: [[ gfs =~ gfs ]]
+++ config.base[270]: export FHCYC=24
+++ config.base[270]: FHCYC=24
+++ config.base[274]: export FHMIN=0
+++ config.base[274]: FHMIN=0
+++ config.base[275]: export FHMAX=9
+++ config.base[275]: FHMAX=9
+++ config.base[276]: export FHOUT=3
+++ config.base[276]: FHOUT=3
+++ config.base[277]: export FHOUT_OCNICE=3
+++ config.base[277]: FHOUT_OCNICE=3
+++ config.base[280]: export EUPD_CYC=gdas
+++ config.base[280]: EUPD_CYC=gdas
+++ config.base[283]: export gfs_cyc=1
+++ config.base[283]: gfs_cyc=1
+++ config.base[286]: export FHMIN_GFS=0
+++ config.base[286]: FHMIN_GFS=0
+++ config.base[287]: export FHMAX_GFS=120
+++ config.base[287]: FHMAX_GFS=120
+++ config.base[288]: export FHOUT_GFS=3
+++ config.base[288]: FHOUT_GFS=3
+++ config.base[289]: export FHMAX_HF_GFS=0
+++ config.base[289]: FHMAX_HF_GFS=0
+++ config.base[290]: export FHOUT_HF_GFS=1
+++ config.base[290]: FHOUT_HF_GFS=1
+++ config.base[291]: export FHOUT_OCNICE_GFS=6
+++ config.base[291]: FHOUT_OCNICE_GFS=6
+++ config.base[292]: export FHMIN_WAV=0
+++ config.base[292]: FHMIN_WAV=0
+++ config.base[293]: export FHOUT_WAV=3
+++ config.base[293]: FHOUT_WAV=3
+++ config.base[294]: export FHMAX_HF_WAV=120
+++ config.base[294]: FHMAX_HF_WAV=120
+++ config.base[295]: export FHOUT_HF_WAV=1
+++ config.base[295]: FHOUT_HF_WAV=1
+++ config.base[296]: export FHMAX_WAV=9
+++ config.base[296]: FHMAX_WAV=9
+++ config.base[297]: export FHMAX_WAV_GFS=120
+++ config.base[297]: FHMAX_WAV_GFS=120
+++ config.base[298]: ((  gfs_cyc != 0  ))
+++ config.base[299]: export STEP_GFS=24
+++ config.base[299]: STEP_GFS=24
+++ config.base[304]: export ILPOST=1
+++ config.base[304]: ILPOST=1
+++ config.base[305]: ((  FHMAX_HF_GFS < 120  ))
+++ config.base[306]: export ILPOST=3
+++ config.base[306]: ILPOST=3
+++ config.base[310]: export restart_interval_gfs=12
+++ config.base[310]: restart_interval_gfs=12
+++ config.base[315]: export QUILTING=.true.
+++ config.base[315]: QUILTING=.true.
+++ config.base[316]: export OUTPUT_GRID=gaussian_grid
+++ config.base[316]: OUTPUT_GRID=gaussian_grid
+++ config.base[317]: export WRITE_DOPOST=.true.
+++ config.base[317]: WRITE_DOPOST=.true.
+++ config.base[318]: export WRITE_NSFLIP=.true.
+++ config.base[318]: WRITE_NSFLIP=.true.
+++ config.base[321]: export DOIAU=YES
+++ config.base[321]: DOIAU=YES
+++ config.base[322]: export IAUFHRS=3,6,9
+++ config.base[322]: IAUFHRS=3,6,9
+++ config.base[323]: export IAU_FHROT=3
+++ config.base[323]: IAU_FHROT=3
+++ config.base[324]: export IAU_DELTHRS=6
+++ config.base[324]: IAU_DELTHRS=6
+++ config.base[325]: export IAU_OFFSET=6
+++ config.base[325]: IAU_OFFSET=6
+++ config.base[326]: export DOIAU_ENKF=YES
+++ config.base[326]: DOIAU_ENKF=YES
+++ config.base[327]: export IAUFHRS_ENKF=3,6,9
+++ config.base[327]: IAUFHRS_ENKF=3,6,9
+++ config.base[328]: export IAU_DELTHRS_ENKF=6
+++ config.base[328]: IAU_DELTHRS_ENKF=6
+++ config.base[331]: export lobsdiag_forenkf=.true.
+++ config.base[331]: lobsdiag_forenkf=.true.
+++ config.base[339]: export imp_physics=8
+++ config.base[339]: imp_physics=8
+++ config.base[343]: export DO_JEDIATMVAR=NO
+++ config.base[343]: DO_JEDIATMVAR=NO
+++ config.base[344]: export DO_JEDIATMENS=NO
+++ config.base[344]: DO_JEDIATMENS=NO
+++ config.base[345]: export DO_JEDIOCNVAR=NO
+++ config.base[345]: DO_JEDIOCNVAR=NO
+++ config.base[346]: export DO_JEDISNOWDA=NO
+++ config.base[346]: DO_JEDISNOWDA=NO
+++ config.base[347]: export DO_MERGENSST=NO
+++ config.base[347]: DO_MERGENSST=NO
+++ config.base[350]: export DOHYBVAR=@DOHYBVAR@
+++ config.base[350]: DOHYBVAR=@DOHYBVAR@
+++ config.base[351]: export NMEM_ENS=0
+++ config.base[351]: NMEM_ENS=0
+++ config.base[352]: export SMOOTH_ENKF=NO
+++ config.base[352]: SMOOTH_ENKF=NO
+++ config.base[353]: export l4densvar=.true.
+++ config.base[353]: l4densvar=.true.
+++ config.base[354]: export lwrite4danl=.true.
+++ config.base[354]: lwrite4danl=.true.
+++ config.base[355]: export DO_CALC_INCREMENT=NO
+++ config.base[355]: DO_CALC_INCREMENT=NO
+++ config.base[358]: export NMEM_ENS_GFS=30
+++ config.base[358]: NMEM_ENS_GFS=30
+++ config.base[359]: export NMEM_ENS_GFS_OFFSET=20
+++ config.base[359]: NMEM_ENS_GFS_OFFSET=20
+++ config.base[360]: export DO_CALC_INCREMENT_ENKF_GFS=NO
+++ config.base[360]: DO_CALC_INCREMENT_ENKF_GFS=NO
+++ config.base[363]: [[ @DOHYBVAR@ = \Y\E\S ]]
+++ config.base[377]: [[ @DOHYBVAR@ == \N\O ]]
+++ config.base[385]: export ENKF_SPREAD=YES
+++ config.base[385]: ENKF_SPREAD=YES
+++ config.base[388]: [[ forecast-only = \c\y\c\l\e\d ]]
+++ config.base[388]: [[ YES = \N\O ]]
+++ config.base[388]: [[ forecast-only = \f\o\r\e\c\a\s\t\-\o\n\l\y ]]
+++ config.base[388]: [[ .false. = \.\f\a\l\s\e\. ]]
+++ config.base[389]: export IAU_OFFSET=0
+++ config.base[389]: IAU_OFFSET=0
+++ config.base[390]: export IAU_FHROT=0
+++ config.base[390]: IAU_FHROT=0
+++ config.base[391]: export IAUFHRS=6
+++ config.base[391]: IAUFHRS=6
+++ config.base[394]: [[ YES = \N\O ]]
+++ config.base[398]: [[ YES == \Y\E\S ]]
+++ config.base[399]: export restart_interval_enkfgdas=3
+++ config.base[399]: restart_interval_enkfgdas=3
+++ config.base[404]: export restart_interval_enkfgfs=3
+++ config.base[404]: restart_interval_enkfgfs=3
+++ config.base[406]: [[ YES == \Y\E\S ]]
+++ config.base[407]: export restart_interval_gdas=3
+++ config.base[407]: restart_interval_gdas=3
+++ config.base[412]: export GSI_SOILANAL=NO
+++ config.base[412]: GSI_SOILANAL=NO
+++ config.base[415]: export DONST=YES
+++ config.base[415]: DONST=YES
+++ config.base[416]: [[ YES = \Y\E\S ]]
+++ config.base[416]: export 'FNTSFA=        '
+++ config.base[416]: FNTSFA='        '
+++ config.base[419]: export nst_anl=.true.
+++ config.base[419]: nst_anl=.true.
+++ config.base[422]: export MAKE_NSSTBUFR=NO
+++ config.base[422]: MAKE_NSSTBUFR=NO
+++ config.base[425]: export MAKE_ACFTBUFR=NO
+++ config.base[425]: MAKE_ACFTBUFR=NO
+++ config.base[428]: export 'INCREMENTS_TO_ZERO='\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[428]: INCREMENTS_TO_ZERO=''\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[431]: export 'INCVARS_ZERO_STRAT='\''sphum_inc'\'','\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[431]: INCVARS_ZERO_STRAT=''\''sphum_inc'\'','\''liq_wat_inc'\'','\''icmr_inc'\'','\''rwmr_inc'\'','\''snmr_inc'\'','\''grle_inc'\'''
+++ config.base[432]: export INCVARS_EFOLD=5
+++ config.base[432]: INCVARS_EFOLD=5
+++ config.base[437]: export netcdf_diag=.true.
+++ config.base[437]: netcdf_diag=.true.
+++ config.base[438]: export binary_diag=.false.
+++ config.base[438]: binary_diag=.false.
+++ config.base[441]: export DO_METP=NO
+++ config.base[441]: DO_METP=NO
+++ config.base[442]: export DO_FIT2OBS=YES
+++ config.base[442]: DO_FIT2OBS=YES
+++ config.base[443]: export DO_VRFY_OCEANDA=NO
+++ config.base[443]: DO_VRFY_OCEANDA=NO
+++ config.base[446]: export HPSSARCH=YES
+++ config.base[446]: HPSSARCH=YES
+++ config.base[447]: export LOCALARCH=NO
+++ config.base[447]: LOCALARCH=NO
+++ config.base[448]: [[ YES = \Y\E\S ]]
+++ config.base[448]: [[ NO = \Y\E\S ]]
+++ config.base[452]: export ARCH_CYC=00
+++ config.base[452]: ARCH_CYC=00
+++ config.base[453]: export ARCH_WARMICFREQ=4
+++ config.base[453]: ARCH_WARMICFREQ=4
+++ config.base[454]: export ARCH_FCSTICFREQ=1
+++ config.base[454]: ARCH_FCSTICFREQ=1
+++ config.base[457]: export FITSARC=YES
+++ config.base[457]: FITSARC=YES
+++ config.base[458]: export FHMAX_FITS=132
+++ config.base[458]: FHMAX_FITS=132
+++ config.base[459]: [[ 132 -gt 120 ]]
+++ config.base[459]: export FHMAX_FITS=120
+++ config.base[459]: FHMAX_FITS=120
+++ config.base[462]: [[ NO = \Y\E\S ]]
+++ config.base[469]: export NUM_SND_COLLECTIVES=9
+++ config.base[469]: NUM_SND_COLLECTIVES=9
+++ config.base[471]: echo 'END: config.base'
END: config.base
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c/config.wave
+++ config.wave[6]: echo 'BEGIN: config.wave'
BEGIN: config.wave
+++ config.wave[13]: export CDUMPwave=gfswave
+++ config.wave[13]: CDUMPwave=gfswave
+++ config.wave[16]: export CDUMPRSTwave=gdas
+++ config.wave[16]: CDUMPRSTwave=gdas
+++ config.wave[19]: export waveGRDN=1
+++ config.wave[19]: waveGRDN=1
+++ config.wave[20]: export waveGRDG=10
+++ config.wave[20]: waveGRDG=10
+++ config.wave[21]: export USE_WAV_RMP=NO
+++ config.wave[21]: USE_WAV_RMP=NO
+++ config.wave[22]: export waveMULTIGRID=.false.
+++ config.wave[22]: waveMULTIGRID=.false.
+++ config.wave[23]: export MESH_WAV=mesh.uglo_100km.nc
+++ config.wave[23]: MESH_WAV=mesh.uglo_100km.nc
+++ config.wave[24]: export 'waveesmfGRD= '
+++ config.wave[24]: waveesmfGRD=' '
+++ config.wave[27]: case "${waveGRD}" in
+++ config.wave[79]: export waveinterpGRD=glo_200
+++ config.wave[79]: waveinterpGRD=glo_200
+++ config.wave[80]: export wavepostGRD=
+++ config.wave[80]: wavepostGRD=
+++ config.wave[81]: export waveuoutpGRD=uglo_100km
+++ config.wave[81]: waveuoutpGRD=uglo_100km
+++ config.wave[96]: export WAVEWND_DID=
+++ config.wave[96]: WAVEWND_DID=
+++ config.wave[97]: export WAVEWND_FID=
+++ config.wave[97]: WAVEWND_FID=
+++ config.wave[100]: [[ gfs == \g\f\s ]]
+++ config.wave[101]: export FHMAX_WAV=120
+++ config.wave[101]: FHMAX_WAV=120
+++ config.wave[103]: export WAVHINDH=0
+++ config.wave[103]: WAVHINDH=0
+++ config.wave[104]: export FHMAX_WAV_IBP=180
+++ config.wave[104]: FHMAX_WAV_IBP=180
+++ config.wave[105]: ((  FHMAX_WAV < FHMAX_WAV_IBP  ))
+++ config.wave[105]: export FHMAX_WAV_IBP=120
+++ config.wave[105]: FHMAX_WAV_IBP=120
+++ config.wave[108]: export DTFLD_WAV=3600
+++ config.wave[108]: DTFLD_WAV=3600
+++ config.wave[109]: export DTPNT_WAV=3600
+++ config.wave[109]: DTPNT_WAV=3600
+++ config.wave[110]: export FHINCP_WAV=1
+++ config.wave[110]: FHINCP_WAV=1
+++ config.wave[113]: export 'OUTPARS_WAV=WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'
+++ config.wave[113]: OUTPARS_WAV='WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'
+++ config.wave[116]: [[ gfs == \g\d\a\s ]]
+++ config.wave[120]: [[ 1 -ne 0 ]]
+++ config.wave[121]: export WAVHCYC=6
+++ config.wave[121]: WAVHCYC=6
+++ config.wave[122]: export FHMAX_WAV_CUR=192
+++ config.wave[122]: FHMAX_WAV_CUR=192
+++ config.wave[130]: export RSTTYPE_WAV=T
+++ config.wave[130]: RSTTYPE_WAV=T
+++ config.wave[131]: [[ gfs != gfs ]]
+++ config.wave[136]: rst_dt_gfs=43200
+++ config.wave[137]: [[ 43200 -gt 0 ]]
+++ config.wave[138]: export DT_1_RST_WAV=0
+++ config.wave[138]: DT_1_RST_WAV=0
+++ config.wave[141]: export DT_2_RST_WAV=43200
+++ config.wave[141]: DT_2_RST_WAV=43200
+++ config.wave[147]: export RSTIOFF_WAV=0
+++ config.wave[147]: RSTIOFF_WAV=0
+++ config.wave[152]: export RUNMEM=-1
+++ config.wave[152]: RUNMEM=-1
+++ config.wave[155]: ((  RUNMEM == -1  ))
+++ config.wave[157]: export waveMEMB=
+++ config.wave[157]: waveMEMB=
+++ config.wave[164]: export WW3ATMINP=CPL
+++ config.wave[164]: WW3ATMINP=CPL
+++ config.wave[165]: [[ YES == \Y\E\S ]]
+++ config.wave[166]: export WW3ICEINP=CPL
+++ config.wave[166]: WW3ICEINP=CPL
+++ config.wave[167]: export WAVEICE_FID=
+++ config.wave[167]: WAVEICE_FID=
+++ config.wave[173]: export WAVECUR_DID=rtofs
+++ config.wave[173]: WAVECUR_DID=rtofs
+++ config.wave[174]: [[ YES == \Y\E\S ]]
+++ config.wave[175]: export WW3CURINP=CPL
+++ config.wave[175]: WW3CURINP=CPL
+++ config.wave[176]: export WAVECUR_FID=
+++ config.wave[176]: WAVECUR_FID=
+++ config.wave[183]: export WW3ATMIENS=F
+++ config.wave[183]: WW3ATMIENS=F
+++ config.wave[184]: export WW3ICEIENS=F
+++ config.wave[184]: WW3ICEIENS=F
+++ config.wave[185]: export WW3CURIENS=F
+++ config.wave[185]: WW3CURIENS=F
+++ config.wave[187]: export GOFILETYPE=1
+++ config.wave[187]: GOFILETYPE=1
+++ config.wave[188]: export POFILETYPE=1
+++ config.wave[188]: POFILETYPE=1
+++ config.wave[192]: export FUNIPNT=T
+++ config.wave[192]: FUNIPNT=T
+++ config.wave[194]: export IOSRV=1
+++ config.wave[194]: IOSRV=1
+++ config.wave[196]: export FPNTPROC=T
+++ config.wave[196]: FPNTPROC=T
+++ config.wave[198]: export FGRDPROC=F
+++ config.wave[198]: FGRDPROC=F
+++ config.wave[200]: export FLAGMASKCOMP=F
+++ config.wave[200]: FLAGMASKCOMP=F
+++ config.wave[202]: export FLAGMASKOUT=F
+++ config.wave[202]: FLAGMASKOUT=F
+++ config.wave[204]: echo 'END: config.wave'
END: config.wave
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[97]: for config in "${configs[@]:-''}"
++ jjob_header.sh[98]: source /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c/config.waveinit
+++ config.waveinit[6]: echo 'BEGIN: config.waveinit'
BEGIN: config.waveinit
+++ config.waveinit[9]: . /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/EXPDIR/C48_S2SW_d6f6ae0c/config.resources waveinit
++++ config.resources[7]: ((  1 != 1  ))
++++ config.resources[31]: step=waveinit
++++ config.resources[33]: echo 'BEGIN: config.resources'
BEGIN: config.resources
++++ config.resources[35]: case ${machine} in
++++ config.resources[37]: npe_node_max=40
++++ config.resources[72]: export npe_node_max
++++ config.resources[74]: case ${step} in
++++ config.resources[111]: export wtime_waveinit=00:10:00
++++ config.resources[111]: wtime_waveinit=00:10:00
++++ config.resources[112]: export npe_waveinit=12
++++ config.resources[112]: npe_waveinit=12
++++ config.resources[113]: export nth_waveinit=1
++++ config.resources[113]: nth_waveinit=1
++++ config.resources[114]: export npe_node_waveinit=40
++++ config.resources[114]: npe_node_waveinit=40
++++ config.resources[115]: export NTASKS=12
++++ config.resources[115]: NTASKS=12
++++ config.resources[116]: export memory_waveinit=2GB
++++ config.resources[116]: memory_waveinit=2GB
++++ config.resources[1300]: echo 'END: config.resources'
END: config.resources
+++ config.waveinit[12]: export sigMODE=init
+++ config.waveinit[12]: sigMODE=init
+++ config.waveinit[14]: echo 'END: config.waveinit'
END: config.waveinit
++ jjob_header.sh[99]: status=0
++ jjob_header.sh[100]: ((  status != 0  ))
++ jjob_header.sh[110]: source /scratch1/NCEPDEV/global/CI/2620/gfs/env/HERA.env waveinit
+++ HERA.env[3]: [[ 1 -ne 1 ]]
+++ HERA.env[15]: step=waveinit
+++ HERA.env[17]: export 'launcher=srun -l --export=ALL'
+++ HERA.env[17]: launcher='srun -l --export=ALL'
+++ HERA.env[18]: export 'mpmd_opt=--multi-prog --output=mpmd.%j.%t.out'
+++ HERA.env[18]: mpmd_opt='--multi-prog --output=mpmd.%j.%t.out'
+++ HERA.env[29]: export OMP_STACKSIZE=2048000
+++ HERA.env[29]: OMP_STACKSIZE=2048000
+++ HERA.env[30]: export NTHSTACK=1024000000
+++ HERA.env[30]: NTHSTACK=1024000000
+++ HERA.env[34]: [[ -n 61031681 ]]
+++ HERA.env[35]: ulimit -s unlimited
+++ HERA.env[36]: ulimit -a
core file size          (blocks, -c) unlimited
data seg size           (kbytes, -d) unlimited
scheduling priority             (-e) 0
file size               (blocks, -f) unlimited
pending signals                 (-i) 379964
max locked memory       (kbytes, -l) unlimited
max memory size         (kbytes, -m) 2097152
open files                      (-n) 131072
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
real-time priority              (-r) 0
stack size              (kbytes, -s) unlimited
cpu time               (seconds, -t) unlimited
max user processes              (-u) 379964
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited
+++ HERA.env[39]: [[ waveinit = \p\r\e\p ]]
+++ HERA.env[39]: [[ waveinit = \p\r\e\p\b\u\f\r ]]
+++ HERA.env[48]: [[ waveinit = \p\r\e\p\s\n\o\w\o\b\s ]]
+++ HERA.env[52]: [[ waveinit = \p\r\e\p\_\e\m\i\s\s\i\o\n\s ]]
+++ HERA.env[56]: [[ waveinit = \w\a\v\e\i\n\i\t ]]
+++ HERA.env[58]: export CFP_MP=YES
+++ HERA.env[58]: CFP_MP=YES
+++ HERA.env[59]: [[ waveinit = \w\a\v\e\p\r\e\p ]]
+++ HERA.env[60]: export 'wavempexec=srun -l --export=ALL'
+++ HERA.env[60]: wavempexec='srun -l --export=ALL'
+++ HERA.env[61]: export 'wave_mpmd=--multi-prog --output=mpmd.%j.%t.out'
+++ HERA.env[61]: wave_mpmd='--multi-prog --output=mpmd.%j.%t.out'
++ jjob_header.sh[111]: status=0
++ jjob_header.sh[112]: ((  status != 0  ))
+ JGLOBAL_WAVE_INIT[8]: export errchk=err_chk
+ JGLOBAL_WAVE_INIT[8]: errchk=err_chk
+ JGLOBAL_WAVE_INIT[10]: export MP_PULSE=0
+ JGLOBAL_WAVE_INIT[10]: MP_PULSE=0
+ JGLOBAL_WAVE_INIT[13]: YMD=20210323
+ JGLOBAL_WAVE_INIT[13]: HH=12
+ JGLOBAL_WAVE_INIT[13]: declare_from_tmpl -rx COM_WAVE_PREP
+ bash_utils.sh[35]: [[ NO == \N\O ]]
+ bash_utils.sh[35]: set +x
declare_from_tmpl :: COM_WAVE_PREP=/scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c/gfs.20210323/12//model_data/wave/prep
+ JGLOBAL_WAVE_INIT[15]: mkdir -m 775 -p /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c/gfs.20210323/12//model_data/wave/prep
+ JGLOBAL_WAVE_INIT[18]: export 'wavempexec=srun -l --export=ALL'
+ JGLOBAL_WAVE_INIT[18]: wavempexec='srun -l --export=ALL'
+ JGLOBAL_WAVE_INIT[19]: export 'wave_mpmd=--multi-prog --output=mpmd.%j.%t.out'
+ JGLOBAL_WAVE_INIT[19]: wave_mpmd='--multi-prog --output=mpmd.%j.%t.out'
+ JGLOBAL_WAVE_INIT[22]: /scratch1/NCEPDEV/global/CI/2620/gfs/scripts/exgfs_wave_init.sh
Begin exgfs_wave_init.sh at Thu May 30 15:57:10 UTC 2024
+ exgfs_wave_init.sh[33]: err=0
+ exgfs_wave_init.sh[35]: cd /scratch1/NCEPDEV/stmp2/Terry.McGuinness/RUNDIRS/C48_S2SW_d6f6ae0c/waveinit.3322669
+ exgfs_wave_init.sh[37]: set +x
 
                      ********************************
                      *** MWW3 INIT CONFIG  SCRIPT ***
                      ********************************
                          Initial configuration script
                       Model identifier : gfswave
 
Starting at : Thu May 30 15:57:10 UTC 2024
 
+ exgfs_wave_init.sh[51]: '[' -z 12 ']'
+ exgfs_wave_init.sh[57]: set +x
 
 Script set to run with 12 tasks 
 
+ exgfs_wave_init.sh[67]: set +x
Preparing input files :
-----------------------
 
+ exgfs_wave_init.sh[75]: nmoddef=0
+ exgfs_wave_init.sh[77]: rm -f cmdfile
+ exgfs_wave_init.sh[78]: touch cmdfile
+ exgfs_wave_init.sh[79]: chmod 744 cmdfile
+ exgfs_wave_init.sh[82]: array=($WAVECUR_FID $WAVEICE_FID $WAVEWND_FID $waveuoutpGRD $waveGRD $waveesmfGRD $wavepostGRD $waveinterpGRD)
++ exgfs_wave_init.sh[83]: printf '%s\n' uglo_100km uglo_100km glo_200
++ exgfs_wave_init.sh[83]: sort -u
++ exgfs_wave_init.sh[83]: tr '\n' ' '
+ exgfs_wave_init.sh[83]: grdALL='glo_200 uglo_100km '
+ exgfs_wave_init.sh[85]: for grdID in ${grdALL}
+ exgfs_wave_init.sh[86]: [[ -f /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c/gfs.20210323/12//model_data/wave/prep/gfswave.mod_def.glo_200 ]]
+ exgfs_wave_init.sh[93]: set +x
 Mod def file for glo_200 not found in /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c/gfs.20210323/12//model_data/wave/prep. Setting up to generate ...
 
+ exgfs_wave_init.sh[97]: '[' -f /scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/ww3_grid.inp.glo_200 ']'
+ exgfs_wave_init.sh[99]: cp /scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/ww3_grid.inp.glo_200 ww3_grid.inp.glo_200
+ exgfs_wave_init.sh[102]: '[' -f ww3_grid.inp.glo_200 ']'
+ exgfs_wave_init.sh[104]: set +x
 
   ww3_grid.inp.glo_200 copied (/scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/ww3_grid.inp.glo_200).
 
+ exgfs_wave_init.sh[122]: '[' -f /scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/glo_200.msh ']'
+ exgfs_wave_init.sh[128]: [[ ! -d /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c/gfs.20210323/12//model_data/wave/prep ]]
+ exgfs_wave_init.sh[129]: '[' YES = YES ']'
+ exgfs_wave_init.sh[130]: echo '0 /scratch1/NCEPDEV/global/CI/2620/gfs/ush/wave_grid_moddef.sh glo_200 > glo_200.out 2>&1'
++ exgfs_wave_init.sh[135]: expr 0 + 1
+ exgfs_wave_init.sh[135]: nmoddef=1
+ exgfs_wave_init.sh[85]: for grdID in ${grdALL}
+ exgfs_wave_init.sh[86]: [[ -f /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c/gfs.20210323/12//model_data/wave/prep/gfswave.mod_def.uglo_100km ]]
+ exgfs_wave_init.sh[93]: set +x
 Mod def file for uglo_100km not found in /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c/gfs.20210323/12//model_data/wave/prep. Setting up to generate ...
 
+ exgfs_wave_init.sh[97]: '[' -f /scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/ww3_grid.inp.uglo_100km ']'
+ exgfs_wave_init.sh[99]: cp /scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/ww3_grid.inp.uglo_100km ww3_grid.inp.uglo_100km
+ exgfs_wave_init.sh[102]: '[' -f ww3_grid.inp.uglo_100km ']'
+ exgfs_wave_init.sh[104]: set +x
 
   ww3_grid.inp.uglo_100km copied (/scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/ww3_grid.inp.uglo_100km).
 
+ exgfs_wave_init.sh[122]: '[' -f /scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/uglo_100km.msh ']'
+ exgfs_wave_init.sh[124]: cp /scratch1/NCEPDEV/global/CI/2620/gfs/fix/wave/uglo_100km.msh uglo_100km.msh
+ exgfs_wave_init.sh[128]: [[ ! -d /scratch1/NCEPDEV/global/CI/2620/RUNTESTS/COMROOT/C48_S2SW_d6f6ae0c/gfs.20210323/12//model_data/wave/prep ]]
+ exgfs_wave_init.sh[129]: '[' YES = YES ']'
+ exgfs_wave_init.sh[130]: echo '1 /scratch1/NCEPDEV/global/CI/2620/gfs/ush/wave_grid_moddef.sh uglo_100km > uglo_100km.out 2>&1'
++ exgfs_wave_init.sh[135]: expr 1 + 1
+ exgfs_wave_init.sh[135]: nmoddef=2
+ exgfs_wave_init.sh[142]: '[' 2 -gt 0 ']'
+ exgfs_wave_init.sh[145]: set +x
 
 Generating 2 mod def files
 
++ exgfs_wave_init.sh[152]: wc -l cmdfile
++ exgfs_wave_init.sh[152]: awk '{print $1}'
+ exgfs_wave_init.sh[152]: wavenproc=2
++ exgfs_wave_init.sh[153]: echo 2
+ exgfs_wave_init.sh[153]: wavenproc=2
+ exgfs_wave_init.sh[157]: set +x
 
   Executing the mod_def command file at : Thu May 30 15:57:11 UTC 2024
   ------------------------------------
 
+ exgfs_wave_init.sh[163]: '[' 12 -gt 1 ']'
+ exgfs_wave_init.sh[165]: '[' YES = YES ']'
+ exgfs_wave_init.sh[166]: srun -l --export=ALL -n 2 --multi-prog --output=mpmd.%j.%t.out cmdfile
srun: error: h12c55: task 1: Exited with exit code 38
srun: Terminating StepId=61031681.0
srun: error: h12c55: task 0: Terminated
srun: Force Terminated StepId=61031681.0
+ exgfs_wave_init.sh[1]: postamble exgfs_wave_init.sh 1717084630 143
+ preamble.sh[70]: set +x
End exgfs_wave_init.sh at 15:57:27 with error code 143 (time elapsed: 00:00:17)
+ JGLOBAL_WAVE_INIT[1]: postamble JGLOBAL_WAVE_INIT 1717084621 143
+ preamble.sh[70]: set +x
End JGLOBAL_WAVE_INIT at 15:57:27 with error code 143 (time elapsed: 00:00:26)
+ waveinit.sh[1]: postamble waveinit.sh 1717084618 143
+ preamble.sh[70]: set +x
End waveinit.sh at 15:57:27 with error code 143 (time elapsed: 00:00:29)
_______________________________________________________________
Start Epilog on node h12c55 for job 61031681 :: Thu May 30 15:57:28 UTC 2024
Job 61031681 finished for user Terry.McGuinness in partition hera with exit code 143:0
_______________________________________________________________
End Epilogue Thu May 30 15:57:28 UTC 2024
